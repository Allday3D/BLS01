/* 
This is the Arduino program (ESP8266_ButtonLed_01.ino)

	---------------------------------------------------------------------------------------
	Bls01 mrt-2020  
	It connects to a MQTT server then:
	- on 0 switches off led (home/BLS01/Bls1in
	- on 1 switches on led
	- on 2 switches the state of the led

	It will reconnect to the server if the connection is lost using a blocking
	reconnect function.
	The current state is stored in EEPROM and restored on bootup

	---------------------------------------------------------------------------------------

	Copyright (C) 2020 AD3D
	Check out my page https://www.allday-3d.com/develop_bls.html

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/agpl-3.0.en.html>.
*/

// ----------------------------------------------------------------------------------------

#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <Bounce2.h>
#include <EEPROM.h>
#include <WiFiManager.h> 

#include <ESP8266WebServer.h>

const char index_html[] PROGMEM={"<!DOCTYPE html>\n<html dir=\"ltr\" lang=\"en-US\"><head><!-- Created by AD3D -->\n\t<meta charset=\"utf-8\">\n\t<title>BLS-01</title>\n\t<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\n\t<link rel=\"apple-touch-icon\" sizes=\"144x144\" href=\"/favicon_144x144.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"144x144\"  href=\"/favicon_144x144.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"48x48\" href=\"/favicon.ico\">\n\t<link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n\t<script src=\"jquery.min.js\"></script>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n<style>\n\n</style>\n\t\n<script>\n$(document).ready(function() {\n            setInterval(\"changeOutput(pinToToggle)\", 2000);\n\t\t\t\n        });\n\nfunction changeOutput(pinToToggle) {\n            var someUrl = \"/digital_output/toggle\";\n            $.ajax({\n\t\t\turl: someUrl,\n\t\t\tdataType: \"text\",\n\t\t\tsuccess: function(response) {\n\t\t\tif (response == '0') {\n\t\t\t$(\"#myImage\").attr(\"src\", \"bulb_off.png\");\n\t\t\t} else if (response == '1') {\n\t\t\t$(\"#myImage\").attr(\"src\", \"bulb_on.png\");\n\t\t\t}\n\t\t\t},\n\t\t\ttimeout: 2000\n            })\n\t\t\t}\n</script>\n</head>\n<body>\n\n<div class=\"wrapper\">\n\t<header class=\"header\"> \n\t\t<h1><a href=\"https://github.com/Allday3D\" target=\"_blank\"><img src=\"favicon_144x144.png\" width=\"60%\"></a>Bls-01</h1>\n\t</header>\n\t<aside class=\"sidebar\">\n\t\t<h2>Button load switch</h2>\n\t\t<h3>Switch the state off the lightbulb</h3>\n\t\t<button class=\"button\" id=\"switchstate\" style=\"width:100%\" onclick=\"changeOutput();\">on/off</button>\n\t</aside>\n\t<article class=\"content\" style=\"background-color: #282828;\">\n\t\t<span class=\"mousechange\"><img id=\"myImage\" style=\"cursor: hand;\" onclick=\"changeOutput()\" src=\"bulb_off.png\" width=\"80\" height=\"120\"></span>\n\t</article>\n\t<footer class=\"footer\"><h1>Made by <a href=\"https://www.allday-3d.com\" target=\"_blank\">AD3D</a>.</h1></footer>\n</div>\n\n\n\n</body>\n</html>\n" };

const char bulb_off_png[] PROGMEM={0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x78, 0x08, 0x06, 0x00, 0x00, 0x00, 0x65, 0xEE, 0x75, 0xF6, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0E, 0xC4, 0x00, 0x00, 0x0E, 0xC4, 0x01, 0x95, 0x2B, 0x0E, 0x1B, 0x00, 0x00, 0x0A, 0x4F, 0x69, 0x43, 0x43, 0x50, 0x50, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x20, 0x49, 0x43, 0x43, 0x20, 0x70, 0x72, 0x6F, 0x66, 0x69, 0x6C, 0x65, 0x00, 0x00, 0x78, 0xDA, 0x9D, 0x53, 0x67, 0x54, 0x53, 0xE9, 0x16, 0x3D, 0xF7, 0xDE, 0xF4, 0x42, 0x4B, 0x88, 0x80, 0x94, 0x4B, 0x6F, 0x52, 0x15, 0x08, 0x20, 0x52, 0x42, 0x8B, 0x80, 0x14, 0x91, 0x26, 0x2A, 0x21, 0x09, 0x10, 0x4A, 0x88, 0x21, 0xA1, 0xD9, 0x15, 0x51, 0xC1, 0x11, 0x45, 0x45, 0x04, 0x1B, 0xC8, 0xA0, 0x88, 0x03, 0x8E, 0x8E, 0x80, 0x8C, 0x15, 0x51, 0x2C, 0x0C, 0x8A, 0x0A, 0xD8, 0x07, 0xE4, 0x21, 0xA2, 0x8E, 0x83, 0xA3, 0x88, 0x8A, 0xCA, 0xFB, 0xE1, 0x7B, 0xA3, 0x6B, 0xD6, 0xBC, 0xF7, 0xE6, 0xCD, 0xFE, 0xB5, 0xD7, 0x3E, 0xE7, 0xAC, 0xF3, 0x9D, 0xB3, 0xCF, 0x07, 0xC0, 0x08, 0x0C, 0x96, 0x48, 0x33, 0x51, 0x35, 0x80, 0x0C, 0xA9, 0x42, 0x1E, 0x11, 0xE0, 0x83, 0xC7, 0xC4, 0xC6, 0xE1, 0xE4, 0x2E, 0x40, 0x81, 0x0A, 0x24, 0x70, 0x00, 0x10, 0x08, 0xB3, 0x64, 0x21, 0x73, 0xFD, 0x23, 0x01, 0x00, 0xF8, 0x7E, 0x3C, 0x3C, 0x2B, 0x22, 0xC0, 0x07, 0xBE, 0x00, 0x01, 0x78, 0xD3, 0x0B, 0x08, 0x00, 0xC0, 0x4D, 0x9B, 0xC0, 0x30, 0x1C, 0x87, 0xFF, 0x0F, 0xEA, 0x42, 0x99, 0x5C, 0x01, 0x80, 0x84, 0x01, 0xC0, 0x74, 0x91, 0x38, 0x4B, 0x08, 0x80, 0x14, 0x00, 0x40, 0x7A, 0x8E, 0x42, 0xA6, 0x00, 0x40, 0x46, 0x01, 0x80, 0x9D, 0x98, 0x26, 0x53, 0x00, 0xA0, 0x04, 0x00, 0x60, 0xCB, 0x63, 0x62, 0xE3, 0x00, 0x50, 0x2D, 0x00, 0x60, 0x27, 0x7F, 0xE6, 0xD3, 0x00, 0x80, 0x9D, 0xF8, 0x99, 0x7B, 0x01, 0x00, 0x5B, 0x94, 0x21, 0x15, 0x01, 0xA0, 0x91, 0x00, 0x20, 0x13, 0x65, 0x88, 0x44, 0x00, 0x68, 0x3B, 0x00, 0xAC, 0xCF, 0x56, 0x8A, 0x45, 0x00, 0x58, 0x30, 0x00, 0x14, 0x66, 0x4B, 0xC4, 0x39, 0x00, 0xD8, 0x2D, 0x00, 0x30, 0x49, 0x57, 0x66, 0x48, 0x00, 0xB0, 0xB7, 0x00, 0xC0, 0xCE, 0x10, 0x0B, 0xB2, 0x00, 0x08, 0x0C, 0x00, 0x30, 0x51, 0x88, 0x85, 0x29, 0x00, 0x04, 0x7B, 0x00, 0x60, 0xC8, 0x23, 0x23, 0x78, 0x00, 0x84, 0x99, 0x00, 0x14, 0x46, 0xF2, 0x57, 0x3C, 0xF1, 0x2B, 0xAE, 0x10, 0xE7, 0x2A, 0x00, 0x00, 0x78, 0x99, 0xB2, 0x3C, 0xB9, 0x24, 0x39, 0x45, 0x81, 0x5B, 0x08, 0x2D, 0x71, 0x07, 0x57, 0x57, 0x2E, 0x1E, 0x28, 0xCE, 0x49, 0x17, 0x2B, 0x14, 0x36, 0x61, 0x02, 0x61, 0x9A, 0x40, 0x2E, 0xC2, 0x79, 0x99, 0x19, 0x32, 0x81, 0x34, 0x0F, 0xE0, 0xF3, 0xCC, 0x00, 0x00, 0xA0, 0x91, 0x15, 0x11, 0xE0, 0x83, 0xF3, 0xFD, 0x78, 0xCE, 0x0E, 0xAE, 0xCE, 0xCE, 0x36, 0x8E, 0xB6, 0x0E, 0x5F, 0x2D, 0xEA, 0xBF, 0x06, 0xFF, 0x22, 0x62, 0x62, 0xE3, 0xFE, 0xE5, 0xCF, 0xAB, 0x70, 0x40, 0x00, 0x00, 0xE1, 0x74, 0x7E, 0xD1, 0xFE, 0x2C, 0x2F, 0xB3, 0x1A, 0x80, 0x3B, 0x06, 0x80, 0x6D, 0xFE, 0xA2, 0x25, 0xEE, 0x04, 0x68, 0x5E, 0x0B, 0xA0, 0x75, 0xF7, 0x8B, 0x66, 0xB2, 0x0F, 0x40, 0xB5, 0x00, 0xA0, 0xE9, 0xDA, 0x57, 0xF3, 0x70, 0xF8, 0x7E, 0x3C, 0x3C, 0x45, 0xA1, 0x90, 0xB9, 0xD9, 0xD9, 0xE5, 0xE4, 0xE4, 0xD8, 0x4A, 0xC4, 0x42, 0x5B, 0x61, 0xCA, 0x57, 0x7D, 0xFE, 0x67, 0xC2, 0x5F, 0xC0, 0x57, 0xFD, 0x6C, 0xF9, 0x7E, 0x3C, 0xFC, 0xF7, 0xF5, 0xE0, 0xBE, 0xE2, 0x24, 0x81, 0x32, 0x5D, 0x81, 0x47, 0x04, 0xF8, 0xE0, 0xC2, 0xCC, 0xF4, 0x4C, 0xA5, 0x1C, 0xCF, 0x92, 0x09, 0x84, 0x62, 0xDC, 0xE6, 0x8F, 0x47, 0xFC, 0xB7, 0x0B, 0xFF, 0xFC, 0x1D, 0xD3, 0x22, 0xC4, 0x49, 0x62, 0xB9, 0x58, 0x2A, 0x14, 0xE3, 0x51, 0x12, 0x71, 0x8E, 0x44, 0x9A, 0x8C, 0xF3, 0x32, 0xA5, 0x22, 0x89, 0x42, 0x92, 0x29, 0xC5, 0x25, 0xD2, 0xFF, 0x64, 0xE2, 0xDF, 0x2C, 0xFB, 0x03, 0x3E, 0xDF, 0x35, 0x00, 0xB0, 0x6A, 0x3E, 0x01, 0x7B, 0x91, 0x2D, 0xA8, 0x5D, 0x63, 0x03, 0xF6, 0x4B, 0x27, 0x10, 0x58, 0x74, 0xC0, 0xE2, 0xF7, 0x00, 0x00, 0xF2, 0xBB, 0x6F, 0xC1, 0xD4, 0x28, 0x08, 0x03, 0x80, 0x68, 0x83, 0xE1, 0xCF, 0x77, 0xFF, 0xEF, 0x3F, 0xFD, 0x47, 0xA0, 0x25, 0x00, 0x80, 0x66, 0x49, 0x92, 0x71, 0x00, 0x00, 0x5E, 0x44, 0x24, 0x2E, 0x54, 0xCA, 0xB3, 0x3F, 0xC7, 0x08, 0x00, 0x00, 0x44, 0xA0, 0x81, 0x2A, 0xB0, 0x41, 0x1B, 0xF4, 0xC1, 0x18, 0x2C, 0xC0, 0x06, 0x1C, 0xC1, 0x05, 0xDC, 0xC1, 0x0B, 0xFC, 0x60, 0x36, 0x84, 0x42, 0x24, 0xC4, 0xC2, 0x42, 0x10, 0x42, 0x0A, 0x64, 0x80, 0x1C, 0x72, 0x60, 0x29, 0xAC, 0x82, 0x42, 0x28, 0x86, 0xCD, 0xB0, 0x1D, 0x2A, 0x60, 0x2F, 0xD4, 0x40, 0x1D, 0x34, 0xC0, 0x51, 0x68, 0x86, 0x93, 0x70, 0x0E, 0x2E, 0xC2, 0x55, 0xB8, 0x0E, 0x3D, 0x70, 0x0F, 0xFA, 0x61, 0x08, 0x9E, 0xC1, 0x28, 0xBC, 0x81, 0x09, 0x04, 0x41, 0xC8, 0x08, 0x13, 0x61, 0x21, 0xDA, 0x88, 0x01, 0x62, 0x8A, 0x58, 0x23, 0x8E, 0x08, 0x17, 0x99, 0x85, 0xF8, 0x21, 0xC1, 0x48, 0x04, 0x12, 0x8B, 0x24, 0x20, 0xC9, 0x88, 0x14, 0x51, 0x22, 0x4B, 0x91, 0x35, 0x48, 0x31, 0x52, 0x8A, 0x54, 0x20, 0x55, 0x48, 0x1D, 0xF2, 0x3D, 0x72, 0x02, 0x39, 0x87, 0x5C, 0x46, 0xBA, 0x91, 0x3B, 0xC8, 0x00, 0x32, 0x82, 0xFC, 0x86, 0xBC, 0x47, 0x31, 0x94, 0x81, 0xB2, 0x51, 0x3D, 0xD4, 0x0C, 0xB5, 0x43, 0xB9, 0xA8, 0x37, 0x1A, 0x84, 0x46, 0xA2, 0x0B, 0xD0, 0x64, 0x74, 0x31, 0x9A, 0x8F, 0x16, 0xA0, 0x9B, 0xD0, 0x72, 0xB4, 0x1A, 0x3D, 0x8C, 0x36, 0xA1, 0xE7, 0xD0, 0xAB, 0x68, 0x0F, 0xDA, 0x8F, 0x3E, 0x43, 0xC7, 0x30, 0xC0, 0xE8, 0x18, 0x07, 0x33, 0xC4, 0x6C, 0x30, 0x2E, 0xC6, 0xC3, 0x42, 0xB1, 0x38, 0x2C, 0x09, 0x93, 0x63, 0xCB, 0xB1, 0x22, 0xAC, 0x0C, 0xAB, 0xC6, 0x1A, 0xB0, 0x56, 0xAC, 0x03, 0xBB, 0x89, 0xF5, 0x63, 0xCF, 0xB1, 0x77, 0x04, 0x12, 0x81, 0x45, 0xC0, 0x09, 0x36, 0x04, 0x77, 0x42, 0x20, 0x61, 0x1E, 0x41, 0x48, 0x58, 0x4C, 0x58, 0x4E, 0xD8, 0x48, 0xA8, 0x20, 0x1C, 0x24, 0x34, 0x11, 0xDA, 0x09, 0x37, 0x09, 0x03, 0x84, 0x51, 0xC2, 0x27, 0x22, 0x93, 0xA8, 0x4B, 0xB4, 0x26, 0xBA, 0x11, 0xF9, 0xC4, 0x18, 0x62, 0x32, 0x31, 0x87, 0x58, 0x48, 0x2C, 0x23, 0xD6, 0x12, 0x8F, 0x13, 0x2F, 0x10, 0x7B, 0x88, 0x43, 0xC4, 0x37, 0x24, 0x12, 0x89, 0x43, 0x32, 0x27, 0xB9, 0x90, 0x02, 0x49, 0xB1, 0xA4, 0x54, 0xD2, 0x12, 0xD2, 0x46, 0xD2, 0x6E, 0x52, 0x23, 0xE9, 0x2C, 0xA9, 0x9B, 0x34, 0x48, 0x1A, 0x23, 0x93, 0xC9, 0xDA, 0x64, 0x6B, 0xB2, 0x07, 0x39, 0x94, 0x2C, 0x20, 0x2B, 0xC8, 0x85, 0xE4, 0x9D, 0xE4, 0xC3, 0xE4, 0x33, 0xE4, 0x1B, 0xE4, 0x21, 0xF2, 0x5B, 0x0A, 0x9D, 0x62, 0x40, 0x71, 0xA4, 0xF8, 0x53, 0xE2, 0x28, 0x52, 0xCA, 0x6A, 0x4A, 0x19, 0xE5, 0x10, 0xE5, 0x34, 0xE5, 0x06, 0x65, 0x98, 0x32, 0x41, 0x55, 0xA3, 0x9A, 0x52, 0xDD, 0xA8, 0xA1, 0x54, 0x11, 0x35, 0x8F, 0x5A, 0x42, 0xAD, 0xA1, 0xB6, 0x52, 0xAF, 0x51, 0x87, 0xA8, 0x13, 0x34, 0x75, 0x9A, 0x39, 0xCD, 0x83, 0x16, 0x49, 0x4B, 0xA5, 0xAD, 0xA2, 0x95, 0xD3, 0x1A, 0x68, 0x17, 0x68, 0xF7, 0x69, 0xAF, 0xE8, 0x74, 0xBA, 0x11, 0xDD, 0x95, 0x1E, 0x4E, 0x97, 0xD0, 0x57, 0xD2, 0xCB, 0xE9, 0x47, 0xE8, 0x97, 0xE8, 0x03, 0xF4, 0x77, 0x0C, 0x0D, 0x86, 0x15, 0x83, 0xC7, 0x88, 0x67, 0x28, 0x19, 0x9B, 0x18, 0x07, 0x18, 0x67, 0x19, 0x77, 0x18, 0xAF, 0x98, 0x4C, 0xA6, 0x19, 0xD3, 0x8B, 0x19, 0xC7, 0x54, 0x30, 0x37, 0x31, 0xEB, 0x98, 0xE7, 0x99, 0x0F, 0x99, 0x6F, 0x55, 0x58, 0x2A, 0xB6, 0x2A, 0x7C, 0x15, 0x91, 0xCA, 0x0A, 0x95, 0x4A, 0x95, 0x26, 0x95, 0x1B, 0x2A, 0x2F, 0x54, 0xA9, 0xAA, 0xA6, 0xAA, 0xDE, 0xAA, 0x0B, 0x55, 0xF3, 0x55, 0xCB, 0x54, 0x8F, 0xA9, 0x5E, 0x53, 0x7D, 0xAE, 0x46, 0x55, 0x33, 0x53, 0xE3, 0xA9, 0x09, 0xD4, 0x96, 0xAB, 0x55, 0xAA, 0x9D, 0x50, 0xEB, 0x53, 0x1B, 0x53, 0x67, 0xA9, 0x3B, 0xA8, 0x87, 0xAA, 0x67, 0xA8, 0x6F, 0x54, 0x3F, 0xA4, 0x7E, 0x59, 0xFD, 0x89, 0x06, 0x59, 0xC3, 0x4C, 0xC3, 0x4F, 0x43, 0xA4, 0x51, 0xA0, 0xB1, 0x5F, 0xE3, 0xBC, 0xC6, 0x20, 0x0B, 0x63, 0x19, 0xB3, 0x78, 0x2C, 0x21, 0x6B, 0x0D, 0xAB, 0x86, 0x75, 0x81, 0x35, 0xC4, 0x26, 0xB1, 0xCD, 0xD9, 0x7C, 0x76, 0x2A, 0xBB, 0x98, 0xFD, 0x1D, 0xBB, 0x8B, 0x3D, 0xAA, 0xA9, 0xA1, 0x39, 0x43, 0x33, 0x4A, 0x33, 0x57, 0xB3, 0x52, 0xF3, 0x94, 0x66, 0x3F, 0x07, 0xE3, 0x98, 0x71, 0xF8, 0x9C, 0x74, 0x4E, 0x09, 0xE7, 0x28, 0xA7, 0x97, 0xF3, 0x7E, 0x8A, 0xDE, 0x14, 0xEF, 0x29, 0xE2, 0x29, 0x1B, 0xA6, 0x34, 0x4C, 0xB9, 0x31, 0x65, 0x5C, 0x6B, 0xAA, 0x96, 0x97, 0x96, 0x58, 0xAB, 0x48, 0xAB, 0x51, 0xAB, 0x47, 0xEB, 0xBD, 0x36, 0xAE, 0xED, 0xA7, 0x9D, 0xA6, 0xBD, 0x45, 0xBB, 0x59, 0xFB, 0x81, 0x0E, 0x41, 0xC7, 0x4A, 0x27, 0x5C, 0x27, 0x47, 0x67, 0x8F, 0xCE, 0x05, 0x9D, 0xE7, 0x53, 0xD9, 0x53, 0xDD, 0xA7, 0x0A, 0xA7, 0x16, 0x4D, 0x3D, 0x3A, 0xF5, 0xAE, 0x2E, 0xAA, 0x6B, 0xA5, 0x1B, 0xA1, 0xBB, 0x44, 0x77, 0xBF, 0x6E, 0xA7, 0xEE, 0x98, 0x9E, 0xBE, 0x5E, 0x80, 0x9E, 0x4C, 0x6F, 0xA7, 0xDE, 0x79, 0xBD, 0xE7, 0xFA, 0x1C, 0x7D, 0x2F, 0xFD, 0x54, 0xFD, 0x6D, 0xFA, 0xA7, 0xF5, 0x47, 0x0C, 0x58, 0x06, 0xB3, 0x0C, 0x24, 0x06, 0xDB, 0x0C, 0xCE, 0x18, 0x3C, 0xC5, 0x35, 0x71, 0x6F, 0x3C, 0x1D, 0x2F, 0xC7, 0xDB, 0xF1, 0x51, 0x43, 0x5D, 0xC3, 0x40, 0x43, 0xA5, 0x61, 0x95, 0x61, 0x97, 0xE1, 0x84, 0x91, 0xB9, 0xD1, 0x3C, 0xA3, 0xD5, 0x46, 0x8D, 0x46, 0x0F, 0x8C, 0x69, 0xC6, 0x5C, 0xE3, 0x24, 0xE3, 0x6D, 0xC6, 0x6D, 0xC6, 0xA3, 0x26, 0x06, 0x26, 0x21, 0x26, 0x4B, 0x4D, 0xEA, 0x4D, 0xEE, 0x9A, 0x52, 0x4D, 0xB9, 0xA6, 0x29, 0xA6, 0x3B, 0x4C, 0x3B, 0x4C, 0xC7, 0xCD, 0xCC, 0xCD, 0xA2, 0xCD, 0xD6, 0x99, 0x35, 0x9B, 0x3D, 0x31, 0xD7, 0x32, 0xE7, 0x9B, 0xE7, 0x9B, 0xD7, 0x9B, 0xDF, 0xB7, 0x60, 0x5A, 0x78, 0x5A, 0x2C, 0xB6, 0xA8, 0xB6, 0xB8, 0x65, 0x49, 0xB2, 0xE4, 0x5A, 0xA6, 0x59, 0xEE, 0xB6, 0xBC, 0x6E, 0x85, 0x5A, 0x39, 0x59, 0xA5, 0x58, 0x55, 0x5A, 0x5D, 0xB3, 0x46, 0xAD, 0x9D, 0xAD, 0x25, 0xD6, 0xBB, 0xAD, 0xBB, 0xA7, 0x11, 0xA7, 0xB9, 0x4E, 0x93, 0x4E, 0xAB, 0x9E, 0xD6, 0x67, 0xC3, 0xB0, 0xF1, 0xB6, 0xC9, 0xB6, 0xA9, 0xB7, 0x19, 0xB0, 0xE5, 0xD8, 0x06, 0xDB, 0xAE, 0xB6, 0x6D, 0xB6, 0x7D, 0x61, 0x67, 0x62, 0x17, 0x67, 0xB7, 0xC5, 0xAE, 0xC3, 0xEE, 0x93, 0xBD, 0x93, 0x7D, 0xBA, 0x7D, 0x8D, 0xFD, 0x3D, 0x07, 0x0D, 0x87, 0xD9, 0x0E, 0xAB, 0x1D, 0x5A, 0x1D, 0x7E, 0x73, 0xB4, 0x72, 0x14, 0x3A, 0x56, 0x3A, 0xDE, 0x9A, 0xCE, 0x9C, 0xEE, 0x3F, 0x7D, 0xC5, 0xF4, 0x96, 0xE9, 0x2F, 0x67, 0x58, 0xCF, 0x10, 0xCF, 0xD8, 0x33, 0xE3, 0xB6, 0x13, 0xCB, 0x29, 0xC4, 0x69, 0x9D, 0x53, 0x9B, 0xD3, 0x47, 0x67, 0x17, 0x67, 0xB9, 0x73, 0x83, 0xF3, 0x88, 0x8B, 0x89, 0x4B, 0x82, 0xCB, 0x2E, 0x97, 0x3E, 0x2E, 0x9B, 0x1B, 0xC6, 0xDD, 0xC8, 0xBD, 0xE4, 0x4A, 0x74, 0xF5, 0x71, 0x5D, 0xE1, 0x7A, 0xD2, 0xF5, 0x9D, 0x9B, 0xB3, 0x9B, 0xC2, 0xED, 0xA8, 0xDB, 0xAF, 0xEE, 0x36, 0xEE, 0x69, 0xEE, 0x87, 0xDC, 0x9F, 0xCC, 0x34, 0x9F, 0x29, 0x9E, 0x59, 0x33, 0x73, 0xD0, 0xC3, 0xC8, 0x43, 0xE0, 0x51, 0xE5, 0xD1, 0x3F, 0x0B, 0x9F, 0x95, 0x30, 0x6B, 0xDF, 0xAC, 0x7E, 0x4F, 0x43, 0x4F, 0x81, 0x67, 0xB5, 0xE7, 0x23, 0x2F, 0x63, 0x2F, 0x91, 0x57, 0xAD, 0xD7, 0xB0, 0xB7, 0xA5, 0x77, 0xAA, 0xF7, 0x61, 0xEF, 0x17, 0x3E, 0xF6, 0x3E, 0x72, 0x9F, 0xE3, 0x3E, 0xE3, 0x3C, 0x37, 0xDE, 0x32, 0xDE, 0x59, 0x5F, 0xCC, 0x37, 0xC0, 0xB7, 0xC8, 0xB7, 0xCB, 0x4F, 0xC3, 0x6F, 0x9E, 0x5F, 0x85, 0xDF, 0x43, 0x7F, 0x23, 0xFF, 0x64, 0xFF, 0x7A, 0xFF, 0xD1, 0x00, 0xA7, 0x80, 0x25, 0x01, 0x67, 0x03, 0x89, 0x81, 0x41, 0x81, 0x5B, 0x02, 0xFB, 0xF8, 0x7A, 0x7C, 0x21, 0xBF, 0x8E, 0x3F, 0x3A, 0xDB, 0x65, 0xF6, 0xB2, 0xD9, 0xED, 0x41, 0x8C, 0xA0, 0xB9, 0x41, 0x15, 0x41, 0x8F, 0x82, 0xAD, 0x82, 0xE5, 0xC1, 0xAD, 0x21, 0x68, 0xC8, 0xEC, 0x90, 0xAD, 0x21, 0xF7, 0xE7, 0x98, 0xCE, 0x91, 0xCE, 0x69, 0x0E, 0x85, 0x50, 0x7E, 0xE8, 0xD6, 0xD0, 0x07, 0x61, 0xE6, 0x61, 0x8B, 0xC3, 0x7E, 0x0C, 0x27, 0x85, 0x87, 0x85, 0x57, 0x86, 0x3F, 0x8E, 0x70, 0x88, 0x58, 0x1A, 0xD1, 0x31, 0x97, 0x35, 0x77, 0xD1, 0xDC, 0x43, 0x73, 0xDF, 0x44, 0xFA, 0x44, 0x96, 0x44, 0xDE, 0x9B, 0x67, 0x31, 0x4F, 0x39, 0xAF, 0x2D, 0x4A, 0x35, 0x2A, 0x3E, 0xAA, 0x2E, 0x6A, 0x3C, 0xDA, 0x37, 0xBA, 0x34, 0xBA, 0x3F, 0xC6, 0x2E, 0x66, 0x59, 0xCC, 0xD5, 0x58, 0x9D, 0x58, 0x49, 0x6C, 0x4B, 0x1C, 0x39, 0x2E, 0x2A, 0xAE, 0x36, 0x6E, 0x6C, 0xBE, 0xDF, 0xFC, 0xED, 0xF3, 0x87, 0xE2, 0x9D, 0xE2, 0x0B, 0xE3, 0x7B, 0x17, 0x98, 0x2F, 0xC8, 0x5D, 0x70, 0x79, 0xA1, 0xCE, 0xC2, 0xF4, 0x85, 0xA7, 0x16, 0xA9, 0x2E, 0x12, 0x2C, 0x3A, 0x96, 0x40, 0x4C, 0x88, 0x4E, 0x38, 0x94, 0xF0, 0x41, 0x10, 0x2A, 0xA8, 0x16, 0x8C, 0x25, 0xF2, 0x13, 0x77, 0x25, 0x8E, 0x0A, 0x79, 0xC2, 0x1D, 0xC2, 0x67, 0x22, 0x2F, 0xD1, 0x36, 0xD1, 0x88, 0xD8, 0x43, 0x5C, 0x2A, 0x1E, 0x4E, 0xF2, 0x48, 0x2A, 0x4D, 0x7A, 0x92, 0xEC, 0x91, 0xBC, 0x35, 0x79, 0x24, 0xC5, 0x33, 0xA5, 0x2C, 0xE5, 0xB9, 0x84, 0x27, 0xA9, 0x90, 0xBC, 0x4C, 0x0D, 0x4C, 0xDD, 0x9B, 0x3A, 0x9E, 0x16, 0x9A, 0x76, 0x20, 0x6D, 0x32, 0x3D, 0x3A, 0xBD, 0x31, 0x83, 0x92, 0x91, 0x90, 0x71, 0x42, 0xAA, 0x21, 0x4D, 0x93, 0xB6, 0x67, 0xEA, 0x67, 0xE6, 0x66, 0x76, 0xCB, 0xAC, 0x65, 0x85, 0xB2, 0xFE, 0xC5, 0x6E, 0x8B, 0xB7, 0x2F, 0x1E, 0x95, 0x07, 0xC9, 0x6B, 0xB3, 0x90, 0xAC, 0x05, 0x59, 0x2D, 0x0A, 0xB6, 0x42, 0xA6, 0xE8, 0x54, 0x5A, 0x28, 0xD7, 0x2A, 0x07, 0xB2, 0x67, 0x65, 0x57, 0x66, 0xBF, 0xCD, 0x89, 0xCA, 0x39, 0x96, 0xAB, 0x9E, 0x2B, 0xCD, 0xED, 0xCC, 0xB3, 0xCA, 0xDB, 0x90, 0x37, 0x9C, 0xEF, 0x9F, 0xFF, 0xED, 0x12, 0xC2, 0x12, 0xE1, 0x92, 0xB6, 0xA5, 0x86, 0x4B, 0x57, 0x2D, 0x1D, 0x58, 0xE6, 0xBD, 0xAC, 0x6A, 0x39, 0xB2, 0x3C, 0x71, 0x79, 0xDB, 0x0A, 0xE3, 0x15, 0x05, 0x2B, 0x86, 0x56, 0x06, 0xAC, 0x3C, 0xB8, 0x8A, 0xB6, 0x2A, 0x6D, 0xD5, 0x4F, 0xAB, 0xED, 0x57, 0x97, 0xAE, 0x7E, 0xBD, 0x26, 0x7A, 0x4D, 0x6B, 0x81, 0x5E, 0xC1, 0xCA, 0x82, 0xC1, 0xB5, 0x01, 0x6B, 0xEB, 0x0B, 0x55, 0x0A, 0xE5, 0x85, 0x7D, 0xEB, 0xDC, 0xD7, 0xED, 0x5D, 0x4F, 0x58, 0x2F, 0x59, 0xDF, 0xB5, 0x61, 0xFA, 0x86, 0x9D, 0x1B, 0x3E, 0x15, 0x89, 0x8A, 0xAE, 0x14, 0xDB, 0x17, 0x97, 0x15, 0x7F, 0xD8, 0x28, 0xDC, 0x78, 0xE5, 0x1B, 0x87, 0x6F, 0xCA, 0xBF, 0x99, 0xDC, 0x94, 0xB4, 0xA9, 0xAB, 0xC4, 0xB9, 0x64, 0xCF, 0x66, 0xD2, 0x66, 0xE9, 0xE6, 0xDE, 0x2D, 0x9E, 0x5B, 0x0E, 0x96, 0xAA, 0x97, 0xE6, 0x97, 0x0E, 0x6E, 0x0D, 0xD9, 0xDA, 0xB4, 0x0D, 0xDF, 0x56, 0xB4, 0xED, 0xF5, 0xF6, 0x45, 0xDB, 0x2F, 0x97, 0xCD, 0x28, 0xDB, 0xBB, 0x83, 0xB6, 0x43, 0xB9, 0xA3, 0xBF, 0x3C, 0xB8, 0xBC, 0x65, 0xA7, 0xC9, 0xCE, 0xCD, 0x3B, 0x3F, 0x54, 0xA4, 0x54, 0xF4, 0x54, 0xFA, 0x54, 0x36, 0xEE, 0xD2, 0xDD, 0xB5, 0x61, 0xD7, 0xF8, 0x6E, 0xD1, 0xEE, 0x1B, 0x7B, 0xBC, 0xF6, 0x34, 0xEC, 0xD5, 0xDB, 0x5B, 0xBC, 0xF7, 0xFD, 0x3E, 0xC9, 0xBE, 0xDB, 0x55, 0x01, 0x55, 0x4D, 0xD5, 0x66, 0xD5, 0x65, 0xFB, 0x49, 0xFB, 0xB3, 0xF7, 0x3F, 0xAE, 0x89, 0xAA, 0xE9, 0xF8, 0x96, 0xFB, 0x6D, 0x5D, 0xAD, 0x4E, 0x6D, 0x71, 0xED, 0xC7, 0x03, 0xD2, 0x03, 0xFD, 0x07, 0x23, 0x0E, 0xB6, 0xD7, 0xB9, 0xD4, 0xD5, 0x1D, 0xD2, 0x3D, 0x54, 0x52, 0x8F, 0xD6, 0x2B, 0xEB, 0x47, 0x0E, 0xC7, 0x1F, 0xBE, 0xFE, 0x9D, 0xEF, 0x77, 0x2D, 0x0D, 0x36, 0x0D, 0x55, 0x8D, 0x9C, 0xC6, 0xE2, 0x23, 0x70, 0x44, 0x79, 0xE4, 0xE9, 0xF7, 0x09, 0xDF, 0xF7, 0x1E, 0x0D, 0x3A, 0xDA, 0x76, 0x8C, 0x7B, 0xAC, 0xE1, 0x07, 0xD3, 0x1F, 0x76, 0x1D, 0x67, 0x1D, 0x2F, 0x6A, 0x42, 0x9A, 0xF2, 0x9A, 0x46, 0x9B, 0x53, 0x9A, 0xFB, 0x5B, 0x62, 0x5B, 0xBA, 0x4F, 0xCC, 0x3E, 0xD1, 0xD6, 0xEA, 0xDE, 0x7A, 0xFC, 0x47, 0xDB, 0x1F, 0x0F, 0x9C, 0x34, 0x3C, 0x59, 0x79, 0x4A, 0xF3, 0x54, 0xC9, 0x69, 0xDA, 0xE9, 0x82, 0xD3, 0x93, 0x67, 0xF2, 0xCF, 0x8C, 0x9D, 0x95, 0x9D, 0x7D, 0x7E, 0x2E, 0xF9, 0xDC, 0x60, 0xDB, 0xA2, 0xB6, 0x7B, 0xE7, 0x63, 0xCE, 0xDF, 0x6A, 0x0F, 0x6F, 0xEF, 0xBA, 0x10, 0x74, 0xE1, 0xD2, 0x45, 0xFF, 0x8B, 0xE7, 0x3B, 0xBC, 0x3B, 0xCE, 0x5C, 0xF2, 0xB8, 0x74, 0xF2, 0xB2, 0xDB, 0xE5, 0x13, 0x57, 0xB8, 0x57, 0x9A, 0xAF, 0x3A, 0x5F, 0x6D, 0xEA, 0x74, 0xEA, 0x3C, 0xFE, 0x93, 0xD3, 0x4F, 0xC7, 0xBB, 0x9C, 0xBB, 0x9A, 0xAE, 0xB9, 0x5C, 0x6B, 0xB9, 0xEE, 0x7A, 0xBD, 0xB5, 0x7B, 0x66, 0xF7, 0xE9, 0x1B, 0x9E, 0x37, 0xCE, 0xDD, 0xF4, 0xBD, 0x79, 0xF1, 0x16, 0xFF, 0xD6, 0xD5, 0x9E, 0x39, 0x3D, 0xDD, 0xBD, 0xF3, 0x7A, 0x6F, 0xF7, 0xC5, 0xF7, 0xF5, 0xDF, 0x16, 0xDD, 0x7E, 0x72, 0x27, 0xFD, 0xCE, 0xCB, 0xBB, 0xD9, 0x77, 0x27, 0xEE, 0xAD, 0xBC, 0x4F, 0xBC, 0x5F, 0xF4, 0x40, 0xED, 0x41, 0xD9, 0x43, 0xDD, 0x87, 0xD5, 0x3F, 0x5B, 0xFE, 0xDC, 0xD8, 0xEF, 0xDC, 0x7F, 0x6A, 0xC0, 0x77, 0xA0, 0xF3, 0xD1, 0xDC, 0x47, 0xF7, 0x06, 0x85, 0x83, 0xCF, 0xFE, 0x91, 0xF5, 0x8F, 0x0F, 0x43, 0x05, 0x8F, 0x99, 0x8F, 0xCB, 0x86, 0x0D, 0x86, 0xEB, 0x9E, 0x38, 0x3E, 0x39, 0x39, 0xE2, 0x3F, 0x72, 0xFD, 0xE9, 0xFC, 0xA7, 0x43, 0xCF, 0x64, 0xCF, 0x26, 0x9E, 0x17, 0xFE, 0xA2, 0xFE, 0xCB, 0xAE, 0x17, 0x16, 0x2F, 0x7E, 0xF8, 0xD5, 0xEB, 0xD7, 0xCE, 0xD1, 0x98, 0xD1, 0xA1, 0x97, 0xF2, 0x97, 0x93, 0xBF, 0x6D, 0x7C, 0xA5, 0xFD, 0xEA, 0xC0, 0xEB, 0x19, 0xAF, 0xDB, 0xC6, 0xC2, 0xC6, 0x1E, 0xBE, 0xC9, 0x78, 0x33, 0x31, 0x5E, 0xF4, 0x56, 0xFB, 0xED, 0xC1, 0x77, 0xDC, 0x77, 0x1D, 0xEF, 0xA3, 0xDF, 0x0F, 0x4F, 0xE4, 0x7C, 0x20, 0x7F, 0x28, 0xFF, 0x68, 0xF9, 0xB1, 0xF5, 0x53, 0xD0, 0xA7, 0xFB, 0x93, 0x19, 0x93, 0x93, 0xFF, 0x04, 0x03, 0x98, 0xF3, 0xFC, 0x63, 0x33, 0x2D, 0xDB, 0x00, 0x00, 0x00, 0x20, 0x63, 0x48, 0x52, 0x4D, 0x00, 0x00, 0x7A, 0x25, 0x00, 0x00, 0x80, 0x83, 0x00, 0x00, 0xF9, 0xFF, 0x00, 0x00, 0x80, 0xE9, 0x00, 0x00, 0x75, 0x30, 0x00, 0x00, 0xEA, 0x60, 0x00, 0x00, 0x3A, 0x98, 0x00, 0x00, 0x17, 0x6F, 0x92, 0x5F, 0xC5, 0x46, 0x00, 0x00, 0x28, 0x91, 0x49, 0x44, 0x41, 0x54, 0x78, 0xDA, 0xEC, 0x9D, 0x79, 0x74, 0x9B, 0x67, 0x9D, 0xEF, 0x9F, 0xB4, 0xA5, 0x70, 0x6F, 0x99, 0x1E, 0x60, 0x18, 0xB6, 0x29, 0x03, 0xB3, 0xC0, 0xB4, 0x49, 0xD3, 0x26, 0xB6, 0xBC, 0xC4, 0x9B, 0x64, 0x59, 0xDE, 0x37, 0xD9, 0x96, 0xAC, 0xC5, 0x96, 0x25, 0x5B, 0xB6, 0x25, 0x2F, 0x92, 0x65, 0x49, 0xD6, 0x62, 0x6D, 0x96, 0xAC, 0x7D, 0xB1, 0x65, 0xAD, 0xB6, 0xBC, 0xC8, 0xAB, 0xBC, 0xAF, 0xB2, 0x25, 0xB9, 0x6D, 0x28, 0x0D, 0x9D, 0x72, 0x29, 0x65, 0xE6, 0x32, 0xE5, 0x0E, 0x03, 0x53, 0xE0, 0x72, 0x2F, 0x0C, 0x0C, 0xC3, 0x32, 0x33, 0xB4, 0xA5, 0x40, 0x93, 0xE7, 0xFE, 0x71, 0xF5, 0xEA, 0xBE, 0x51, 0xE4, 0xC4, 0x72, 0xD2, 0xA6, 0xC3, 0xED, 0x7B, 0xCE, 0xE7, 0x28, 0x27, 0xC9, 0xC9, 0x49, 0xBE, 0xE7, 0xF7, 0x7D, 0x7E, 0xCB, 0xF3, 0x7B, 0x15, 0x00, 0x21, 0x04, 0xEF, 0x73, 0x76, 0xDE, 0x17, 0xE1, 0x7D, 0x01, 0xDF, 0x83, 0x02, 0x6E, 0x6F, 0x6F, 0xA7, 0x64, 0x7F, 0x7F, 0x1F, 0xB8, 0x5C, 0x2E, 0x60, 0x34, 0x1A, 0x81, 0x56, 0xAB, 0x05, 0xF3, 0xF3, 0xF3, 0x20, 0x14, 0x0A, 0x01, 0x9F, 0xCF, 0x07, 0x66, 0x67, 0x67, 0xC1, 0xD4, 0xD4, 0x14, 0x98, 0x99, 0x99, 0x01, 0x7E, 0xBF, 0x1F, 0xD8, 0x6C, 0x36, 0xE0, 0x72, 0xB9, 0xC0, 0xD2, 0xD2, 0x12, 0x30, 0x9B, 0xCD, 0xC0, 0x62, 0xB1, 0x00, 0x8B, 0xC5, 0x02, 0xCC, 0x66, 0x33, 0xD0, 0x6A, 0xB5, 0xC0, 0x68, 0x34, 0x02, 0xA3, 0xD1, 0x08, 0x0C, 0x06, 0xC3, 0x03, 0x5A, 0xAD, 0xF6, 0x11, 0xB5, 0x5A, 0xFD, 0x71, 0xB5, 0x5A, 0xFD, 0xD9, 0xE1, 0xE1, 0xE1, 0x2F, 0xC8, 0x64, 0xB2, 0x27, 0xE4, 0x72, 0xF9, 0x93, 0x32, 0x99, 0xEC, 0xA2, 0x58, 0x2C, 0x7E, 0x52, 0x2C, 0x16, 0x3F, 0x21, 0x14, 0x0A, 0xFF, 0x6A, 0x60, 0x60, 0xE0, 0x33, 0x02, 0x81, 0xE0, 0x23, 0x62, 0xB1, 0xF8, 0x83, 0x22, 0x91, 0x08, 0xA8, 0xD5, 0x6A, 0xC0, 0xE1, 0x70, 0x40, 0x77, 0x77, 0x37, 0xE8, 0xEB, 0xEB, 0x03, 0xBD, 0xBD, 0xBD, 0xA0, 0xBD, 0xBD, 0x1D, 0xF0, 0x78, 0x3C, 0xD0, 0xD9, 0xD9, 0x09, 0x5A, 0x5B, 0x5B, 0x01, 0x8D, 0x46, 0x03, 0x44, 0x22, 0x11, 0x50, 0xA9, 0x54, 0x40, 0x22, 0x91, 0x40, 0x53, 0x53, 0x13, 0x68, 0x6E, 0x6E, 0x06, 0x6C, 0x36, 0x1B, 0xD0, 0x68, 0x34, 0x40, 0xA7, 0xD3, 0xEF, 0xC8, 0x7B, 0x59, 0xC0, 0x0F, 0xEA, 0xF5, 0xFA, 0x3F, 0xD6, 0x6A, 0xB5, 0x9F, 0x57, 0xA9, 0x54, 0xE7, 0x55, 0x2A, 0x55, 0xE6, 0xF0, 0xF0, 0x70, 0xBE, 0x4C, 0x26, 0x2B, 0x94, 0xC9, 0x64, 0x38, 0xA9, 0x54, 0x5A, 0x3C, 0x34, 0x34, 0x54, 0x2C, 0x16, 0x8B, 0xB1, 0x22, 0x91, 0xA8, 0x40, 0x20, 0x10, 0x64, 0x0E, 0x0E, 0x0E, 0x3E, 0x21, 0x12, 0x89, 0x1E, 0x13, 0x89, 0x44, 0x8F, 0xAA, 0x54, 0xAA, 0x87, 0xFE, 0xBF, 0x13, 0xD0, 0x64, 0x32, 0x7D, 0x58, 0xA7, 0xD3, 0x7D, 0x76, 0x74, 0x74, 0xF4, 0xA9, 0xD1, 0xD1, 0xD1, 0x3C, 0xB5, 0x5A, 0x5D, 0xAC, 0x52, 0xA9, 0x4A, 0x54, 0x2A, 0x55, 0x89, 0x42, 0xA1, 0x28, 0x91, 0xCB, 0xE5, 0x25, 0x32, 0x99, 0x8C, 0x20, 0x95, 0x4A, 0x4B, 0x86, 0x86, 0x86, 0x08, 0x62, 0xB1, 0xB8, 0x4C, 0x2C, 0x16, 0x97, 0x89, 0x44, 0xA2, 0x8A, 0xC1, 0xC1, 0xC1, 0xCA, 0xC1, 0xC1, 0xC1, 0xEA, 0x81, 0x81, 0x81, 0x6A, 0x3E, 0x9F, 0x5F, 0x21, 0x10, 0x08, 0xB0, 0x5C, 0x2E, 0xF7, 0xA9, 0xEE, 0xEE, 0xEE, 0x4F, 0xF7, 0xF5, 0xF5, 0x3D, 0xFC, 0x07, 0x29, 0xE0, 0xF2, 0xF2, 0x32, 0x30, 0x9B, 0xCD, 0x1F, 0xB0, 0x58, 0x2C, 0x9F, 0x32, 0x99, 0x4C, 0x4F, 0x19, 0x0C, 0x86, 0x02, 0x9D, 0x4E, 0x87, 0xD3, 0xE9, 0x74, 0xB8, 0x91, 0x91, 0x11, 0x9C, 0x5A, 0xAD, 0xC6, 0xAA, 0x54, 0x2A, 0xAC, 0x4A, 0xA5, 0xC2, 0x29, 0x14, 0x8A, 0x62, 0xB9, 0x5C, 0x5E, 0x2C, 0x93, 0xC9, 0xF0, 0x52, 0xA9, 0x14, 0x3F, 0x34, 0x34, 0x54, 0x22, 0x16, 0x8B, 0x09, 0x62, 0xB1, 0xB8, 0x54, 0x28, 0x14, 0x96, 0x0E, 0x0E, 0x0E, 0x96, 0x09, 0x04, 0x82, 0xB2, 0x81, 0x81, 0x81, 0x0A, 0x3E, 0x9F, 0x5F, 0xD9, 0xDB, 0xDB, 0x5B, 0xC3, 0xE5, 0x72, 0xEB, 0x38, 0x1C, 0x4E, 0x2D, 0x97, 0xCB, 0xC5, 0x73, 0xB9, 0xDC, 0x0B, 0xED, 0xED, 0xED, 0x1F, 0xE1, 0xF3, 0xF9, 0x7F, 0x30, 0x02, 0x3E, 0x34, 0x3D, 0x3D, 0xFD, 0xA7, 0x26, 0x93, 0x29, 0xCB, 0x68, 0x34, 0xE2, 0x0C, 0x06, 0x43, 0xD1, 0xE8, 0xE8, 0x68, 0xA1, 0x4E, 0xA7, 0x2B, 0xD4, 0xE9, 0x74, 0x85, 0x23, 0x23, 0x23, 0x45, 0x71, 0xF1, 0xB0, 0x4A, 0xA5, 0x12, 0x37, 0x3C, 0x3C, 0x5C, 0x2C, 0x93, 0xC9, 0xF0, 0x32, 0x99, 0x0C, 0x2F, 0x91, 0x48, 0x10, 0xF1, 0x08, 0x22, 0x91, 0xA8, 0x74, 0x70, 0x70, 0xB0, 0x2C, 0x2E, 0x60, 0x39, 0x9F, 0xCF, 0xAF, 0xE0, 0xF3, 0xF9, 0x15, 0xBD, 0xBD, 0xBD, 0x95, 0x5C, 0x2E, 0xB7, 0x8A, 0xC3, 0xE1, 0x54, 0x71, 0x38, 0x9C, 0x5A, 0x36, 0x9B, 0xDD, 0xC8, 0x62, 0xB1, 0xEA, 0xBA, 0xBB, 0xBB, 0xB3, 0xD9, 0x6C, 0xF6, 0xC7, 0xFE, 0xD3, 0x0A, 0x38, 0x39, 0x39, 0x79, 0xCE, 0x6A, 0xB5, 0x7E, 0xD2, 0xE1, 0x70, 0x64, 0x9A, 0x4C, 0xA6, 0x22, 0x93, 0xC9, 0x54, 0x64, 0x34, 0x1A, 0xF3, 0xE3, 0xD1, 0x57, 0xA8, 0xD3, 0xE9, 0x0A, 0xB5, 0x5A, 0x6D, 0xA1, 0x46, 0xA3, 0x41, 0xA2, 0x0F, 0xAB, 0x50, 0x28, 0x70, 0x48, 0xF4, 0xC9, 0x64, 0x32, 0x74, 0xF4, 0xDD, 0x24, 0xE0, 0xC0, 0xC0, 0x40, 0x39, 0x9F, 0xCF, 0xAF, 0xE8, 0xEF, 0xEF, 0xAF, 0xE8, 0xE9, 0xE9, 0xA9, 0x8C, 0x8B, 0x57, 0xD5, 0xDD, 0xDD, 0x5D, 0xDD, 0xDE, 0xDE, 0x5E, 0xD3, 0xDE, 0xDE, 0x5E, 0xCB, 0x64, 0x32, 0x9B, 0x98, 0x4C, 0x26, 0xB1, 0xAD, 0xAD, 0x2D, 0x83, 0x4E, 0xA7, 0x7F, 0xB8, 0xBE, 0xBE, 0xFE, 0x3F, 0x87, 0x80, 0x81, 0x40, 0x00, 0x04, 0x02, 0x81, 0x47, 0x5C, 0x2E, 0xD7, 0x05, 0xAB, 0xD5, 0x5A, 0x64, 0xB1, 0x58, 0x0A, 0xCC, 0x66, 0x73, 0x9E, 0xD1, 0x68, 0xCC, 0x37, 0x1A, 0x8D, 0xF9, 0x7A, 0xBD, 0xBE, 0x00, 0x1D, 0x7D, 0x88, 0x7D, 0x91, 0xE8, 0x93, 0xCB, 0xE5, 0xF8, 0xB8, 0x7D, 0x91, 0xF3, 0x8F, 0x20, 0x12, 0x89, 0x4A, 0x85, 0x42, 0x61, 0x22, 0xFA, 0x06, 0x06, 0x06, 0x2A, 0x78, 0x3C, 0x5E, 0x45, 0x6F, 0x6F, 0x6F, 0x05, 0x2A, 0xFA, 0xAA, 0xBB, 0xBA, 0xBA, 0x10, 0x01, 0x6B, 0x58, 0x2C, 0x56, 0x2D, 0x93, 0xC9, 0xAC, 0x67, 0x32, 0x99, 0xE4, 0xB6, 0xB6, 0xB6, 0xDA, 0xA6, 0xA6, 0xA6, 0xBF, 0xA2, 0x50, 0x28, 0xE7, 0xDE, 0xD3, 0x02, 0xCE, 0xCD, 0xCD, 0x01, 0xBF, 0xDF, 0xFF, 0xA9, 0xF1, 0xF1, 0xF1, 0x5C, 0xAB, 0xD5, 0x5A, 0x68, 0xB3, 0xD9, 0xAE, 0x58, 0x2C, 0x96, 0x2B, 0x26, 0x93, 0x29, 0x2F, 0x1E, 0x7D, 0xF9, 0xA3, 0xA3, 0xA3, 0x85, 0x5A, 0xAD, 0x36, 0x5F, 0xA5, 0x52, 0x65, 0x6B, 0x34, 0x9A, 0x9B, 0xEC, 0x8B, 0x8E, 0xBE, 0x3B, 0xD9, 0x97, 0xC7, 0xE3, 0x55, 0xF4, 0xF4, 0xF4, 0x24, 0xEC, 0xDB, 0xDD, 0xDD, 0x5D, 0xDD, 0xD1, 0xD1, 0x51, 0x83, 0x8A, 0xC0, 0x3A, 0x26, 0x93, 0x59, 0xD7, 0xD6, 0xD6, 0x56, 0xD7, 0xD6, 0xD6, 0xD6, 0x48, 0xA7, 0xD3, 0xA9, 0x34, 0x1A, 0xAD, 0x90, 0x44, 0x22, 0x3D, 0xF2, 0x9E, 0x14, 0xD0, 0xEF, 0xF7, 0x3F, 0xE8, 0xF3, 0xF9, 0xFE, 0xC2, 0xE9, 0x74, 0xE6, 0x3B, 0x1C, 0x8E, 0x2B, 0x36, 0x9B, 0xED, 0x8A, 0xD5, 0x6A, 0xBD, 0x82, 0x8E, 0x3E, 0x83, 0xC1, 0x50, 0xA0, 0x50, 0x28, 0x32, 0x0C, 0x06, 0x03, 0xCE, 0xE7, 0xF3, 0xB5, 0x2A, 0x95, 0xCA, 0x82, 0xA4, 0xE4, 0x81, 0x47, 0x25, 0x0F, 0x02, 0x22, 0x60, 0x52, 0xF2, 0x48, 0xD8, 0x97, 0xCB, 0xE5, 0x26, 0xEC, 0x9B, 0x22, 0xFA, 0x10, 0x01, 0xEB, 0x5B, 0x5B, 0x5B, 0x89, 0x54, 0x2A, 0xB5, 0x81, 0x46, 0xA3, 0x51, 0xC8, 0x64, 0x72, 0x35, 0x89, 0x44, 0xFA, 0xC4, 0x7B, 0x4A, 0xC0, 0xD5, 0xD5, 0xD5, 0x0F, 0x38, 0x9D, 0xCE, 0xC7, 0x9D, 0x4E, 0x67, 0xFE, 0xF8, 0xF8, 0x78, 0xAE, 0xDD, 0x6E, 0xCF, 0x45, 0x0B, 0x68, 0x32, 0x99, 0x0A, 0xB4, 0x5A, 0x6D, 0x96, 0x42, 0xA1, 0x78, 0x3A, 0x18, 0x0C, 0x72, 0x7E, 0xF8, 0xC3, 0x1F, 0xFE, 0xED, 0xEB, 0xAF, 0xBF, 0xFE, 0x8B, 0xB1, 0xB1, 0xB1, 0x66, 0x99, 0x4C, 0x96, 0xA3, 0x52, 0xA9, 0x4E, 0xB4, 0x6F, 0x5C, 0x40, 0x24, 0xFA, 0xCA, 0x50, 0xC9, 0xE3, 0xD4, 0x02, 0xD2, 0xE9, 0x74, 0x22, 0x95, 0x4A, 0x6D, 0xA0, 0x52, 0xA9, 0x0D, 0xCD, 0xCD, 0xCD, 0x94, 0xC6, 0xC6, 0xC6, 0xA6, 0xE6, 0xE6, 0xE6, 0xCF, 0x22, 0x02, 0xD2, 0x68, 0x34, 0xD0, 0xDA, 0xDA, 0x7A, 0x5B, 0xDE, 0x31, 0x01, 0xE7, 0xE6, 0xE6, 0x3E, 0x30, 0x3F, 0x3F, 0x7F, 0x61, 0x6C, 0x6C, 0x2C, 0xDF, 0xE9, 0x74, 0xE6, 0x24, 0x09, 0x98, 0x67, 0x32, 0x99, 0xF2, 0x55, 0x2A, 0xD5, 0x45, 0xAB, 0xD5, 0x5A, 0xFC, 0xF2, 0xCB, 0x2F, 0xAF, 0xDF, 0xB8, 0x71, 0xE3, 0x6D, 0x18, 0x7F, 0xBE, 0xF9, 0xCD, 0x6F, 0x46, 0x87, 0x86, 0x86, 0x32, 0x14, 0x0A, 0x05, 0xF6, 0x34, 0xF6, 0x4D, 0x4E, 0x1E, 0x68, 0xFB, 0xB2, 0xD9, 0xEC, 0x84, 0x7D, 0x59, 0x2C, 0x56, 0x42, 0x3C, 0x06, 0x83, 0x41, 0x44, 0x04, 0xA4, 0x50, 0x28, 0x0D, 0x24, 0x12, 0xA9, 0xA9, 0xB1, 0xB1, 0xB1, 0x99, 0x4C, 0x26, 0x37, 0x33, 0x18, 0x8C, 0x3F, 0x6F, 0x6E, 0x6E, 0x06, 0x2C, 0x16, 0x0B, 0xD4, 0xD6, 0xD6, 0x82, 0xDA, 0xDA, 0x5A, 0x40, 0x24, 0x12, 0x53, 0xF2, 0x8E, 0x08, 0xA8, 0xD3, 0xE9, 0x1E, 0xF2, 0x78, 0x3C, 0x17, 0x5C, 0x2E, 0x57, 0xBE, 0xD3, 0xE9, 0xCC, 0x71, 0x3A, 0x9D, 0x39, 0x63, 0x63, 0x63, 0xB9, 0x36, 0x9B, 0xED, 0x8A, 0xCD, 0x66, 0xCB, 0x33, 0x9B, 0xCD, 0x57, 0x94, 0x4A, 0xE5, 0x85, 0x60, 0x30, 0xC8, 0xFA, 0xD9, 0xCF, 0x7E, 0xF6, 0x5D, 0x78, 0xEB, 0x73, 0x63, 0x76, 0x76, 0x96, 0x27, 0x14, 0x0A, 0x31, 0xF1, 0xE2, 0x39, 0xB9, 0xF6, 0x4B, 0x69, 0xDF, 0xBE, 0xBE, 0xBE, 0x93, 0xB2, 0x6F, 0x0D, 0x8B, 0xC5, 0xBA, 0x49, 0xC0, 0xD6, 0xD6, 0x56, 0x22, 0x8D, 0x46, 0x43, 0xA2, 0xAF, 0xA1, 0x29, 0xFE, 0x34, 0x36, 0x36, 0x52, 0xEA, 0xEB, 0xEB, 0xA9, 0x0D, 0x0D, 0x0D, 0x7F, 0xC6, 0xE7, 0xF3, 0x41, 0x46, 0x46, 0x06, 0xC8, 0xCC, 0xCC, 0x04, 0x05, 0x05, 0x05, 0x20, 0x3F, 0x3F, 0xFF, 0x16, 0xEE, 0xB9, 0x80, 0x7A, 0xBD, 0xFE, 0x01, 0xB7, 0xDB, 0xFD, 0xB8, 0xC7, 0xE3, 0xC9, 0x9B, 0x98, 0x98, 0xC8, 0x8E, 0x8B, 0x97, 0x63, 0xB7, 0xDB, 0x11, 0xF1, 0xB2, 0xD5, 0x6A, 0xF5, 0xF9, 0x48, 0x24, 0x62, 0xFC, 0xDD, 0xEF, 0x7E, 0xF7, 0x26, 0x3C, 0xE1, 0xF9, 0xF1, 0x8F, 0x7F, 0xFC, 0x8F, 0x72, 0xB9, 0xBC, 0x48, 0x22, 0x91, 0x60, 0xCF, 0x52, 0xFB, 0x25, 0x45, 0x1F, 0xDA, 0xBE, 0xF5, 0x0C, 0x06, 0xA3, 0x9E, 0x4E, 0xA7, 0x37, 0x20, 0xF6, 0x25, 0x93, 0xC9, 0x8D, 0x28, 0x01, 0x49, 0x0D, 0x0D, 0x0D, 0x14, 0x22, 0x91, 0x48, 0xE1, 0x72, 0xB9, 0x9F, 0xCE, 0xCE, 0xCE, 0x06, 0xD9, 0xD9, 0xD9, 0xA0, 0xA8, 0xA8, 0x08, 0x14, 0x16, 0x16, 0xDE, 0x42, 0xDA, 0x02, 0xEE, 0xEC, 0xEC, 0xA4, 0xE4, 0xE0, 0xE0, 0x00, 0xB8, 0xDD, 0x6E, 0x60, 0x34, 0x1A, 0x3F, 0x1F, 0x08, 0x04, 0xF2, 0x5C, 0x2E, 0x57, 0x36, 0x3A, 0xFA, 0xEC, 0x76, 0x7B, 0x9E, 0xC5, 0x62, 0xC9, 0xD2, 0xE9, 0x74, 0x4F, 0xBD, 0xF4, 0xD2, 0x4B, 0x73, 0xF0, 0x14, 0x4F, 0x38, 0x1C, 0x9E, 0xE8, 0xEF, 0xEF, 0xCF, 0x90, 0xC9, 0x64, 0x84, 0x3B, 0x45, 0x5F, 0xAA, 0xDA, 0x0F, 0xC9, 0xBE, 0xC9, 0x67, 0x1F, 0x83, 0xC1, 0x48, 0x9C, 0x7D, 0x71, 0xFB, 0x26, 0x04, 0x6C, 0x68, 0x68, 0x20, 0x37, 0x34, 0x34, 0x90, 0x6B, 0x6B, 0x6B, 0xE9, 0x4D, 0x4D, 0x4D, 0x4D, 0x99, 0x99, 0x99, 0x8F, 0xDE, 0x53, 0x01, 0x97, 0x96, 0x96, 0x6E, 0x62, 0x71, 0x71, 0x11, 0x2C, 0x2D, 0x2D, 0x81, 0xD5, 0xD5, 0x55, 0xB0, 0xB0, 0xB0, 0xF0, 0x71, 0x97, 0xCB, 0x95, 0xEB, 0xF1, 0x78, 0xB2, 0x27, 0x26, 0x26, 0x72, 0xE2, 0x67, 0x5F, 0x8E, 0xC3, 0xE1, 0xC8, 0xB5, 0x58, 0x2C, 0x59, 0x46, 0xA3, 0xF1, 0xE9, 0x6F, 0x7C, 0xE3, 0x1B, 0x6B, 0xF0, 0x94, 0xCF, 0xAF, 0x7F, 0xFD, 0xEB, 0x5F, 0x18, 0x0C, 0x86, 0x46, 0x81, 0x40, 0x90, 0x37, 0x34, 0x34, 0x54, 0x8A, 0xAA, 0xFD, 0x4A, 0x93, 0x93, 0x47, 0x5F, 0x5F, 0x5F, 0xE5, 0x69, 0x93, 0x47, 0x4B, 0x4B, 0x0B, 0x3A, 0x79, 0x24, 0x47, 0x1F, 0x99, 0x48, 0x24, 0x92, 0xEB, 0xEA, 0xEA, 0xC8, 0xB5, 0xB5, 0xB5, 0x6D, 0x38, 0x1C, 0xAE, 0x2C, 0x3F, 0x3F, 0xFF, 0xA1, 0xA2, 0xA2, 0x22, 0x50, 0x50, 0x50, 0x70, 0xF7, 0x02, 0xAE, 0xAE, 0xAE, 0xDE, 0xC4, 0xDA, 0xDA, 0x1A, 0x08, 0x85, 0x42, 0x60, 0x6A, 0x6A, 0xEA, 0x83, 0x7E, 0xBF, 0xFF, 0xB2, 0xD7, 0xEB, 0xCD, 0x71, 0xBB, 0xDD, 0x59, 0x88, 0x80, 0xF1, 0xB3, 0x2F, 0x47, 0xAF, 0xD7, 0x5F, 0x7C, 0xF9, 0xE5, 0x97, 0x83, 0x30, 0xCD, 0xE7, 0x95, 0x57, 0x5E, 0x39, 0x12, 0x0A, 0x85, 0x05, 0x22, 0x91, 0x08, 0x9F, 0xAA, 0x78, 0x4E, 0xB2, 0x6F, 0x42, 0xC0, 0xA4, 0xE4, 0x71, 0x62, 0xF6, 0x4D, 0x61, 0x5F, 0x72, 0x7D, 0x7D, 0x3D, 0xB9, 0xB6, 0xB6, 0xB6, 0xB9, 0xBA, 0xBA, 0xBA, 0xB9, 0xBA, 0xBA, 0xBA, 0xAD, 0xAC, 0xAC, 0xEC, 0xE9, 0xA2, 0xA2, 0x22, 0x90, 0x95, 0x95, 0x05, 0x10, 0x4B, 0x23, 0xA4, 0x2D, 0x60, 0x2C, 0x16, 0xBB, 0x89, 0xE3, 0xE3, 0x63, 0x70, 0x74, 0x74, 0x04, 0xBC, 0x5E, 0xEF, 0x17, 0xBD, 0x5E, 0xEF, 0x15, 0xAF, 0xD7, 0x9B, 0x85, 0xB6, 0xAF, 0xC3, 0xE1, 0xB8, 0xA2, 0xD3, 0xE9, 0xCE, 0x5F, 0xBD, 0x7A, 0xD5, 0x06, 0xCF, 0xF0, 0xFC, 0xF6, 0xB7, 0xBF, 0x7D, 0xDD, 0x6A, 0xB5, 0xB6, 0xF1, 0xF9, 0xFC, 0x82, 0xD3, 0xB6, 0x6E, 0x1C, 0x0E, 0x27, 0xA5, 0x7D, 0xE3, 0xE7, 0x5F, 0x22, 0x79, 0x20, 0xD9, 0x17, 0x11, 0x2F, 0x85, 0x80, 0x94, 0x8A, 0x8A, 0x0A, 0x5A, 0x55, 0x55, 0x15, 0xBD, 0xB0, 0xB0, 0xF0, 0xE3, 0x48, 0x42, 0x41, 0x73, 0xD7, 0x49, 0x64, 0x67, 0x67, 0x07, 0xAC, 0xAD, 0xAD, 0x7D, 0xCC, 0xEB, 0xF5, 0xE6, 0x7A, 0xBD, 0xDE, 0x2C, 0x8F, 0xC7, 0x93, 0x85, 0x24, 0x0F, 0xA7, 0xD3, 0x79, 0xC5, 0x60, 0x30, 0x3C, 0xB9, 0xBA, 0xBA, 0xCA, 0x79, 0xFB, 0xED, 0xB7, 0x7F, 0x9B, 0xAE, 0x78, 0xAF, 0xBD, 0xF6, 0xDA, 0x2B, 0xE3, 0xE3, 0xE3, 0x6C, 0x91, 0x48, 0x84, 0x3B, 0xA1, 0xF6, 0x2B, 0x4F, 0x55, 0xFB, 0x75, 0x76, 0x76, 0xA6, 0xB4, 0x2F, 0x93, 0xC9, 0x4C, 0xC7, 0xBE, 0x94, 0xAA, 0xAA, 0x2A, 0x4A, 0x45, 0x45, 0x05, 0xA5, 0xB2, 0xB2, 0x92, 0x59, 0x5C, 0x5C, 0x4C, 0x28, 0x2C, 0x2C, 0x3C, 0x87, 0xC7, 0xE3, 0x41, 0x71, 0x71, 0x71, 0x82, 0xB4, 0x05, 0x9C, 0x9A, 0x9A, 0xBA, 0x89, 0x40, 0x20, 0xF0, 0xA0, 0xCF, 0xE7, 0xBB, 0xE8, 0xF1, 0x78, 0x72, 0xBD, 0x5E, 0x6F, 0x96, 0xDB, 0xED, 0x46, 0xCE, 0xBF, 0x5C, 0x9B, 0xCD, 0x76, 0xD9, 0xE3, 0xF1, 0x10, 0xFE, 0xED, 0xDF, 0xFE, 0xED, 0x47, 0xE9, 0x08, 0x77, 0xE3, 0xC6, 0x8D, 0xEB, 0xCF, 0x3C, 0xF3, 0xCC, 0xB4, 0x50, 0x28, 0xCC, 0xE5, 0xF1, 0x78, 0x39, 0xB7, 0xAB, 0xFD, 0x90, 0xD6, 0x0D, 0x9D, 0x3C, 0x10, 0xFB, 0x26, 0x89, 0x57, 0xC7, 0x60, 0x30, 0xEA, 0x91, 0xE8, 0xA3, 0x52, 0xA9, 0x8D, 0xE8, 0xE4, 0x71, 0x42, 0xF4, 0x51, 0x2A, 0x2A, 0x2A, 0xA8, 0x15, 0x15, 0x15, 0xB4, 0x8A, 0x8A, 0x8A, 0xB6, 0xD2, 0xD2, 0xD2, 0xCF, 0x97, 0x97, 0x97, 0x03, 0x34, 0x69, 0x0B, 0x38, 0x37, 0x37, 0x77, 0x13, 0x7E, 0xBF, 0xFF, 0x4F, 0xDC, 0x6E, 0xF7, 0x15, 0xAF, 0xD7, 0x9B, 0x85, 0xB6, 0xEF, 0xF8, 0xF8, 0x78, 0xB6, 0xD1, 0x68, 0x3C, 0xFF, 0xEA, 0xAB, 0xAF, 0xEE, 0xA7, 0x23, 0xDE, 0x5B, 0x6F, 0xBD, 0xF5, 0x1F, 0xCB, 0xCB, 0xCB, 0x4A, 0x1E, 0x8F, 0x97, 0x21, 0x16, 0x8B, 0x8B, 0x24, 0x12, 0x09, 0x21, 0x9D, 0xDA, 0xEF, 0x34, 0xAD, 0x5B, 0xDC, 0xBE, 0x09, 0xF1, 0xD0, 0xD9, 0xB7, 0xAE, 0xAE, 0xAE, 0xB9, 0xB6, 0xB6, 0xB6, 0xB9, 0xAA, 0xAA, 0x8A, 0x52, 0x59, 0x59, 0x49, 0x89, 0x8B, 0x47, 0x2B, 0x2B, 0x2B, 0x6B, 0x2B, 0x2D, 0x2D, 0xAD, 0xAC, 0xAD, 0xAD, 0x7D, 0x08, 0x29, 0xAE, 0x6B, 0x6B, 0x6B, 0xD3, 0x17, 0x30, 0x18, 0x0C, 0x82, 0x60, 0x30, 0x08, 0xE6, 0xE6, 0xE6, 0xC0, 0xC2, 0xC2, 0xC2, 0x03, 0x53, 0x53, 0x53, 0x4F, 0x22, 0xD1, 0x87, 0xB2, 0x6F, 0xAE, 0xD1, 0x68, 0x7C, 0x62, 0x7B, 0x7B, 0xBB, 0xFF, 0xFA, 0xF5, 0xEB, 0x6F, 0x9F, 0x56, 0xBC, 0xD7, 0x5F, 0x7F, 0xFD, 0x17, 0xD3, 0xD3, 0xD3, 0xFD, 0x3C, 0x1E, 0x2F, 0x13, 0x69, 0xDD, 0x4E, 0x59, 0xFB, 0xA1, 0xED, 0x7B, 0x2F, 0x92, 0x07, 0xA5, 0xB2, 0xB2, 0x92, 0x52, 0x59, 0x59, 0x89, 0x44, 0x1F, 0xAD, 0xB4, 0xB4, 0x94, 0x4E, 0x20, 0x10, 0xDA, 0x4A, 0x4B, 0x4B, 0xFF, 0xAC, 0xA4, 0xA4, 0x04, 0x20, 0xA4, 0x2D, 0xA0, 0xDB, 0xED, 0x4E, 0xE0, 0xF3, 0xF9, 0x3E, 0xE2, 0xF3, 0xF9, 0x72, 0x91, 0xE8, 0x43, 0xB2, 0xEF, 0xD8, 0xD8, 0x18, 0xC6, 0xE1, 0x70, 0x60, 0x7E, 0xFC, 0xE3, 0x1F, 0xFF, 0xDD, 0x69, 0xC5, 0xFB, 0xCD, 0x6F, 0x7E, 0xF3, 0x1F, 0xB3, 0xB3, 0xB3, 0xBC, 0x81, 0x81, 0x81, 0x8C, 0xD3, 0x4C, 0x5E, 0x90, 0xD1, 0x15, 0xBA, 0x75, 0xE3, 0x70, 0x38, 0x37, 0xD9, 0x37, 0x59, 0x40, 0x1A, 0x8D, 0x96, 0x10, 0xF0, 0x4E, 0xF6, 0x8D, 0x47, 0x5F, 0x42, 0x40, 0x02, 0x81, 0x40, 0x2F, 0x29, 0x29, 0x61, 0x61, 0xB1, 0x58, 0x7C, 0x41, 0x41, 0xC1, 0xB9, 0x33, 0x97, 0x31, 0x26, 0x93, 0x29, 0x81, 0xCB, 0xE5, 0xFA, 0x4B, 0x9F, 0xCF, 0x77, 0x93, 0x7D, 0x27, 0x26, 0x26, 0x72, 0x8D, 0x46, 0xE3, 0x5F, 0x1F, 0x1D, 0x1D, 0x29, 0x4E, 0x2B, 0xDE, 0xF5, 0xEB, 0xD7, 0xDF, 0x5E, 0x59, 0x59, 0x91, 0x09, 0x04, 0x82, 0x4B, 0x49, 0x83, 0x83, 0x5B, 0x8A, 0x67, 0xE4, 0xFC, 0x1B, 0x18, 0x18, 0xA8, 0xE8, 0xEB, 0xEB, 0xBB, 0x65, 0x70, 0xD0, 0xD1, 0xD1, 0x51, 0xC3, 0x62, 0xB1, 0x6E, 0x49, 0x1E, 0x68, 0xFB, 0xA2, 0x93, 0x07, 0x5A, 0xC0, 0xBA, 0xBA, 0xBA, 0xE6, 0x9A, 0x9A, 0x9A, 0x44, 0xF2, 0x40, 0x04, 0x2C, 0x2F, 0x2F, 0xA7, 0x11, 0x08, 0x04, 0x3A, 0x1E, 0x8F, 0x67, 0xE0, 0x70, 0xB8, 0x96, 0xE2, 0xE2, 0xE2, 0x8F, 0x9E, 0x39, 0x89, 0xE8, 0xF5, 0x7A, 0xA0, 0xD7, 0xEB, 0x81, 0xC1, 0x60, 0xF8, 0x80, 0xDB, 0xED, 0xCE, 0xF0, 0xF9, 0x7C, 0x39, 0x88, 0x7D, 0x5D, 0x2E, 0x57, 0xCE, 0xD8, 0xD8, 0x18, 0xC6, 0x6E, 0xB7, 0x5F, 0xFE, 0xC9, 0x4F, 0x7E, 0xF2, 0xF7, 0xA7, 0x15, 0xF0, 0xB9, 0xE7, 0x9E, 0x9B, 0x12, 0x08, 0x04, 0x17, 0xD1, 0x63, 0xFB, 0xA4, 0xC9, 0x4B, 0xF2, 0xE0, 0xB4, 0x3C, 0xC5, 0xE0, 0xF4, 0xC4, 0xEC, 0x7B, 0x27, 0xFB, 0x36, 0x36, 0x36, 0x92, 0x88, 0x44, 0x22, 0xB9, 0xB6, 0xB6, 0xB6, 0xB9, 0xA6, 0xA6, 0x06, 0x6D, 0x5F, 0x2A, 0x62, 0xDF, 0x92, 0x92, 0x92, 0x96, 0xE2, 0xE2, 0xE2, 0x16, 0x1C, 0x0E, 0xC7, 0x2E, 0x2C, 0x2C, 0xBC, 0x88, 0xC3, 0xE1, 0xCE, 0x26, 0xA0, 0xD9, 0x6C, 0x06, 0x26, 0x93, 0x09, 0x58, 0xAD, 0xD6, 0x8F, 0xF9, 0xFD, 0xFE, 0x2B, 0x28, 0xFB, 0x66, 0x4F, 0x4C, 0x4C, 0xE4, 0x9A, 0xCD, 0xE6, 0x27, 0xB6, 0xB6, 0xB6, 0x7A, 0x6E, 0xDC, 0xB8, 0x71, 0xE3, 0x34, 0xE2, 0x7D, 0xEF, 0x7B, 0xDF, 0x7B, 0x59, 0x2A, 0x95, 0x66, 0xCB, 0xE5, 0xF2, 0x22, 0xF4, 0xDC, 0x2F, 0x95, 0x7D, 0x91, 0xE4, 0x81, 0xB6, 0xEF, 0x9D, 0x5A, 0x37, 0xA4, 0xF6, 0x3B, 0x29, 0x79, 0x34, 0x36, 0x36, 0x9E, 0x94, 0x3C, 0x92, 0xA3, 0xAF, 0x05, 0x87, 0xC3, 0xB5, 0x60, 0xB1, 0xD8, 0x8E, 0x92, 0x92, 0x92, 0xCA, 0xBA, 0xBA, 0xBA, 0x07, 0x6A, 0x6A, 0x6A, 0xCE, 0x56, 0xC6, 0x4C, 0x4E, 0x4E, 0x02, 0x97, 0xCB, 0xF5, 0xE7, 0x48, 0xE1, 0x8C, 0x24, 0x8F, 0xF1, 0xF1, 0xF1, 0x6C, 0x8B, 0xC5, 0x72, 0xE1, 0x5B, 0xDF, 0xFA, 0xD6, 0xDE, 0x29, 0x8B, 0xE4, 0x37, 0x5C, 0x2E, 0x57, 0xAB, 0x58, 0x2C, 0xC6, 0x28, 0x95, 0x4A, 0xFC, 0x29, 0xA2, 0x2F, 0x91, 0x7D, 0xD3, 0x99, 0xFB, 0x9D, 0x54, 0xFB, 0x35, 0x35, 0x35, 0x91, 0x1A, 0x1B, 0x1B, 0xC9, 0xC9, 0xD1, 0x17, 0xB7, 0x2F, 0x92, 0x7D, 0xE9, 0x04, 0x02, 0x81, 0x1E, 0x8F, 0xBE, 0x16, 0x1C, 0x0E, 0xC7, 0x2C, 0x2E, 0x2E, 0xA6, 0x17, 0x15, 0x15, 0xFD, 0x51, 0x41, 0x41, 0x41, 0xFA, 0x02, 0xAE, 0xAF, 0xAF, 0x83, 0xF5, 0xF5, 0xF5, 0x07, 0xA6, 0xA7, 0xA7, 0xD1, 0xD9, 0x37, 0x7B, 0x62, 0x62, 0x22, 0xC7, 0xE1, 0x70, 0x5C, 0xF6, 0xFB, 0xFD, 0x84, 0xD7, 0x5F, 0x7F, 0xFD, 0x67, 0xA7, 0x11, 0xF0, 0xC5, 0x17, 0x5F, 0x0C, 0x89, 0x44, 0xA2, 0xCB, 0x77, 0xBA, 0x75, 0x43, 0x04, 0x44, 0xD7, 0x7E, 0xA7, 0x9C, 0xBC, 0xD4, 0xA1, 0xE7, 0x7E, 0xA7, 0xCD, 0xBE, 0xC9, 0xD1, 0x57, 0x52, 0x52, 0x82, 0x88, 0xD7, 0x8A, 0xC3, 0xE1, 0x18, 0x58, 0x2C, 0x96, 0x9D, 0x9B, 0x9B, 0xFB, 0xB9, 0xAC, 0xAC, 0xAC, 0xB3, 0x59, 0xD8, 0x6C, 0x36, 0x7F, 0xD0, 0xEB, 0xF5, 0x66, 0x7A, 0xBD, 0xDE, 0x1C, 0x74, 0xF1, 0x6C, 0xB1, 0x58, 0x2E, 0xEC, 0xED, 0xED, 0x0D, 0x9E, 0xB6, 0x64, 0xB1, 0xD9, 0x6C, 0x8D, 0x72, 0xB9, 0xFC, 0x4A, 0xFC, 0xD6, 0xED, 0xB6, 0xF6, 0x45, 0x0B, 0x88, 0xD4, 0x7E, 0xA9, 0xEE, 0x3D, 0x4E, 0x68, 0xDD, 0x12, 0x83, 0xD3, 0xE4, 0xB3, 0x0F, 0x2D, 0xE0, 0x9D, 0xEC, 0x8B, 0xC3, 0xE1, 0x5A, 0xB1, 0x58, 0x6C, 0x6B, 0x41, 0x41, 0x41, 0x57, 0x53, 0x53, 0xD3, 0x65, 0x3C, 0x1E, 0x9F, 0xBE, 0x80, 0xF1, 0x9D, 0x95, 0x47, 0x3D, 0x1E, 0x4F, 0x8E, 0xCF, 0xE7, 0xCB, 0x8E, 0x47, 0x5F, 0xB6, 0xD3, 0xE9, 0xCC, 0x31, 0x9B, 0xCD, 0x17, 0xBE, 0xFE, 0xF5, 0xAF, 0x2F, 0x9D, 0x32, 0xFA, 0x56, 0xC4, 0x62, 0xF1, 0xE5, 0x14, 0xF7, 0x1E, 0xC9, 0xD9, 0xF7, 0xA6, 0xE4, 0x91, 0x4E, 0xEB, 0x76, 0xA7, 0xC9, 0x0B, 0xCA, 0xBE, 0x64, 0x54, 0xF6, 0xA5, 0xA2, 0xEC, 0x4B, 0x43, 0x25, 0x8F, 0x56, 0x44, 0x40, 0x2C, 0x16, 0xDB, 0x89, 0xC5, 0x62, 0x8B, 0x31, 0x18, 0x4C, 0xFA, 0x02, 0x8E, 0x8D, 0x8D, 0x01, 0x8F, 0xC7, 0xF3, 0x27, 0x48, 0xF9, 0x82, 0xD8, 0x77, 0x7C, 0x7C, 0x3C, 0xCB, 0xE1, 0x70, 0x60, 0x7E, 0xF4, 0xA3, 0x1F, 0xBD, 0x72, 0x27, 0xF1, 0x7E, 0xFF, 0xFB, 0xDF, 0xBF, 0xE5, 0x76, 0xBB, 0x19, 0x52, 0xA9, 0x34, 0x3B, 0xDD, 0x4B, 0xF3, 0x54, 0xB7, 0x6E, 0x6C, 0x36, 0x1B, 0x2D, 0x60, 0xDD, 0x49, 0xB5, 0x5F, 0x3A, 0xF6, 0x45, 0x67, 0x5F, 0x54, 0xF4, 0x31, 0xB0, 0x58, 0x2C, 0x03, 0x87, 0xC3, 0x75, 0x14, 0x16, 0x16, 0xD6, 0x5E, 0xBA, 0x74, 0xE9, 0x43, 0x69, 0x0B, 0xE8, 0xF5, 0x7A, 0x1F, 0xF4, 0x7A, 0xBD, 0x8F, 0x21, 0xC3, 0x03, 0xA4, 0x75, 0xB3, 0xDB, 0xED, 0x19, 0x3E, 0x9F, 0xAF, 0xF4, 0x8D, 0x37, 0xDE, 0xF8, 0xD7, 0x3B, 0x09, 0xF8, 0x9D, 0xEF, 0x7C, 0xE7, 0x6F, 0x64, 0x32, 0x59, 0xB6, 0x52, 0xA9, 0x2C, 0x4A, 0x5A, 0xD9, 0x28, 0xB9, 0xD3, 0xAD, 0x5B, 0x72, 0xED, 0x97, 0x3C, 0xB6, 0x3F, 0x4D, 0xEB, 0x86, 0x88, 0x17, 0xCF, 0xBE, 0xE4, 0x54, 0xAD, 0xDB, 0x09, 0xF6, 0x65, 0xC4, 0x61, 0x15, 0x15, 0x15, 0x91, 0xF3, 0xF2, 0xF2, 0x3E, 0x79, 0x96, 0x81, 0xEA, 0x7F, 0x9D, 0x99, 0x99, 0xF9, 0x4B, 0x8F, 0xC7, 0x93, 0x1B, 0xCF, 0xBE, 0x39, 0x4E, 0xA7, 0x33, 0xC7, 0x6A, 0xB5, 0x3E, 0xBD, 0xB0, 0xB0, 0x40, 0x7F, 0xFB, 0xED, 0xB7, 0xDF, 0x3A, 0xC5, 0xA4, 0xD9, 0x26, 0x16, 0x8B, 0x2F, 0xDD, 0xEE, 0xD6, 0xED, 0xB4, 0x73, 0xBF, 0xD3, 0xD6, 0x7E, 0x27, 0x4D, 0x5E, 0xE2, 0xD9, 0xB7, 0x39, 0x45, 0xF4, 0xD1, 0x50, 0xD9, 0x17, 0x2D, 0x1E, 0x03, 0x8B, 0xC5, 0xB6, 0x61, 0xB1, 0xD8, 0x96, 0xF2, 0xF2, 0xF2, 0xBF, 0x3E, 0x4B, 0x2F, 0xFC, 0xD1, 0xA9, 0xA9, 0xA9, 0x27, 0x3C, 0x1E, 0x4F, 0x0E, 0x6A, 0xF2, 0x92, 0x63, 0x36, 0x9B, 0x2F, 0x6E, 0x6D, 0x6D, 0xF1, 0x4E, 0x69, 0xDF, 0x36, 0xA9, 0x54, 0x9A, 0x83, 0xBE, 0x34, 0x97, 0x4A, 0xA5, 0x25, 0xE9, 0xDE, 0xBA, 0x9D, 0x62, 0xEE, 0x47, 0x4C, 0x31, 0xB6, 0x27, 0x9D, 0xB6, 0x75, 0x3B, 0x21, 0xFA, 0x10, 0x01, 0xDB, 0x8A, 0x8A, 0x8A, 0x9E, 0x4A, 0x5B, 0x40, 0x9F, 0xCF, 0xF7, 0x71, 0x9F, 0xCF, 0xF7, 0xA4, 0xD7, 0xEB, 0xCD, 0x41, 0x0F, 0x4E, 0x4D, 0x26, 0xD3, 0x93, 0x47, 0x47, 0x47, 0xAA, 0x3B, 0x09, 0xF8, 0x2F, 0xFF, 0xF2, 0x2F, 0xAF, 0x69, 0xB5, 0xDA, 0x92, 0xE1, 0xE1, 0xE1, 0x82, 0x14, 0xC9, 0x83, 0x70, 0x52, 0xF1, 0x7C, 0x9A, 0x5B, 0xB7, 0x93, 0xEC, 0x9B, 0x2A, 0xFA, 0x52, 0xD8, 0x37, 0xD1, 0x79, 0x94, 0x95, 0x95, 0x9D, 0x4A, 0x40, 0x2C, 0x16, 0x7B, 0x29, 0x6D, 0x01, 0xA7, 0xA7, 0xA7, 0xFF, 0x78, 0x72, 0x72, 0xF2, 0x82, 0xC7, 0xE3, 0xC9, 0x41, 0x8D, 0xAE, 0x72, 0x0C, 0x06, 0xC3, 0x93, 0x5F, 0xFA, 0xD2, 0x97, 0xC6, 0xEE, 0x24, 0xE0, 0xB7, 0xBF, 0xFD, 0xED, 0x6B, 0xF1, 0xF3, 0x0F, 0x9B, 0xDC, 0xBA, 0xA5, 0xAA, 0xFD, 0x92, 0xEC, 0x7B, 0xA6, 0xD6, 0xED, 0x0E, 0xF6, 0x4D, 0x95, 0x3C, 0x92, 0xB3, 0x2F, 0x23, 0x95, 0x80, 0x85, 0x85, 0x85, 0x4F, 0xA7, 0x2D, 0xE0, 0xCC, 0xCC, 0xCC, 0xA3, 0x93, 0x93, 0x93, 0x5F, 0x74, 0xBB, 0xDD, 0xB9, 0x48, 0xF9, 0x32, 0x3E, 0x3E, 0x9E, 0xAB, 0xD7, 0xEB, 0x2F, 0x5E, 0xBB, 0x76, 0xCD, 0x73, 0xD2, 0xBC, 0xE0, 0xCD, 0x37, 0xDF, 0xFC, 0xF7, 0x9F, 0xFF, 0xFC, 0xE7, 0xFF, 0xEB, 0xE0, 0xE0, 0xC0, 0x2A, 0x91, 0x48, 0xB2, 0x6E, 0xB3, 0xEF, 0x77, 0xEA, 0x8D, 0xAB, 0x54, 0x3B, 0x2F, 0xA9, 0x06, 0xA7, 0x77, 0xCA, 0xBE, 0x49, 0x83, 0xD3, 0x5B, 0x8A, 0xE7, 0x24, 0xF1, 0x12, 0x02, 0xE6, 0xE7, 0xE7, 0x5F, 0x48, 0x5B, 0xC0, 0x85, 0x85, 0x85, 0x87, 0x03, 0x81, 0xC0, 0xE7, 0x9D, 0x4E, 0x67, 0x1E, 0xFA, 0xD6, 0xCD, 0x60, 0x30, 0x5C, 0x7C, 0xF6, 0xD9, 0x67, 0x8D, 0xBF, 0xFB, 0xDD, 0xEF, 0xDE, 0xF8, 0xD5, 0xAF, 0x7E, 0xF5, 0xA3, 0xD7, 0x5E, 0x7B, 0xED, 0xC5, 0xAF, 0x7D, 0xED, 0x6B, 0x6B, 0x87, 0x87, 0x87, 0x96, 0x85, 0x85, 0x85, 0xBE, 0xF1, 0xF1, 0xF1, 0x46, 0xB5, 0x5A, 0x5D, 0x24, 0x97, 0xCB, 0xAF, 0x28, 0x95, 0x4A, 0xDC, 0x49, 0xD9, 0x37, 0xF9, 0xD6, 0x2D, 0xBE, 0x30, 0x99, 0x72, 0xF2, 0x72, 0x96, 0xD6, 0x2D, 0x39, 0xFA, 0x52, 0x0C, 0x4E, 0xE9, 0x04, 0x02, 0xA1, 0x05, 0xD5, 0xFB, 0x32, 0x52, 0xC0, 0xC2, 0x62, 0xB1, 0xB4, 0xBC, 0xBC, 0xBC, 0xCF, 0xA5, 0x2D, 0xE0, 0xFC, 0xFC, 0xFC, 0xB9, 0xA9, 0xA9, 0xA9, 0x4F, 0xA3, 0x04, 0xCC, 0xB5, 0xDB, 0xED, 0x57, 0xAC, 0x56, 0x6B, 0x8E, 0xCB, 0xE5, 0x2A, 0x0B, 0x04, 0x02, 0x54, 0x9B, 0xCD, 0x56, 0x8C, 0xEC, 0xBC, 0xC8, 0xE5, 0xF2, 0xA7, 0x86, 0x87, 0x87, 0x2F, 0x0D, 0x0F, 0x0F, 0x67, 0x0F, 0x0F, 0x0F, 0xE7, 0x29, 0x95, 0x4A, 0xAC, 0x42, 0xA1, 0xC0, 0xDD, 0xCE, 0xBE, 0xA7, 0x98, 0xFB, 0x55, 0x9D, 0x34, 0xF7, 0x8B, 0x47, 0xDF, 0x5D, 0x0D, 0x4E, 0xD1, 0xF6, 0x4D, 0x25, 0x20, 0x0E, 0x87, 0x6B, 0x2F, 0x2C, 0x2C, 0x6C, 0xCC, 0xCE, 0xCE, 0x7E, 0xF4, 0x2C, 0x75, 0x20, 0xF0, 0xF9, 0x7C, 0x1F, 0x9B, 0x98, 0x98, 0xC8, 0x4B, 0x5A, 0xD9, 0xB8, 0x62, 0x32, 0x99, 0x72, 0x74, 0x3A, 0x5D, 0xE6, 0xE8, 0xE8, 0x68, 0x8E, 0x5E, 0xAF, 0xCF, 0x8F, 0xEF, 0xFB, 0x15, 0xE9, 0x74, 0xBA, 0x22, 0xD4, 0xC2, 0xE4, 0x4D, 0x9D, 0x47, 0xF2, 0xC2, 0x64, 0xAA, 0xB9, 0xDF, 0x6D, 0x16, 0x26, 0x53, 0xCE, 0xFD, 0x50, 0xB7, 0x6E, 0x27, 0xCD, 0xFD, 0xC8, 0x35, 0x35, 0x35, 0x94, 0x93, 0x7A, 0xDF, 0xDB, 0x24, 0x0F, 0x06, 0x16, 0x8B, 0x6D, 0xC5, 0xE1, 0x70, 0xEC, 0x82, 0x82, 0x82, 0x8A, 0xAC, 0xAC, 0xAC, 0x07, 0xCF, 0x74, 0x27, 0x12, 0x08, 0x04, 0x1E, 0x19, 0x1F, 0x1F, 0xCF, 0x71, 0x3A, 0x9D, 0xB9, 0x0E, 0x87, 0x23, 0x21, 0xE0, 0x49, 0x0B, 0x93, 0x5A, 0xAD, 0xF6, 0x4E, 0x0B, 0x93, 0x27, 0x0A, 0x78, 0x2F, 0xED, 0x9B, 0x3C, 0x79, 0x49, 0x1E, 0x9C, 0xC6, 0xB3, 0x6F, 0xCB, 0x9D, 0x04, 0xC4, 0x62, 0xB1, 0x5D, 0xF9, 0xF9, 0xF9, 0x79, 0x58, 0x2C, 0x36, 0xFD, 0x56, 0xCE, 0xE5, 0x72, 0x81, 0x89, 0x89, 0x89, 0x87, 0x26, 0x26, 0x26, 0x2E, 0x8F, 0x8F, 0x8F, 0x5F, 0x89, 0xEF, 0xBC, 0xDC, 0xB2, 0xF3, 0x87, 0xDE, 0x77, 0xBE, 0xDD, 0xC2, 0x64, 0xF2, 0xF9, 0x97, 0xAA, 0x75, 0x4B, 0xDA, 0x77, 0xBE, 0xA9, 0x75, 0x43, 0x47, 0xDF, 0xDD, 0x8E, 0xED, 0x93, 0x5B, 0xB7, 0xDB, 0x58, 0xB8, 0x2B, 0x3F, 0x3F, 0xFF, 0xF1, 0x33, 0x0D, 0x54, 0x27, 0x26, 0x26, 0x80, 0xCB, 0xE5, 0x02, 0x6E, 0xB7, 0xFB, 0x09, 0x87, 0xC3, 0x91, 0x6F, 0xB3, 0xD9, 0x72, 0xE3, 0x1B, 0xA7, 0x79, 0xE8, 0x8D, 0x53, 0x74, 0xF4, 0xA1, 0x05, 0x4C, 0x5E, 0x98, 0x44, 0x15, 0xCF, 0xA5, 0xA7, 0x6D, 0xDD, 0x4E, 0x2A, 0x9E, 0x53, 0xB4, 0x6E, 0x8D, 0xA9, 0xEC, 0x7B, 0xBB, 0xD1, 0xD5, 0x1D, 0xA2, 0x8F, 0x11, 0x2F, 0xA0, 0x59, 0x58, 0x2C, 0xF6, 0x13, 0x67, 0x8A, 0x40, 0x9B, 0xCD, 0x86, 0xF0, 0x19, 0x87, 0xC3, 0x51, 0x90, 0x2A, 0xFA, 0x10, 0xFB, 0x6A, 0xB5, 0xDA, 0x3B, 0x6E, 0xDB, 0x9F, 0x34, 0xB6, 0x3F, 0x61, 0xDB, 0xFE, 0xD4, 0x93, 0x97, 0x54, 0xC9, 0xE3, 0x0E, 0xB5, 0x1F, 0x3A, 0x79, 0xB4, 0xA4, 0xA8, 0xFD, 0x10, 0x3A, 0x8A, 0x8A, 0x8A, 0x9A, 0x30, 0x18, 0xCC, 0xC3, 0x19, 0x19, 0x19, 0xE9, 0x0B, 0x68, 0xB7, 0xDB, 0x81, 0xDD, 0x6E, 0x07, 0x0E, 0x87, 0xE3, 0xC3, 0x76, 0xBB, 0x3D, 0xCF, 0x66, 0xB3, 0xE5, 0x59, 0xAD, 0x56, 0xF4, 0xBA, 0x6E, 0xFE, 0xE8, 0xE8, 0x68, 0x01, 0xCA, 0xBE, 0x27, 0x6E, 0xDB, 0xDF, 0xA9, 0x75, 0x3B, 0xED, 0xBE, 0x73, 0xAA, 0xC1, 0x29, 0xB2, 0xB2, 0x91, 0xCA, 0xBE, 0x27, 0xCD, 0xFD, 0xEE, 0x50, 0xFB, 0x25, 0xEC, 0x5B, 0x58, 0x58, 0x58, 0x70, 0xE6, 0xFD, 0x40, 0x83, 0xC1, 0x00, 0x0C, 0x06, 0x03, 0xD0, 0xEB, 0xF5, 0xE7, 0xAC, 0x56, 0xEB, 0x25, 0x9B, 0xCD, 0x56, 0x68, 0xB1, 0x58, 0x4E, 0x95, 0x3C, 0x92, 0x06, 0xA7, 0x27, 0xCD, 0xFD, 0xCE, 0x94, 0x3C, 0x6E, 0x37, 0x79, 0x39, 0x61, 0x6C, 0x7F, 0x53, 0xEB, 0x96, 0x62, 0xEE, 0x77, 0x62, 0x04, 0xE6, 0xE7, 0xE7, 0x7F, 0x2E, 0x2F, 0x2F, 0x0F, 0xE4, 0xE5, 0xE5, 0x9D, 0x79, 0x22, 0x0D, 0xCC, 0x66, 0x33, 0x18, 0x1B, 0x1B, 0x7B, 0xCC, 0x66, 0xB3, 0x15, 0x9D, 0xF6, 0x75, 0x85, 0x74, 0x07, 0xA7, 0xC9, 0x02, 0xDE, 0xC5, 0xAD, 0xDB, 0x6D, 0xED, 0x9B, 0x86, 0x80, 0x2C, 0x3C, 0x1E, 0xDF, 0xF8, 0xF4, 0xD3, 0x4F, 0x3F, 0x7C, 0xFE, 0xFC, 0x79, 0x70, 0xE1, 0xC2, 0x05, 0x70, 0x96, 0x5E, 0x38, 0xC1, 0xCC, 0xCC, 0xCC, 0x87, 0xEC, 0x76, 0xFB, 0x15, 0x93, 0xC9, 0x54, 0x90, 0x6C, 0xDF, 0x78, 0xF2, 0xC0, 0xA6, 0xFB, 0xBA, 0xC2, 0xED, 0x76, 0x5E, 0x4E, 0x78, 0x5D, 0xA1, 0x3E, 0xA9, 0x75, 0x3B, 0xD3, 0xA5, 0xF9, 0x29, 0x92, 0x07, 0xA3, 0xA0, 0xA0, 0xA0, 0xB3, 0xBC, 0xBC, 0xFC, 0x72, 0x7D, 0x7D, 0x3D, 0xA8, 0xA9, 0xA9, 0x01, 0x67, 0xBE, 0x95, 0x43, 0x33, 0x3E, 0x3E, 0xFE, 0x05, 0x83, 0xC1, 0x80, 0x45, 0xA2, 0x0F, 0x29, 0x5F, 0xD0, 0xF6, 0x45, 0x65, 0x5F, 0xF4, 0xDB, 0x46, 0x84, 0x74, 0x6A, 0xBF, 0xB3, 0x0C, 0x4E, 0xD1, 0xB5, 0xDF, 0x19, 0x07, 0xA7, 0x68, 0x98, 0xC5, 0xC5, 0xC5, 0xF4, 0xF2, 0xF2, 0xF2, 0x3F, 0xAA, 0xAA, 0xAA, 0x02, 0x08, 0x69, 0x0B, 0x88, 0xBC, 0x59, 0x69, 0xB1, 0x58, 0x80, 0xD5, 0x6A, 0x05, 0x66, 0xB3, 0xF9, 0x11, 0x83, 0xC1, 0x90, 0x6F, 0x30, 0x18, 0x0A, 0xD1, 0xC9, 0x23, 0x9D, 0x77, 0xDD, 0x92, 0xB3, 0x6F, 0x3A, 0x2B, 0x1B, 0x77, 0x73, 0xEB, 0x86, 0xCA, 0xBE, 0xF4, 0xDB, 0xB5, 0x6E, 0x58, 0x2C, 0x96, 0x51, 0x58, 0x58, 0xD8, 0x59, 0x52, 0x52, 0x92, 0x53, 0x5D, 0x5D, 0x0D, 0x2A, 0x2B, 0x2B, 0x13, 0xDC, 0x75, 0x04, 0x4E, 0x4F, 0x4F, 0x83, 0xF1, 0xF1, 0xF1, 0x2F, 0xE8, 0x74, 0x3A, 0x1C, 0xCA, 0xBE, 0x85, 0x49, 0xD1, 0x87, 0x4B, 0x1A, 0x1C, 0xA4, 0xB2, 0x6F, 0xF9, 0xED, 0xE6, 0x7E, 0xB7, 0xDB, 0x77, 0x4E, 0xD5, 0xBA, 0xDD, 0xC5, 0xAD, 0xDB, 0x2D, 0xE2, 0x15, 0x15, 0x15, 0xB1, 0x4A, 0x4B, 0x4B, 0x69, 0xFD, 0xFD, 0xFD, 0x7F, 0x34, 0x38, 0x38, 0x08, 0x04, 0x02, 0x41, 0x82, 0xB4, 0x05, 0x3C, 0x38, 0x38, 0xB8, 0x89, 0x70, 0x38, 0x0C, 0x36, 0x37, 0x37, 0x3F, 0x64, 0x36, 0x9B, 0x73, 0xB5, 0x5A, 0x2D, 0xF6, 0xA4, 0xE4, 0x91, 0x6A, 0x70, 0x90, 0x9C, 0x3C, 0x4E, 0x7A, 0x59, 0xE6, 0x6E, 0x6A, 0xBF, 0xF8, 0xC2, 0x78, 0x73, 0x1A, 0xB7, 0x6E, 0x29, 0xA3, 0xAF, 0xA6, 0xA6, 0xE6, 0xC9, 0x9E, 0x9E, 0x1E, 0xC0, 0xE5, 0x72, 0x6F, 0x22, 0x6D, 0x01, 0x8F, 0x8F, 0x8F, 0x6F, 0xE2, 0x99, 0x67, 0x9E, 0x01, 0xD1, 0x68, 0x14, 0xD8, 0x6C, 0xB6, 0xCF, 0xE8, 0x74, 0xBA, 0xE2, 0xF8, 0x9B, 0x96, 0x77, 0x6B, 0xDF, 0x9B, 0x5E, 0x16, 0x44, 0xAD, 0xAC, 0xD5, 0x9C, 0x75, 0x65, 0xAD, 0xA6, 0xA6, 0xE6, 0x96, 0xB9, 0xDF, 0x29, 0x27, 0x2F, 0x6C, 0x2C, 0x16, 0x5B, 0x53, 0x52, 0x52, 0xF2, 0x81, 0xD2, 0xD2, 0x52, 0x40, 0x20, 0x10, 0x6E, 0xE2, 0x4C, 0xD3, 0x98, 0x54, 0x38, 0x1C, 0x0E, 0x30, 0x3C, 0x3C, 0x7C, 0x5E, 0xA7, 0xD3, 0x95, 0xA8, 0xD5, 0xEA, 0xA2, 0xB8, 0x78, 0xC9, 0xF6, 0xC5, 0xA7, 0x1A, 0xDB, 0x27, 0x0F, 0x4E, 0x4F, 0xDB, 0xBA, 0x25, 0xDB, 0x37, 0xD5, 0xEB, 0x0A, 0xE8, 0x9D, 0x97, 0x13, 0x36, 0xAE, 0x6E, 0x67, 0x5F, 0x56, 0x41, 0x41, 0x41, 0x5B, 0x76, 0x76, 0xF6, 0xC7, 0xEF, 0xD9, 0x8B, 0x36, 0xE8, 0xF5, 0x36, 0x04, 0xB3, 0xD9, 0x0C, 0xF4, 0x7A, 0x3D, 0xE8, 0xED, 0xED, 0xFD, 0xA0, 0x56, 0xAB, 0xBD, 0xA2, 0x52, 0xA9, 0xF0, 0x49, 0x93, 0x97, 0x84, 0x80, 0x28, 0xF1, 0x08, 0xA9, 0x5E, 0x57, 0xE8, 0xED, 0xED, 0xAD, 0xE0, 0x70, 0x38, 0xE8, 0x6D, 0xFB, 0x6A, 0x16, 0x8B, 0x75, 0x4F, 0xC6, 0xF6, 0x29, 0xE6, 0x7E, 0x89, 0x9D, 0x97, 0x13, 0xAC, 0xDB, 0x9D, 0x9F, 0x9F, 0x7F, 0x3E, 0x37, 0x37, 0x17, 0x14, 0x17, 0x17, 0x03, 0x1C, 0x0E, 0x77, 0x0B, 0x69, 0x0B, 0x28, 0x14, 0x0A, 0x53, 0x22, 0x12, 0x89, 0x80, 0x44, 0x22, 0x01, 0x0B, 0x0B, 0x0B, 0x1F, 0xD5, 0xEB, 0xF5, 0x65, 0xA3, 0xA3, 0xA3, 0x65, 0x3A, 0x9D, 0xAE, 0x64, 0x64, 0x64, 0xA4, 0x54, 0xAD, 0x56, 0x97, 0xA9, 0xD5, 0xEA, 0x32, 0x95, 0x4A, 0x55, 0xAE, 0x50, 0x28, 0x2A, 0x86, 0x87, 0x87, 0x2B, 0xE4, 0x72, 0x79, 0xA5, 0x4C, 0x26, 0xAB, 0x92, 0x4A, 0xA5, 0x55, 0x12, 0x89, 0xA4, 0x7A, 0x68, 0x68, 0xA8, 0x46, 0x24, 0x12, 0xD5, 0x08, 0x04, 0x82, 0x5A, 0x3E, 0x9F, 0x5F, 0xC7, 0xE7, 0xF3, 0xEB, 0x78, 0x3C, 0x5E, 0x5D, 0x6F, 0x6F, 0x6F, 0x7D, 0x4F, 0x4F, 0x0F, 0x91, 0xCB, 0xE5, 0x12, 0x39, 0x1C, 0x4E, 0x43, 0x77, 0x77, 0x77, 0x63, 0x57, 0x57, 0x57, 0x63, 0x67, 0x67, 0x67, 0x53, 0x7B, 0x7B, 0x3B, 0x89, 0xC5, 0x62, 0x91, 0x99, 0x4C, 0x26, 0xB9, 0xA5, 0xA5, 0xA5, 0xB9, 0xA5, 0xA5, 0x85, 0xD2, 0xD2, 0xD2, 0x42, 0xA1, 0xD1, 0x68, 0x54, 0x2A, 0x95, 0x4A, 0x6B, 0x6E, 0x6E, 0xA6, 0x91, 0xC9, 0x64, 0x7A, 0x53, 0x53, 0x53, 0x4B, 0x43, 0x43, 0x43, 0x0B, 0x91, 0x48, 0x6C, 0x25, 0x12, 0x89, 0x8C, 0xFA, 0xFA, 0x7A, 0x46, 0x4D, 0x4D, 0x4D, 0x5B, 0x75, 0x75, 0x35, 0xB3, 0xB2, 0xB2, 0x92, 0x59, 0x51, 0x51, 0xC1, 0x2C, 0x2F, 0x2F, 0x6F, 0x47, 0x83, 0xC7, 0xE3, 0x7B, 0x3B, 0x3A, 0x3A, 0x8A, 0x68, 0x34, 0x1A, 0xA8, 0xAC, 0xAC, 0x04, 0xD5, 0xD5, 0xD5, 0x29, 0x49, 0x5B, 0x40, 0xB1, 0x58, 0x7C, 0x22, 0x12, 0x89, 0x04, 0x6C, 0x6C, 0x6C, 0x00, 0x8F, 0xC7, 0xF3, 0x98, 0xDD, 0x6E, 0x27, 0x8E, 0x8D, 0x8D, 0xD5, 0x59, 0xAD, 0xD6, 0x5A, 0x8B, 0xC5, 0x52, 0x67, 0xB1, 0x58, 0xEA, 0xCC, 0x66, 0x73, 0xBD, 0xC9, 0x64, 0x22, 0x1A, 0x8D, 0x46, 0xA2, 0xC1, 0x60, 0x68, 0xD4, 0xEB, 0xF5, 0x8D, 0xA3, 0xA3, 0xA3, 0x8D, 0x3A, 0x9D, 0xAE, 0x49, 0xAB, 0xD5, 0x92, 0x34, 0x1A, 0x0D, 0x49, 0xA9, 0x54, 0x92, 0x15, 0x0A, 0x05, 0x59, 0xA1, 0x50, 0x90, 0xE5, 0x72, 0x79, 0xF3, 0xD0, 0xD0, 0x10, 0x65, 0x68, 0x68, 0x88, 0x22, 0x16, 0x8B, 0xA9, 0x22, 0x91, 0x88, 0x16, 0x87, 0x3E, 0x38, 0x38, 0xD8, 0xC2, 0xE7, 0xF3, 0x5B, 0x79, 0x3C, 0x5E, 0x6B, 0x5F, 0x5F, 0x1F, 0x83, 0xCB, 0xE5, 0xB6, 0xC5, 0x61, 0x72, 0x38, 0x1C, 0x56, 0x77, 0x77, 0x37, 0x8B, 0xCD, 0x66, 0xB3, 0x3A, 0x3A, 0x3A, 0x3A, 0x58, 0x2C, 0x56, 0x07, 0x93, 0xC9, 0xEC, 0x60, 0x32, 0x99, 0x1D, 0x6D, 0x6D, 0x6D, 0x6C, 0x06, 0x83, 0xC1, 0xA6, 0xD3, 0xE9, 0x5D, 0x54, 0x2A, 0xB5, 0x8B, 0x42, 0xA1, 0x74, 0x35, 0x37, 0x37, 0x77, 0x37, 0x37, 0x37, 0x73, 0x10, 0xA8, 0x54, 0xEA, 0x00, 0x89, 0x44, 0x22, 0x0E, 0x0E, 0x0E, 0x7E, 0xA0, 0xB5, 0xB5, 0x15, 0x94, 0x97, 0x97, 0x03, 0x74, 0xED, 0x77, 0x57, 0x75, 0xA0, 0x48, 0x24, 0x3A, 0x91, 0xA1, 0xA1, 0x21, 0xB0, 0xB9, 0xB9, 0x09, 0xBC, 0x5E, 0x2F, 0xD0, 0xEB, 0xF5, 0xE7, 0x7D, 0x3E, 0x5F, 0x8B, 0xCB, 0xE5, 0xA2, 0xB8, 0xDD, 0xEE, 0xE6, 0x89, 0x89, 0x09, 0x8A, 0xD3, 0xE9, 0xA4, 0x3A, 0x9D, 0x4E, 0xEA, 0xD8, 0xD8, 0x18, 0xCD, 0xE1, 0x70, 0xD0, 0x1D, 0x0E, 0x07, 0xDD, 0x6E, 0xB7, 0xB7, 0x58, 0xAD, 0xD6, 0x16, 0xAB, 0xD5, 0xDA, 0x6A, 0x32, 0x99, 0x5A, 0x8D, 0x46, 0x23, 0xC3, 0x60, 0x30, 0xB4, 0x19, 0x0C, 0x86, 0x36, 0x9D, 0x4E, 0xC7, 0x1C, 0x19, 0x19, 0x61, 0x69, 0xB5, 0x5A, 0xA6, 0x46, 0xA3, 0x61, 0xA9, 0x54, 0xAA, 0xF6, 0x38, 0x1D, 0xC3, 0xC3, 0xC3, 0x6C, 0x99, 0x4C, 0xD6, 0x29, 0x93, 0xC9, 0x3A, 0x25, 0x12, 0x49, 0x97, 0x58, 0x2C, 0xEE, 0x16, 0x8B, 0xC5, 0xDD, 0x22, 0x91, 0x88, 0x23, 0x14, 0x0A, 0xB9, 0x02, 0x81, 0x80, 0xCB, 0xE7, 0xF3, 0x7B, 0xF8, 0x7C, 0x7E, 0x4F, 0x7F, 0x7F, 0x7F, 0x4F, 0x5F, 0x5F, 0x5F, 0x6F, 0x5F, 0x5F, 0x5F, 0x5F, 0x6F, 0x6F, 0x6F, 0x1F, 0x97, 0xCB, 0xED, 0xEF, 0xEE, 0xEE, 0xE6, 0x75, 0x75, 0x75, 0xF1, 0xD8, 0x6C, 0x36, 0x8F, 0xCD, 0x66, 0xF3, 0x3B, 0x3A, 0x3A, 0xF8, 0x1D, 0x1D, 0x1D, 0x7C, 0x36, 0x9B, 0x2D, 0x66, 0x32, 0x99, 0xCC, 0xB6, 0xB6, 0xB6, 0x47, 0xF8, 0x7C, 0x3E, 0xA0, 0xD3, 0xE9, 0xA0, 0xA2, 0xA2, 0xE2, 0xDE, 0x45, 0xA0, 0x4A, 0xA5, 0x3A, 0x11, 0xB5, 0x5A, 0x0D, 0x02, 0x81, 0x00, 0x18, 0x1F, 0x1F, 0x07, 0x2A, 0x95, 0xEA, 0x9C, 0xCF, 0xE7, 0x2B, 0x99, 0x9E, 0x9E, 0xEE, 0x0C, 0x04, 0x02, 0x6D, 0x93, 0x93, 0x93, 0x4C, 0x9F, 0xCF, 0xC7, 0xF2, 0xF9, 0x7C, 0xED, 0x5E, 0xAF, 0xB7, 0xDD, 0xE3, 0xF1, 0x74, 0x78, 0x3C, 0x9E, 0x0E, 0xB7, 0xDB, 0xCD, 0x76, 0xB9, 0x5C, 0xEC, 0x89, 0x89, 0x09, 0xF6, 0xD8, 0xD8, 0x58, 0xA7, 0xC3, 0xE1, 0xE8, 0x72, 0x38, 0x1C, 0x5D, 0x76, 0xBB, 0xBD, 0xDB, 0x62, 0xB1, 0x70, 0xCC, 0x66, 0x33, 0xC7, 0x6C, 0x36, 0x73, 0x4D, 0x26, 0x13, 0xD7, 0x68, 0x34, 0x72, 0x8D, 0x46, 0x63, 0x8F, 0xC1, 0x60, 0xE8, 0xD5, 0xE9, 0x74, 0x7D, 0x5A, 0xAD, 0xB6, 0x6F, 0x64, 0x64, 0xA4, 0x5F, 0xA3, 0xD1, 0xF4, 0xAB, 0x54, 0x2A, 0x9E, 0x4A, 0xA5, 0xE2, 0x29, 0x95, 0x4A, 0xBE, 0x52, 0xA9, 0xE4, 0xCB, 0xE5, 0x72, 0xBE, 0x4C, 0x26, 0x1B, 0x90, 0x4A, 0xA5, 0x82, 0xA1, 0xA1, 0x21, 0x81, 0x58, 0x2C, 0x1E, 0x14, 0x8B, 0xC5, 0x42, 0xB1, 0x58, 0x2C, 0x1C, 0x1C, 0x1C, 0x14, 0x09, 0x04, 0x02, 0x31, 0x9F, 0xCF, 0x17, 0xF3, 0x78, 0x3C, 0x31, 0x8F, 0xC7, 0x1B, 0xE2, 0xF1, 0x78, 0x43, 0x7C, 0x3E, 0x5F, 0xCA, 0xE3, 0xF1, 0x86, 0x28, 0x14, 0xCA, 0x63, 0x44, 0x22, 0x11, 0x34, 0x35, 0x35, 0x81, 0x86, 0x86, 0x86, 0x13, 0x5F, 0x75, 0x3D, 0xD3, 0xEB, 0xAE, 0xE8, 0x61, 0x42, 0x2A, 0x0C, 0x06, 0x03, 0x30, 0x1A, 0x8D, 0xC0, 0x64, 0x32, 0x01, 0xBB, 0xDD, 0xFE, 0xD1, 0xB9, 0xB9, 0x39, 0x76, 0x30, 0x18, 0xEC, 0x99, 0x9D, 0x9D, 0xE5, 0xCE, 0xCE, 0xCE, 0x72, 0x67, 0x66, 0x66, 0x7A, 0x02, 0x81, 0x40, 0x6F, 0x20, 0x10, 0xE8, 0x09, 0x04, 0x02, 0x3D, 0x53, 0x53, 0x53, 0xBD, 0x93, 0x93, 0x93, 0x7D, 0x7E, 0xBF, 0xBF, 0xDF, 0xEB, 0xF5, 0xF6, 0x7B, 0x3C, 0x1E, 0x9E, 0xC7, 0xE3, 0xE1, 0xB9, 0x5C, 0x2E, 0xBE, 0xD3, 0xE9, 0xE4, 0x3B, 0x9D, 0x4E, 0xFE, 0xF8, 0xF8, 0xF8, 0xC0, 0xD8, 0xD8, 0x98, 0x60, 0x6C, 0x6C, 0x4C, 0xE0, 0x70, 0x38, 0x06, 0xED, 0x76, 0xBB, 0xD0, 0x62, 0xB1, 0x08, 0xCD, 0x66, 0xB3, 0xD0, 0x64, 0x32, 0x89, 0x0C, 0x06, 0x83, 0x38, 0xCE, 0xD0, 0xE8, 0xE8, 0xA8, 0x44, 0xAF, 0xD7, 0x4B, 0xB4, 0x5A, 0xAD, 0x64, 0x64, 0x64, 0x44, 0xAA, 0x56, 0xAB, 0xA5, 0x2A, 0x95, 0x4A, 0xA6, 0x54, 0x2A, 0xE5, 0x4A, 0xA5, 0x52, 0xAE, 0x50, 0x28, 0xE4, 0xC3, 0xC3, 0xC3, 0xC3, 0x32, 0x99, 0x4C, 0x21, 0x95, 0x4A, 0x15, 0x52, 0xA9, 0x54, 0x21, 0x91, 0x48, 0x94, 0x71, 0x8C, 0x42, 0xA1, 0x90, 0xD0, 0xD1, 0xD1, 0x01, 0xDA, 0xDB, 0xDB, 0x4F, 0xC5, 0x5D, 0xBF, 0x6C, 0x78, 0x3B, 0x96, 0x97, 0x97, 0xC1, 0xDA, 0xDA, 0x5A, 0xFE, 0xD2, 0xD2, 0x92, 0x74, 0x61, 0x61, 0x61, 0x60, 0x61, 0x61, 0x61, 0x60, 0x7E, 0x7E, 0x5E, 0x10, 0x0C, 0x06, 0x07, 0x83, 0xC1, 0xE0, 0xE0, 0xDC, 0xDC, 0x9C, 0x70, 0x76, 0x76, 0x56, 0x38, 0x3B, 0x3B, 0x2B, 0x9C, 0x9E, 0x9E, 0x16, 0x4D, 0x4D, 0x4D, 0x89, 0x03, 0x81, 0x80, 0x78, 0x6A, 0x6A, 0x6A, 0xC8, 0xEF, 0xF7, 0x0F, 0xF9, 0x7C, 0x3E, 0x89, 0xD7, 0xEB, 0x95, 0x78, 0x3C, 0x1E, 0x29, 0x82, 0xDB, 0xED, 0x96, 0x4D, 0x4C, 0x4C, 0xC8, 0x9D, 0x4E, 0xA7, 0xDC, 0xE9, 0x74, 0xCA, 0xC7, 0xC6, 0xC6, 0x14, 0x76, 0xBB, 0x5D, 0x61, 0xB7, 0xDB, 0x15, 0x36, 0x9B, 0x4D, 0x69, 0xB5, 0x5A, 0x55, 0x56, 0xAB, 0x55, 0x65, 0x36, 0x9B, 0x55, 0x26, 0x93, 0x49, 0x6D, 0x30, 0x18, 0xD4, 0x7A, 0xBD, 0x5E, 0x33, 0x3A, 0x3A, 0x3A, 0x32, 0x3A, 0x3A, 0xAA, 0xD1, 0xE9, 0x74, 0x23, 0x23, 0x23, 0x23, 0x5A, 0x8D, 0x46, 0xA3, 0x55, 0xAB, 0xD5, 0x3A, 0x04, 0x8D, 0x46, 0x63, 0x1E, 0x1E, 0x1E, 0x96, 0xF7, 0xF5, 0xF5, 0x7D, 0x58, 0x22, 0x91, 0x80, 0xA1, 0xA1, 0xA1, 0x53, 0x91, 0xB6, 0x80, 0x2B, 0x2B, 0x2B, 0xE9, 0xF2, 0xE8, 0xCA, 0xCA, 0x8A, 0x20, 0x14, 0x0A, 0x29, 0x42, 0xA1, 0x90, 0x6C, 0x79, 0x79, 0x59, 0xB6, 0xBC, 0xBC, 0x2C, 0x5F, 0x5E, 0x5E, 0x96, 0x2F, 0x2D, 0x2D, 0x0D, 0x2F, 0x2E, 0x2E, 0x2A, 0x16, 0x16, 0x16, 0x14, 0xF3, 0xF3, 0xF3, 0x8A, 0x60, 0x30, 0xA8, 0x0C, 0x06, 0x83, 0xCA, 0xB9, 0xB9, 0x39, 0xD5, 0xF4, 0xF4, 0xB4, 0x6A, 0x7A, 0x7A, 0x5A, 0x15, 0x08, 0x04, 0xD4, 0x53, 0x53, 0x53, 0x1A, 0x84, 0xC9, 0xC9, 0xC9, 0x11, 0x9F, 0xCF, 0x37, 0xE2, 0xF5, 0x7A, 0xB5, 0x5E, 0xAF, 0x57, 0xEB, 0x72, 0xB9, 0x46, 0xD1, 0x4C, 0x4C, 0x4C, 0xE8, 0x9D, 0x4E, 0xA7, 0x7E, 0x6C, 0x6C, 0xCC, 0xE0, 0x70, 0x38, 0x0C, 0x76, 0xBB, 0xDD, 0x60, 0xB5, 0x5A, 0x8D, 0x16, 0x8B, 0xC5, 0x64, 0xB5, 0x5A, 0x4D, 0x16, 0x8B, 0xC5, 0x6C, 0x36, 0x9B, 0xCD, 0x26, 0x93, 0xC9, 0x6C, 0x34, 0x1A, 0x2D, 0x06, 0x83, 0xC1, 0x6A, 0x30, 0x18, 0xAC, 0x26, 0x93, 0xC9, 0xA7, 0x50, 0x28, 0xCA, 0x38, 0x1C, 0x0E, 0x48, 0x87, 0x77, 0x34, 0x02, 0x11, 0x42, 0xA1, 0x50, 0xED, 0xC6, 0xC6, 0x86, 0x65, 0x63, 0x63, 0x43, 0xB3, 0xB6, 0xB6, 0x36, 0xB2, 0xBA, 0xBA, 0x3A, 0x12, 0xFF, 0xD4, 0x86, 0x42, 0x21, 0xDD, 0xF2, 0xF2, 0xB2, 0x6E, 0x69, 0x69, 0x69, 0x74, 0x71, 0x71, 0x71, 0x74, 0x71, 0x71, 0x71, 0x74, 0x61, 0x61, 0x41, 0x1F, 0x0C, 0x06, 0xF5, 0xC1, 0x60, 0x50, 0x3F, 0x37, 0x37, 0x67, 0x98, 0x9D, 0x9D, 0x35, 0x22, 0xCC, 0xCC, 0xCC, 0x98, 0x02, 0x81, 0x80, 0x79, 0x6A, 0x6A, 0xCA, 0x3C, 0x35, 0x35, 0x65, 0xF6, 0xFB, 0xFD, 0x16, 0xBF, 0xDF, 0x6F, 0xF1, 0xF9, 0x7C, 0x56, 0x9F, 0xCF, 0x67, 0xF5, 0x7A, 0xBD, 0x56, 0x8F, 0xC7, 0x63, 0x73, 0xBB, 0xDD, 0x76, 0x97, 0xCB, 0x65, 0x9F, 0x98, 0x98, 0xB0, 0x3B, 0x9D, 0x4E, 0x47, 0x9C, 0xB1, 0xB1, 0xB1, 0xB1, 0x31, 0x87, 0xC3, 0x31, 0x66, 0xB7, 0xDB, 0xC7, 0x6D, 0x36, 0x9B, 0x33, 0x8E, 0xDB, 0x6A, 0xB5, 0xDA, 0x75, 0x3A, 0xDD, 0x1F, 0x8F, 0x8E, 0x8E, 0x82, 0x74, 0x48, 0x5B, 0xC0, 0xE5, 0xE5, 0xE5, 0xB4, 0x59, 0x5D, 0x5D, 0xFD, 0xCB, 0xED, 0xED, 0x6D, 0xFB, 0xD6, 0xD6, 0x96, 0x65, 0x73, 0x73, 0xD3, 0xBC, 0xB9, 0xB9, 0x69, 0x8E, 0x0B, 0x6A, 0x59, 0x5F, 0x5F, 0xB7, 0xAE, 0xAD, 0xAD, 0x59, 0x57, 0x57, 0x57, 0x6D, 0xA1, 0x50, 0xC8, 0x16, 0x0A, 0x85, 0xEC, 0x2B, 0x2B, 0x2B, 0xF6, 0xA5, 0xA5, 0x25, 0xFB, 0xD2, 0xD2, 0x92, 0x7D, 0x71, 0x71, 0xD1, 0x81, 0xB0, 0xB0, 0xB0, 0x30, 0x36, 0x3F, 0x3F, 0x3F, 0x1E, 0x0C, 0x06, 0xC7, 0x83, 0xC1, 0xE0, 0xF8, 0xEC, 0xEC, 0xAC, 0x73, 0x76, 0x76, 0x76, 0x62, 0x76, 0x76, 0x76, 0x62, 0x66, 0x66, 0x66, 0x62, 0x7A, 0x7A, 0xDA, 0x15, 0x08, 0x04, 0x5C, 0x53, 0x53, 0x53, 0xEE, 0xC9, 0xC9, 0x49, 0xB7, 0xDF, 0xEF, 0x77, 0xFB, 0x7C, 0x3E, 0x8F, 0xCF, 0xE7, 0xF3, 0xFA, 0x7C, 0x3E, 0xAF, 0xD7, 0xEB, 0xF5, 0x7A, 0x3C, 0x1E, 0x9F, 0xDB, 0xED, 0xF6, 0xB9, 0x5C, 0x2E, 0x9F, 0xCB, 0xE5, 0xF2, 0xBB, 0x5C, 0x2E, 0xBF, 0xDB, 0xED, 0x5E, 0xB2, 0x5A, 0xAD, 0x5D, 0x1A, 0x8D, 0x06, 0x68, 0xB5, 0xDA, 0xB4, 0x48, 0x5B, 0xC0, 0xCD, 0xCD, 0xCD, 0xB4, 0xD8, 0xD8, 0xD8, 0x00, 0xDB, 0xDB, 0xDB, 0x0F, 0xEF, 0xEE, 0xEE, 0x0E, 0x6F, 0x6F, 0x6F, 0xFB, 0xB6, 0xB7, 0xB7, 0x9D, 0xDB, 0xDB, 0xDB, 0xCE, 0xAD, 0xAD, 0xAD, 0x89, 0xCD, 0xCD, 0xCD, 0x89, 0xCD, 0xCD, 0xCD, 0x89, 0xF5, 0xF5, 0x75, 0x17, 0xC2, 0xDA, 0xDA, 0x9A, 0x3B, 0x14, 0x0A, 0x79, 0x10, 0x56, 0x56, 0x56, 0xBC, 0x08, 0xCB, 0xCB, 0xCB, 0xBE, 0xC5, 0xC5, 0x45, 0x3F, 0xC2, 0xFC, 0xFC, 0xFC, 0x24, 0x42, 0x30, 0x18, 0x9C, 0x0A, 0x06, 0x83, 0x53, 0x73, 0x73, 0x73, 0x81, 0xD9, 0xD9, 0xD9, 0xC0, 0xCC, 0xCC, 0x4C, 0x60, 0x7A, 0x7A, 0x3A, 0x30, 0x1D, 0x7F, 0x02, 0x81, 0xC0, 0xF4, 0xE4, 0xE4, 0xE4, 0xCC, 0xE4, 0xE4, 0xE4, 0xAC, 0xDF, 0xEF, 0x9F, 0xF5, 0xFB, 0xFD, 0xB3, 0x3E, 0x9F, 0x6F, 0xCE, 0xE7, 0xF3, 0xCD, 0xFA, 0xFD, 0xFE, 0x75, 0xA3, 0xD1, 0x78, 0x45, 0xAD, 0x56, 0x03, 0x8D, 0x46, 0x93, 0x16, 0x69, 0x0B, 0xB8, 0xB7, 0xB7, 0x77, 0x26, 0x76, 0x77, 0x77, 0x99, 0x7B, 0x7B, 0x7B, 0x4B, 0xBB, 0xBB, 0xBB, 0xFE, 0xDD, 0xDD, 0xDD, 0xA9, 0x9D, 0x9D, 0x9D, 0xA9, 0x9D, 0x9D, 0x9D, 0xA9, 0xED, 0xED, 0xED, 0xA9, 0xAD, 0xAD, 0xAD, 0x40, 0x9C, 0xE9, 0xCD, 0xCD, 0xCD, 0xE9, 0x8D, 0x8D, 0x8D, 0xE9, 0x8D, 0x8D, 0x8D, 0xE9, 0xF5, 0xF5, 0xF5, 0x99, 0xB5, 0xB5, 0x35, 0x84, 0xD9, 0x50, 0x28, 0x34, 0xB7, 0xB2, 0xB2, 0x82, 0x10, 0x5C, 0x5E, 0x5E, 0x46, 0x98, 0x5F, 0x5A, 0x5A, 0x9A, 0x5F, 0x5C, 0x5C, 0x9C, 0x5F, 0x58, 0x58, 0x58, 0x98, 0x9F, 0x9F, 0x47, 0x58, 0x0C, 0x06, 0x83, 0x4B, 0xC1, 0x60, 0x70, 0x69, 0x6E, 0x6E, 0x6E, 0x69, 0x76, 0x76, 0x76, 0x69, 0x66, 0x66, 0x66, 0x79, 0x66, 0x66, 0x66, 0x79, 0x7A, 0x7A, 0x7A, 0x25, 0x10, 0x08, 0xAC, 0x4C, 0x4F, 0x4F, 0x6F, 0x04, 0x02, 0x81, 0x79, 0xBB, 0xDD, 0xFE, 0x09, 0xAB, 0xD5, 0x0A, 0xD2, 0xE5, 0x1D, 0x8F, 0x40, 0x84, 0xED, 0xED, 0x6D, 0xEC, 0xFE, 0xFE, 0xFE, 0xC6, 0xFE, 0xFE, 0x7E, 0x70, 0x6F, 0x6F, 0x6F, 0x1E, 0x61, 0x67, 0x67, 0x67, 0x01, 0x61, 0x7B, 0x7B, 0x7B, 0x71, 0x6B, 0x6B, 0x0B, 0x61, 0x69, 0x73, 0x73, 0x33, 0xC1, 0xC6, 0xC6, 0xC6, 0xF2, 0xFA, 0xFA, 0xFA, 0xF2, 0xDA, 0xDA, 0xDA, 0xCA, 0xDA, 0xDA, 0xDA, 0xCA, 0xEA, 0xEA, 0x6A, 0x08, 0xF5, 0xAC, 0x86, 0x42, 0xA1, 0xD5, 0x95, 0x95, 0x95, 0xD5, 0xE5, 0xE5, 0xE5, 0xB5, 0xE5, 0xE5, 0xE5, 0xB5, 0xA5, 0xA5, 0xA5, 0xB5, 0xC5, 0xC5, 0xC5, 0xF5, 0xC5, 0xC5, 0xC5, 0x0D, 0x84, 0xF9, 0xF9, 0xF9, 0x8D, 0x60, 0x30, 0xB8, 0x19, 0x0C, 0x06, 0x37, 0xE7, 0xE6, 0xE6, 0x36, 0xE7, 0xE6, 0xE6, 0x36, 0xE6, 0xE7, 0xE7, 0x8F, 0x26, 0x27, 0x27, 0xAD, 0x36, 0x9B, 0xED, 0x41, 0x87, 0xC3, 0x01, 0xD2, 0xE5, 0x5D, 0x13, 0x70, 0x6B, 0x6B, 0xEB, 0x8B, 0xE1, 0x70, 0x78, 0x33, 0x1C, 0x0E, 0xAF, 0x1F, 0x1C, 0x1C, 0xAC, 0x21, 0xEC, 0xEF, 0xEF, 0xAF, 0xC7, 0xD9, 0xD8, 0xDB, 0xDB, 0xDB, 0xD8, 0xDD, 0xDD, 0xDD, 0xD8, 0xDD, 0xDD, 0xDD, 0xD8, 0xD9, 0xD9, 0xD9, 0x44, 0xB3, 0xBD, 0xBD, 0xBD, 0x85, 0x3C, 0x9B, 0x9B, 0x9B, 0xDB, 0x1B, 0x1B, 0x1B, 0x08, 0x3B, 0x08, 0xEB, 0xEB, 0xEB, 0x3B, 0x6B, 0x6B, 0x6B, 0xBB, 0xAB, 0xAB, 0xAB, 0xBB, 0xAB, 0xAB, 0xAB, 0x7B, 0xA1, 0x50, 0x68, 0x2F, 0x14, 0x0A, 0xED, 0xAD, 0xAC, 0xAC, 0xEC, 0xAD, 0xAC, 0xAC, 0xEC, 0xAF, 0xAC, 0xAC, 0xEC, 0x2F, 0x2F, 0x2F, 0xEF, 0x2F, 0x2D, 0x2D, 0x1D, 0xC4, 0xD9, 0x5F, 0x5E, 0x5E, 0x7E, 0x7E, 0x7A, 0x7A, 0x7A, 0xD0, 0xE5, 0x72, 0x01, 0x8F, 0xC7, 0x93, 0x36, 0xEF, 0x9A, 0x85, 0xF7, 0xF6, 0xF6, 0x3E, 0x15, 0x0E, 0x87, 0xD7, 0x0F, 0x0F, 0x0F, 0xC3, 0xE1, 0x70, 0x78, 0x2F, 0x1C, 0x0E, 0xEF, 0x86, 0xC3, 0xE1, 0xDD, 0x83, 0x83, 0x83, 0xBD, 0x38, 0xFB, 0xE8, 0x67, 0x6F, 0x6F, 0xEF, 0x00, 0x61, 0x77, 0x77, 0xF7, 0x60, 0x67, 0x67, 0x27, 0x8C, 0xB0, 0xBD, 0xBD, 0x7D, 0xB8, 0xB5, 0xB5, 0x85, 0x70, 0xB4, 0xB9, 0xB9, 0x99, 0x60, 0x63, 0x63, 0x23, 0xB2, 0xBE, 0xBE, 0x8E, 0x10, 0x5D, 0x5B, 0x5B, 0x4B, 0xB0, 0xBA, 0xBA, 0x1A, 0x0B, 0x85, 0x42, 0xB1, 0x50, 0x28, 0x14, 0x5B, 0x59, 0x59, 0x89, 0xAD, 0xAC, 0xAC, 0xC4, 0x42, 0xA1, 0xD0, 0x4B, 0xB3, 0xB3, 0xB3, 0xCC, 0xC9, 0xC9, 0xC9, 0x5B, 0xA6, 0xED, 0xA7, 0xE1, 0xDD, 0x14, 0xF0, 0x13, 0x87, 0x87, 0x87, 0xBB, 0x91, 0x48, 0xE4, 0xB9, 0xC3, 0xC3, 0xC3, 0xD8, 0xD1, 0xD1, 0x51, 0xEC, 0xF0, 0xF0, 0x30, 0x76, 0x78, 0x78, 0x78, 0x7C, 0x78, 0x78, 0x78, 0x1C, 0x0E, 0x87, 0x8F, 0x0F, 0x0E, 0x0E, 0x10, 0x9E, 0xD9, 0xDF, 0xDF, 0x47, 0xF3, 0xEC, 0xDE, 0xDE, 0x1E, 0xC2, 0x73, 0xBB, 0xBB, 0xBB, 0xCF, 0xED, 0xEC, 0xEC, 0x20, 0x5C, 0xDD, 0xD9, 0xD9, 0xB9, 0xBA, 0xBD, 0xBD, 0x7D, 0x75, 0x7B, 0x7B, 0xFB, 0xEA, 0xD6, 0xD6, 0x16, 0xC2, 0x97, 0x36, 0x37, 0x37, 0x11, 0x9E, 0xDF, 0xD8, 0xD8, 0x78, 0x7E, 0x63, 0x63, 0xE3, 0xF9, 0xF5, 0xF5, 0xF5, 0xE7, 0xD7, 0xD7, 0xD7, 0xBF, 0x8C, 0xB0, 0xB1, 0xB1, 0xF1, 0x8D, 0xF9, 0xF9, 0x79, 0x56, 0xFC, 0xED, 0xFB, 0xB4, 0x79, 0x57, 0x23, 0x30, 0xF2, 0x7F, 0x9F, 0x17, 0x23, 0x91, 0xC8, 0xF3, 0x47, 0x47, 0x47, 0xCF, 0x1F, 0x1D, 0x1D, 0x3D, 0x7F, 0x78, 0x78, 0xF8, 0x65, 0x84, 0x70, 0x38, 0x8C, 0xF0, 0x02, 0xC2, 0xC1, 0xC1, 0xC1, 0xB5, 0x83, 0x83, 0x83, 0x6B, 0xFB, 0xFB, 0xFB, 0xD7, 0xF6, 0xF7, 0xF7, 0xAF, 0xED, 0xED, 0xED, 0x7D, 0x05, 0xCD, 0xEE, 0xEE, 0xEE, 0x8B, 0xBB, 0xBB, 0xBB, 0x2F, 0xEE, 0xEC, 0xEC, 0x24, 0x3E, 0x77, 0x76, 0x76, 0x5E, 0xDC, 0xDE, 0xDE, 0xFE, 0x1B, 0x84, 0xAD, 0xAD, 0xAD, 0xBF, 0xD9, 0xDA, 0xDA, 0x7A, 0x69, 0x6B, 0x6B, 0xEB, 0xA5, 0xCD, 0xCD, 0xCD, 0x97, 0x36, 0x37, 0x37, 0xBF, 0x8A, 0xB0, 0xB5, 0xB5, 0xF5, 0x3F, 0x96, 0x96, 0x96, 0xBA, 0x66, 0x67, 0x67, 0x6F, 0x79, 0x1B, 0xFF, 0x34, 0xA4, 0x2D, 0xE0, 0xFE, 0xFE, 0xFE, 0x59, 0xF9, 0x54, 0x24, 0x12, 0xB9, 0x1A, 0x8D, 0x46, 0x5F, 0x89, 0x46, 0xA3, 0x5F, 0x8D, 0x44, 0x22, 0x5F, 0x8D, 0x44, 0x22, 0x5F, 0x3D, 0x3A, 0x3A, 0xFA, 0x6F, 0x08, 0x87, 0x87, 0x87, 0x08, 0x5F, 0x4B, 0x26, 0x1C, 0x0E, 0xBF, 0x1C, 0x0E, 0x87, 0x5F, 0x3E, 0x38, 0x38, 0x48, 0xB0, 0xBF, 0xBF, 0xFF, 0x75, 0x34, 0x7B, 0x7B, 0x7B, 0xAF, 0x20, 0xEC, 0xEE, 0xEE, 0x22, 0x7C, 0x03, 0xCD, 0xCE, 0xCE, 0xCE, 0xDF, 0xA2, 0xD9, 0xDD, 0xDD, 0x7D, 0x2D, 0x14, 0x0A, 0xF5, 0x04, 0x83, 0x41, 0x30, 0x3F, 0x3F, 0x9F, 0x36, 0xEF, 0x66, 0x04, 0x7E, 0x3A, 0x12, 0x89, 0xBC, 0x18, 0x8B, 0xC5, 0x5E, 0x8D, 0x46, 0xA3, 0x7F, 0x1B, 0x89, 0x44, 0xFE, 0x2E, 0x15, 0x47, 0x47, 0x47, 0xFF, 0x3D, 0x99, 0xC3, 0xC3, 0xC3, 0x6F, 0xA2, 0x09, 0x87, 0xC3, 0x08, 0x7F, 0x8F, 0x70, 0x70, 0x70, 0x90, 0x60, 0x7F, 0x7F, 0xFF, 0xD5, 0x64, 0xF6, 0xF6, 0xF6, 0x5E, 0xDD, 0xDB, 0xDB, 0xFB, 0xD6, 0xEE, 0xEE, 0xEE, 0x4D, 0xEC, 0xED, 0xED, 0xFD, 0xEF, 0xD5, 0xD5, 0x55, 0xDE, 0xC2, 0xC2, 0x02, 0x58, 0x5C, 0x5C, 0x4C, 0x9B, 0xBB, 0xBE, 0x95, 0x4B, 0x83, 0xCF, 0x44, 0xA3, 0xD1, 0xAF, 0xC7, 0x62, 0xB1, 0x7F, 0x8A, 0xC5, 0x62, 0xFF, 0x10, 0x8D, 0x46, 0xFF, 0x21, 0x1A, 0x8D, 0x7E, 0x3B, 0x15, 0x91, 0x48, 0xE4, 0x1F, 0xD1, 0x1C, 0x1D, 0x1D, 0x25, 0x38, 0x3C, 0x3C, 0xFC, 0x4E, 0x32, 0x47, 0x47, 0x47, 0x89, 0x1F, 0x87, 0xC3, 0xE1, 0xEF, 0x26, 0x73, 0x70, 0x70, 0x80, 0xF0, 0x4F, 0xC9, 0x84, 0xC3, 0xE1, 0x9F, 0xAD, 0xAF, 0xAF, 0x0B, 0x90, 0x6F, 0x60, 0x4A, 0x97, 0x77, 0x5B, 0xC0, 0x57, 0x63, 0xB1, 0xD8, 0x8F, 0x62, 0xB1, 0xD8, 0xF7, 0xD1, 0x44, 0xA3, 0xD1, 0x1F, 0xC4, 0xF9, 0x7E, 0x9C, 0x1F, 0x44, 0xA3, 0xD1, 0x1F, 0x44, 0x22, 0x91, 0x64, 0xFE, 0x27, 0x9A, 0xA3, 0xA3, 0xA3, 0x93, 0xF8, 0xE1, 0xD1, 0xD1, 0xD1, 0x0F, 0x0F, 0x0F, 0x0F, 0xEF, 0xC8, 0xD1, 0xD1, 0xD1, 0xBF, 0x6F, 0x6E, 0x6E, 0x8A, 0x97, 0x97, 0x97, 0xCF, 0x32, 0x28, 0x79, 0x57, 0x05, 0xFC, 0xD3, 0x58, 0x2C, 0xF6, 0xDD, 0xE3, 0xE3, 0xE3, 0x9F, 0x1F, 0x1F, 0x1F, 0xFF, 0x73, 0x2C, 0x16, 0xBB, 0x13, 0x3F, 0x89, 0x46, 0xA3, 0xB7, 0x25, 0x12, 0x89, 0x24, 0x3E, 0x23, 0x91, 0xC8, 0x4F, 0x53, 0x71, 0x74, 0x74, 0xF4, 0xD3, 0x93, 0x7E, 0x2D, 0x12, 0x89, 0xFC, 0x34, 0x1A, 0x8D, 0xBE, 0xB5, 0xB3, 0xB3, 0x23, 0x5D, 0x5B, 0x5B, 0x43, 0xDE, 0x85, 0x4E, 0x8B, 0x77, 0x33, 0x89, 0xFC, 0x69, 0x2C, 0x16, 0xFB, 0xC1, 0xF1, 0xF1, 0xF1, 0xAF, 0x8F, 0x8F, 0x8F, 0x7F, 0x81, 0x10, 0x8B, 0xC5, 0x10, 0x7E, 0x19, 0xE7, 0x17, 0xB1, 0x58, 0xEC, 0x17, 0xC7, 0xC7, 0xC7, 0xBF, 0x3C, 0x3E, 0x3E, 0xFE, 0x25, 0xEA, 0xE7, 0x13, 0x44, 0xA3, 0xD1, 0x64, 0x7E, 0x75, 0x1A, 0x22, 0x91, 0xC8, 0x2D, 0x44, 0xA3, 0xD1, 0x1B, 0x3B, 0x3B, 0x3B, 0xC3, 0xC8, 0xF7, 0x80, 0xA5, 0xCB, 0xBB, 0x19, 0x81, 0x8F, 0xC5, 0x62, 0xB1, 0x1F, 0x1E, 0x1F, 0x1F, 0xFF, 0xFE, 0xF8, 0xF8, 0xF8, 0x8D, 0x74, 0x89, 0xC5, 0x62, 0x6F, 0xDE, 0x2D, 0xD1, 0x68, 0xF4, 0x16, 0x62, 0xB1, 0x18, 0xDC, 0xD9, 0xD9, 0x51, 0xBD, 0x6B, 0x02, 0xDE, 0xC5, 0x30, 0xE1, 0xA3, 0x91, 0x48, 0xE4, 0xFB, 0xCF, 0x3C, 0xF3, 0x0C, 0x3C, 0x3E, 0x3E, 0x7E, 0xFB, 0x14, 0x5C, 0x7F, 0x37, 0x78, 0xE6, 0x99, 0x67, 0xE0, 0xF6, 0xF6, 0x36, 0xFF, 0x5D, 0x4B, 0x22, 0xD1, 0x68, 0xF4, 0x4C, 0x44, 0x22, 0x91, 0x07, 0x62, 0xB1, 0xD8, 0x7E, 0x5C, 0xC0, 0xF7, 0x04, 0xF1, 0xBF, 0xCB, 0x6F, 0xD7, 0xD6, 0xD6, 0x0A, 0xCF, 0x92, 0x40, 0xCE, 0x94, 0x44, 0xC2, 0xE1, 0xF0, 0x99, 0x89, 0xC5, 0x62, 0xD5, 0xCF, 0x3E, 0xFB, 0xEC, 0xF5, 0xF7, 0x8A, 0x80, 0xCF, 0x3D, 0xF7, 0x1C, 0xDC, 0xDD, 0xDD, 0xDD, 0x9F, 0x9B, 0x9B, 0x7B, 0x08, 0xF9, 0x4A, 0xAB, 0x74, 0x49, 0x5B, 0xC0, 0xC9, 0xC9, 0xC9, 0x33, 0x31, 0x35, 0x35, 0x05, 0x7C, 0x3E, 0xDF, 0xB9, 0xE5, 0xE5, 0x65, 0xC7, 0xD5, 0xAB, 0x57, 0xE1, 0xFD, 0x8E, 0xC4, 0x67, 0x9F, 0x7D, 0x16, 0x1E, 0x1D, 0x1D, 0x7D, 0x6F, 0x6A, 0x6A, 0xEA, 0x71, 0xBF, 0xDF, 0x0F, 0xCE, 0x4A, 0xDA, 0x02, 0xEA, 0x74, 0xBA, 0x33, 0xA3, 0xD1, 0x68, 0xC0, 0xF4, 0xF4, 0xF4, 0x83, 0xB1, 0x58, 0x4C, 0x1E, 0x8D, 0x46, 0xFF, 0xF9, 0xEA, 0xD5, 0xAB, 0xF0, 0xDA, 0xB5, 0x6B, 0xF0, 0x85, 0x17, 0x5E, 0x48, 0x8B, 0x6B, 0xD7, 0xAE, 0x9D, 0x89, 0xAF, 0x7C, 0xE5, 0x2B, 0xF0, 0x85, 0x17, 0x5E, 0x80, 0xC7, 0xC7, 0xC7, 0xD7, 0x23, 0x91, 0xC8, 0xF1, 0xEA, 0xEA, 0xEA, 0x45, 0xA7, 0xD3, 0x09, 0xEE, 0x86, 0x33, 0x6F, 0xE9, 0x9F, 0x05, 0x9D, 0x4E, 0x07, 0x66, 0x66, 0x66, 0x40, 0x34, 0x1A, 0x05, 0xBB, 0xBB, 0xBB, 0x7F, 0xB1, 0xB4, 0xB4, 0x24, 0x53, 0xAB, 0xD5, 0x6F, 0xEA, 0x74, 0x3A, 0x88, 0xA0, 0xD5, 0x6A, 0x13, 0x8C, 0x8C, 0x8C, 0x24, 0x3E, 0x11, 0x34, 0x1A, 0x0D, 0x54, 0xAB, 0xD5, 0x89, 0x4F, 0x04, 0x95, 0x4A, 0x95, 0x40, 0xA9, 0x54, 0x42, 0x85, 0x42, 0x71, 0x0B, 0x52, 0xA9, 0x14, 0x1A, 0x0C, 0x86, 0xE3, 0xC3, 0xC3, 0x43, 0x42, 0x38, 0x1C, 0x7E, 0x70, 0x7D, 0x7D, 0x1D, 0x4C, 0x4C, 0x4C, 0xDC, 0x15, 0x67, 0xFA, 0xDA, 0x93, 0xB3, 0xA2, 0xD7, 0xEB, 0xC1, 0xCC, 0xCC, 0x0C, 0x58, 0x5D, 0x5D, 0x05, 0x66, 0xB3, 0x19, 0xB4, 0xB7, 0xB7, 0x7F, 0x92, 0x44, 0x22, 0xFD, 0xBC, 0xB9, 0xB9, 0x19, 0x22, 0x90, 0xC9, 0x64, 0xD8, 0xD4, 0xD4, 0x04, 0x1B, 0x1B, 0x1B, 0x21, 0x91, 0x48, 0x84, 0xF5, 0xF5, 0xF5, 0xB0, 0xAE, 0xAE, 0x0E, 0xD6, 0xD6, 0xD6, 0xC2, 0xEA, 0xEA, 0x6A, 0x58, 0x55, 0x55, 0x05, 0x2B, 0x2B, 0x2B, 0x61, 0x45, 0x45, 0x05, 0x2C, 0x2F, 0x2F, 0x87, 0xA5, 0xA5, 0xA5, 0x90, 0x40, 0x20, 0xC0, 0x92, 0x92, 0x12, 0x58, 0x5C, 0x5C, 0x0C, 0x8B, 0x8B, 0x8B, 0x21, 0x16, 0x8B, 0x85, 0x85, 0x85, 0x85, 0xB0, 0xA0, 0xA0, 0x00, 0xE6, 0xE7, 0xE7, 0xC3, 0xBC, 0xBC, 0x3C, 0x78, 0xE5, 0xCA, 0x15, 0x98, 0x95, 0x95, 0x05, 0x4B, 0x4B, 0x4B, 0x25, 0x2A, 0x95, 0x0A, 0x78, 0x3C, 0x1E, 0x30, 0x37, 0x37, 0x07, 0x7C, 0x3E, 0xDF, 0x99, 0x06, 0xA9, 0x67, 0x1E, 0xA8, 0xA6, 0x7B, 0x6B, 0x85, 0x66, 0x64, 0x64, 0x04, 0xD8, 0xED, 0x76, 0x20, 0x10, 0x08, 0x00, 0x8F, 0xC7, 0x03, 0x72, 0xB9, 0xFC, 0x63, 0x56, 0xAB, 0xF5, 0x15, 0xA3, 0xD1, 0x08, 0x11, 0xF4, 0x7A, 0x3D, 0xD4, 0xE9, 0x74, 0x70, 0x64, 0x64, 0x04, 0xAA, 0xD5, 0x6A, 0xA8, 0x54, 0x2A, 0xE1, 0xF0, 0xF0, 0x30, 0x94, 0xCB, 0xE5, 0x50, 0x2A, 0x95, 0xC2, 0xA1, 0xA1, 0x21, 0x28, 0x16, 0x8B, 0xA1, 0x50, 0x28, 0x84, 0x02, 0x81, 0x00, 0x0E, 0x0C, 0x0C, 0xC0, 0xFE, 0xFE, 0x7E, 0xD8, 0xD7, 0xD7, 0x07, 0x7B, 0x7B, 0x7B, 0x61, 0x4F, 0x4F, 0x0F, 0xEC, 0xEE, 0xEE, 0x86, 0x9D, 0x9D, 0x9D, 0xB0, 0xA3, 0xA3, 0x03, 0xB6, 0xB7, 0xB7, 0x43, 0x16, 0x8B, 0x05, 0x19, 0x0C, 0x06, 0x64, 0x30, 0x18, 0x6F, 0x93, 0x48, 0x24, 0x7A, 0x55, 0x55, 0x15, 0x20, 0x10, 0x08, 0x40, 0x28, 0x14, 0x02, 0x8B, 0xC5, 0x92, 0xF8, 0x42, 0xB5, 0xB3, 0x90, 0xB6, 0x80, 0xC9, 0x5F, 0x81, 0x99, 0x2E, 0x65, 0x65, 0x65, 0x37, 0xFD, 0x98, 0xC1, 0x60, 0x68, 0xF8, 0x7C, 0x3E, 0x1C, 0x18, 0x18, 0x80, 0x7C, 0x3E, 0x1F, 0xF2, 0x78, 0xBC, 0x9B, 0xC4, 0x40, 0xC3, 0xE5, 0x72, 0x21, 0x87, 0xC3, 0x81, 0x5D, 0x5D, 0x5D, 0xB0, 0xB3, 0xB3, 0x13, 0xB2, 0xD9, 0x6C, 0xD8, 0xD1, 0xD1, 0x01, 0x59, 0x2C, 0x16, 0x64, 0x32, 0x99, 0xB0, 0xB5, 0xB5, 0x15, 0xD2, 0xE9, 0x74, 0x48, 0xA7, 0xD3, 0x21, 0x95, 0x4A, 0x85, 0x64, 0x32, 0x39, 0x11, 0xD1, 0xCD, 0xCD, 0xCD, 0xBF, 0xA4, 0xD1, 0x68, 0x7E, 0x22, 0x91, 0xF8, 0x51, 0x64, 0xAF, 0xA5, 0xBE, 0xBE, 0x1E, 0xD4, 0xD5, 0xD5, 0xDD, 0x15, 0x69, 0x0B, 0x88, 0xFE, 0x02, 0xD6, 0xB3, 0x80, 0x7C, 0x6D, 0x5C, 0x9C, 0x07, 0x70, 0x38, 0xDC, 0x97, 0xB1, 0x58, 0x2C, 0x2C, 0x29, 0x29, 0x81, 0x65, 0x65, 0x65, 0xB0, 0xB2, 0xB2, 0x12, 0xD6, 0xD4, 0xD4, 0xC0, 0xFA, 0xFA, 0x7A, 0xD8, 0xD8, 0xD8, 0x08, 0x9B, 0x9A, 0x9A, 0x12, 0x42, 0x90, 0x48, 0xA4, 0x84, 0xBD, 0x1B, 0x1B, 0x1B, 0x61, 0x43, 0x43, 0x43, 0x4A, 0x8B, 0x57, 0x55, 0x55, 0xC1, 0xEA, 0xEA, 0xEA, 0xC4, 0x9F, 0xD3, 0xD0, 0xD0, 0x00, 0xC9, 0x64, 0xF2, 0x5B, 0x14, 0x0A, 0xE5, 0xE7, 0x54, 0x2A, 0x15, 0x4F, 0xA5, 0x52, 0xC1, 0xBD, 0x22, 0x6D, 0x01, 0xD1, 0x5F, 0x7F, 0x79, 0x0F, 0x78, 0xA0, 0xA4, 0xA4, 0xA4, 0xAA, 0xB9, 0xB9, 0xD9, 0xC0, 0xE5, 0x72, 0xAF, 0xF7, 0xF4, 0xF4, 0xC0, 0xDE, 0xDE, 0xDE, 0x9B, 0x22, 0x90, 0xCB, 0xE5, 0xC2, 0xEE, 0xEE, 0x6E, 0xC8, 0x66, 0xB3, 0x61, 0x7B, 0x7B, 0x3B, 0x64, 0x30, 0x18, 0x90, 0x4E, 0xA7, 0x43, 0x0A, 0x85, 0x02, 0x49, 0x24, 0x52, 0x42, 0x48, 0x22, 0x91, 0x08, 0x1B, 0x1A, 0x1A, 0x12, 0xA2, 0x93, 0x48, 0x24, 0x48, 0x26, 0x93, 0x13, 0xE7, 0x2A, 0x89, 0x44, 0xFA, 0x3E, 0x95, 0x4A, 0x15, 0x53, 0xA9, 0xD4, 0xCF, 0xDC, 0x57, 0x01, 0x93, 0x97, 0xAC, 0xEF, 0x06, 0x3C, 0x1E, 0x0F, 0x2A, 0x2B, 0x2B, 0x81, 0x54, 0x2A, 0xCD, 0xD3, 0x68, 0x34, 0x37, 0xE4, 0x72, 0x39, 0x1C, 0x1A, 0x1A, 0x82, 0x03, 0x03, 0x03, 0x90, 0xCB, 0xE5, 0xC2, 0xF6, 0xF6, 0x76, 0x48, 0xA7, 0xD3, 0x21, 0x99, 0x4C, 0x86, 0x44, 0x22, 0x31, 0x11, 0x65, 0xE8, 0xE8, 0x8A, 0xDB, 0x13, 0x52, 0xA9, 0x54, 0x48, 0xA7, 0xD3, 0x61, 0x4B, 0x4B, 0x0B, 0x6C, 0x6D, 0x6D, 0x85, 0x2D, 0x2D, 0x2D, 0x90, 0x4E, 0xA7, 0x43, 0x1A, 0x8D, 0x06, 0x29, 0x14, 0x0A, 0x24, 0x93, 0xC9, 0xFB, 0x14, 0x0A, 0x05, 0xDC, 0x4B, 0xF1, 0xEE, 0xBB, 0x80, 0x71, 0x11, 0x1B, 0xEA, 0xEB, 0xEB, 0xB7, 0x69, 0x34, 0x1A, 0xAC, 0xAB, 0xAB, 0x83, 0xE5, 0xE5, 0xE5, 0x89, 0xAC, 0x4A, 0x20, 0x10, 0x60, 0x45, 0x45, 0x05, 0xAC, 0xAB, 0xAB, 0x83, 0x4D, 0x4D, 0x4D, 0x90, 0x4E, 0xA7, 0xC3, 0xB6, 0xB6, 0x36, 0xC8, 0x66, 0xB3, 0x21, 0x87, 0xC3, 0x81, 0x48, 0xC4, 0x22, 0xF4, 0xF4, 0xF4, 0x24, 0xCE, 0xC8, 0x14, 0x67, 0xE3, 0x37, 0xA8, 0x54, 0x6A, 0x3B, 0x95, 0x4A, 0xFD, 0xDC, 0x1F, 0x9A, 0x85, 0xAF, 0x16, 0x17, 0x17, 0xBF, 0x59, 0x53, 0x53, 0x03, 0xC9, 0x64, 0x32, 0x64, 0x30, 0x18, 0xB0, 0xB3, 0xB3, 0x13, 0xF6, 0xF6, 0xF6, 0x42, 0x81, 0x40, 0x00, 0xC5, 0x62, 0x31, 0x94, 0x4A, 0xA5, 0x50, 0x26, 0x93, 0x41, 0x99, 0x4C, 0x96, 0xC8, 0xC4, 0x22, 0x91, 0x08, 0x0A, 0x04, 0x02, 0xD8, 0xD7, 0xD7, 0x07, 0xB9, 0x5C, 0x2E, 0xEC, 0xEC, 0xEC, 0x4C, 0x64, 0x5B, 0x24, 0x89, 0xA0, 0xCB, 0x23, 0x0A, 0x85, 0x02, 0xA9, 0x54, 0xEA, 0x5B, 0x14, 0x0A, 0x85, 0x40, 0xA1, 0x50, 0xC0, 0xBD, 0x22, 0x6D, 0x01, 0xD1, 0xAF, 0x39, 0xDD, 0x03, 0xCE, 0x95, 0x94, 0x94, 0x7C, 0x86, 0xC7, 0xE3, 0xD1, 0x0C, 0x06, 0xC3, 0x0D, 0xBD, 0x5E, 0x0F, 0x0D, 0x06, 0x03, 0x34, 0x18, 0x0C, 0x50, 0xA7, 0xD3, 0x41, 0x8D, 0x46, 0x93, 0x28, 0x80, 0x07, 0x07, 0x07, 0x61, 0x5F, 0x5F, 0x1F, 0xEC, 0xEA, 0xEA, 0x82, 0x2C, 0x16, 0x2B, 0x61, 0x6D, 0xA4, 0x5E, 0x44, 0x40, 0xCE, 0x40, 0x44, 0x34, 0x1A, 0x8D, 0x86, 0x58, 0xF9, 0x15, 0x0A, 0x85, 0x72, 0x99, 0x42, 0xA1, 0x7C, 0xE8, 0xBE, 0x0A, 0x78, 0xB7, 0x65, 0x4C, 0x72, 0x49, 0x53, 0x59, 0x59, 0x09, 0xC4, 0x62, 0x71, 0xF5, 0xC8, 0xC8, 0x08, 0x94, 0xC9, 0x64, 0x50, 0x20, 0x10, 0x40, 0x2E, 0x97, 0x0B, 0x59, 0x2C, 0x16, 0xA4, 0x52, 0xA9, 0xB0, 0xB1, 0xB1, 0x11, 0xD6, 0xD5, 0xD5, 0x25, 0x0A, 0xE8, 0xAA, 0xAA, 0x2A, 0x58, 0x5B, 0x5B, 0x0B, 0x89, 0x44, 0x22, 0x24, 0x91, 0x48, 0x90, 0x4A, 0xA5, 0xC2, 0xD6, 0xD6, 0x56, 0xD8, 0xD6, 0xD6, 0x06, 0x59, 0x2C, 0x56, 0xA2, 0xB4, 0x41, 0x5B, 0xB8, 0xAD, 0xAD, 0x0D, 0xB6, 0xB4, 0xB4, 0x1C, 0x50, 0xA9, 0xD4, 0xC4, 0x7F, 0xF5, 0x73, 0xAF, 0xB8, 0xDF, 0x16, 0x3E, 0x87, 0xC7, 0xE3, 0x75, 0x25, 0x25, 0x25, 0xDF, 0xAD, 0xAC, 0xAC, 0x84, 0x25, 0x25, 0x25, 0x10, 0x8F, 0xC7, 0x43, 0x02, 0x81, 0x00, 0xCB, 0xCB, 0xCB, 0x61, 0x6D, 0x6D, 0x2D, 0x24, 0x91, 0x48, 0x90, 0x4E, 0xA7, 0x43, 0x26, 0x93, 0x09, 0xBB, 0xBA, 0xBA, 0x60, 0x4F, 0x4F, 0x0F, 0xEC, 0xEF, 0xEF, 0x87, 0x3C, 0x1E, 0x2F, 0x51, 0x37, 0xF6, 0xF7, 0xF7, 0xC3, 0xDE, 0xDE, 0xDE, 0x44, 0xC6, 0xEE, 0xEC, 0xEC, 0x84, 0xED, 0xED, 0xED, 0x89, 0xF3, 0xAF, 0xA5, 0xA5, 0x05, 0xD2, 0x68, 0xB4, 0x1F, 0x50, 0x28, 0x94, 0x79, 0x1A, 0x8D, 0x76, 0xF9, 0x0F, 0x49, 0xC0, 0x07, 0x71, 0x38, 0xDC, 0x4C, 0x45, 0x45, 0xC5, 0xB7, 0xDA, 0xDA, 0xDA, 0x6E, 0x74, 0x75, 0x75, 0x41, 0x1E, 0x8F, 0x07, 0x45, 0x22, 0x11, 0x94, 0xC9, 0x64, 0x70, 0x78, 0x78, 0x18, 0x2A, 0x14, 0x8A, 0x44, 0x37, 0x22, 0x93, 0xC9, 0xA0, 0x44, 0x22, 0x81, 0x42, 0xA1, 0x10, 0x0E, 0x0C, 0x0C, 0xC0, 0xDE, 0xDE, 0x5E, 0xD8, 0xDD, 0xDD, 0x0D, 0x3B, 0x3A, 0x3A, 0x90, 0x28, 0x43, 0x32, 0x2E, 0x24, 0x91, 0x48, 0x37, 0x95, 0x32, 0x14, 0x0A, 0xE5, 0xF7, 0x54, 0x2A, 0xF5, 0x9F, 0x9A, 0x9A, 0x9A, 0x30, 0x4D, 0x4D, 0x4D, 0xE0, 0x5E, 0x71, 0x5F, 0x05, 0xC4, 0xE3, 0xF1, 0xE7, 0xF0, 0x78, 0xFC, 0x39, 0x91, 0x48, 0x84, 0x77, 0x38, 0x1C, 0x37, 0x2C, 0x16, 0x4B, 0xA2, 0x9D, 0xD3, 0x68, 0x34, 0x70, 0x78, 0x78, 0xF8, 0xA6, 0xB2, 0xA6, 0xA3, 0xA3, 0x03, 0xD2, 0xE9, 0x74, 0x48, 0x22, 0x91, 0x20, 0x91, 0x48, 0x4C, 0x14, 0xD0, 0x75, 0x75, 0x75, 0x89, 0xC2, 0x9B, 0x4C, 0x26, 0x43, 0x0A, 0x85, 0x92, 0xE8, 0x48, 0x5A, 0x5A, 0x5A, 0x10, 0x9E, 0xA3, 0x52, 0xA9, 0xFF, 0xA5, 0xA1, 0xA1, 0x01, 0xDC, 0x4B, 0xD2, 0x16, 0x10, 0x8F, 0xC7, 0xDF, 0x33, 0x8A, 0x8B, 0x8B, 0x41, 0x59, 0x59, 0xD9, 0xA3, 0x1C, 0x0E, 0xA7, 0x53, 0x22, 0x91, 0xC0, 0x9E, 0x9E, 0x9E, 0xC4, 0xD9, 0x47, 0x24, 0x12, 0x61, 0x75, 0x75, 0x75, 0x62, 0x68, 0x50, 0x51, 0x51, 0x01, 0xAB, 0xAA, 0xAA, 0x60, 0x5D, 0x5D, 0x1D, 0x24, 0x91, 0x48, 0x90, 0x46, 0xA3, 0x41, 0x06, 0x83, 0x01, 0xDB, 0xDB, 0xDB, 0x21, 0x9B, 0xCD, 0x86, 0x9D, 0x9D, 0x9D, 0xB0, 0xBB, 0xBB, 0x1B, 0x76, 0x77, 0x77, 0xC3, 0xAE, 0xAE, 0xAE, 0x44, 0xE1, 0xCD, 0x64, 0x32, 0x21, 0x83, 0xC1, 0x80, 0x2D, 0x2D, 0x2D, 0x51, 0x2A, 0x95, 0xFA, 0x11, 0x0A, 0x85, 0xF2, 0xF0, 0x7D, 0x4D, 0x22, 0xEF, 0xC0, 0x19, 0x78, 0x88, 0xC5, 0x62, 0x6F, 0xE0, 0x70, 0x38, 0x88, 0xC7, 0xE3, 0x61, 0x69, 0x69, 0x29, 0xAC, 0xA9, 0xA9, 0x49, 0xD4, 0x7D, 0x1D, 0x1D, 0x1D, 0x90, 0xC3, 0xE1, 0xC0, 0xFE, 0xFE, 0x7E, 0x38, 0x30, 0x30, 0x00, 0x07, 0x07, 0x07, 0xA1, 0x50, 0x28, 0x84, 0x42, 0xA1, 0x10, 0x0E, 0x0E, 0x0E, 0xC2, 0x81, 0x81, 0x81, 0x44, 0xFF, 0xCC, 0xE1, 0x70, 0x12, 0xC2, 0xB5, 0xB5, 0xB5, 0x25, 0x7A, 0x63, 0x2A, 0x95, 0x0A, 0x29, 0x14, 0xCA, 0xEB, 0x14, 0x0A, 0xE5, 0xA7, 0x14, 0x0A, 0xA5, 0xF8, 0xBE, 0x0A, 0x78, 0x8F, 0x0B, 0xE9, 0x07, 0x71, 0x38, 0x5C, 0x37, 0x89, 0x44, 0x9A, 0x17, 0x0A, 0x85, 0x37, 0x24, 0x12, 0x09, 0x54, 0x28, 0x14, 0x89, 0x79, 0x9F, 0x46, 0xA3, 0x81, 0x2A, 0x95, 0x0A, 0x2A, 0x14, 0x0A, 0x88, 0x74, 0x29, 0x83, 0x83, 0x83, 0x90, 0xC7, 0xE3, 0x41, 0x2E, 0x97, 0x0B, 0xD9, 0x6C, 0x36, 0x64, 0x32, 0x99, 0x89, 0xB3, 0x0F, 0xE9, 0x95, 0x11, 0x48, 0x24, 0x12, 0xBA, 0x06, 0xFC, 0x29, 0x95, 0x4A, 0xF5, 0x37, 0x37, 0x37, 0xFF, 0x45, 0x73, 0x73, 0x33, 0xB8, 0x57, 0xDC, 0x57, 0x0B, 0xE3, 0xF1, 0x78, 0x50, 0x58, 0x58, 0x08, 0x44, 0x22, 0x51, 0x9E, 0xDD, 0x6E, 0xBF, 0x61, 0x30, 0x18, 0xA0, 0x56, 0xAB, 0x85, 0x4A, 0xA5, 0x12, 0x4A, 0x24, 0x92, 0x13, 0x5B, 0xBA, 0xBA, 0xBA, 0x3A, 0x58, 0x53, 0x53, 0x03, 0x6B, 0x6B, 0x6B, 0xD1, 0xC3, 0x82, 0xC4, 0xD9, 0x87, 0x94, 0x35, 0xF1, 0x11, 0x16, 0x62, 0xE1, 0x18, 0x8D, 0x46, 0x03, 0xF7, 0x52, 0xBC, 0x33, 0x09, 0x88, 0xC5, 0x62, 0xEF, 0x29, 0x38, 0x1C, 0x0E, 0x43, 0xA5, 0x52, 0x3D, 0x6C, 0x36, 0x1B, 0x52, 0x28, 0x14, 0x58, 0x5F, 0x5F, 0x0F, 0x2B, 0x2A, 0x2A, 0x60, 0x59, 0x59, 0x19, 0x24, 0x10, 0x08, 0xB0, 0xB4, 0xB4, 0xF4, 0xA6, 0x76, 0x8E, 0x4A, 0xA5, 0x42, 0x06, 0x83, 0x01, 0x3B, 0x3A, 0x3A, 0x60, 0x57, 0x57, 0x17, 0xE4, 0x70, 0x38, 0x90, 0xCB, 0xE5, 0x26, 0x46, 0x5D, 0xE8, 0x59, 0x20, 0x52, 0x03, 0x22, 0x02, 0xB6, 0xB4, 0xB4, 0x9C, 0xBB, 0xEF, 0xBD, 0xF0, 0xBD, 0x2E, 0x63, 0x08, 0x04, 0xC2, 0x97, 0x71, 0x38, 0x1C, 0x24, 0x10, 0x08, 0xB0, 0xBA, 0xBA, 0x3A, 0x71, 0xF6, 0xB5, 0xB7, 0xB7, 0x43, 0x2E, 0x97, 0x0B, 0x79, 0x3C, 0x1E, 0x1C, 0x1C, 0x1C, 0x84, 0x22, 0x91, 0x08, 0x8A, 0xC5, 0x62, 0x28, 0x12, 0x89, 0x12, 0xC3, 0x54, 0x1E, 0x8F, 0x77, 0x4B, 0xFD, 0x87, 0x3E, 0x03, 0xE3, 0xC2, 0x41, 0x1A, 0x8D, 0x06, 0xA9, 0x54, 0xEA, 0x35, 0x3A, 0x9D, 0xFE, 0xE0, 0x69, 0xFE, 0xC3, 0xD1, 0x74, 0xB8, 0xDF, 0x67, 0xE0, 0x03, 0xC5, 0xC5, 0xC5, 0x99, 0x54, 0x2A, 0x95, 0xAC, 0xD5, 0x6A, 0xFF, 0x55, 0xAB, 0xD5, 0xC2, 0xD1, 0xD1, 0x51, 0xA8, 0xD7, 0xEB, 0xE1, 0xE8, 0xE8, 0x28, 0xD4, 0x6A, 0xB5, 0x89, 0xBB, 0x0F, 0xF4, 0x5D, 0x07, 0x32, 0xA1, 0x46, 0xFA, 0x63, 0xA4, 0x47, 0x46, 0x90, 0x48, 0x24, 0x70, 0x68, 0x68, 0x28, 0x31, 0xBD, 0x16, 0x8B, 0xC5, 0x70, 0x60, 0x60, 0xC0, 0xD6, 0xD3, 0xD3, 0x73, 0xAE, 0xB7, 0xB7, 0x17, 0xDC, 0x4B, 0xEE, 0xFB, 0x34, 0x06, 0x87, 0xC3, 0x81, 0x96, 0x96, 0x16, 0xA0, 0x54, 0x2A, 0xC9, 0xA3, 0xA3, 0xA3, 0x6F, 0xA2, 0x2F, 0x90, 0x10, 0xD0, 0x17, 0x4D, 0xB7, 0x03, 0x7D, 0x39, 0x35, 0x3A, 0x3A, 0x9A, 0xC0, 0x68, 0x34, 0x6E, 0x2A, 0x14, 0x8A, 0x47, 0xFA, 0xFB, 0xFB, 0x01, 0x9F, 0xCF, 0xBF, 0xA7, 0xBC, 0x27, 0x04, 0xA4, 0xD1, 0x68, 0x40, 0x2A, 0x95, 0x82, 0xA1, 0xA1, 0x21, 0xAE, 0x56, 0xAB, 0x7D, 0x1B, 0xFD, 0x8F, 0xBF, 0x1B, 0xE2, 0xB7, 0x7C, 0xCF, 0xEB, 0xF5, 0xFA, 0x8F, 0x68, 0x34, 0x1A, 0x20, 0x97, 0xCB, 0xC1, 0xF0, 0xF0, 0xF0, 0x3D, 0xE5, 0xBE, 0x0B, 0x88, 0xC5, 0x62, 0x41, 0x57, 0x57, 0x17, 0xD0, 0x6A, 0xB5, 0xC8, 0x7B, 0xC7, 0x06, 0xB1, 0x58, 0x8C, 0x58, 0xF0, 0xFA, 0x59, 0x11, 0x8B, 0xC5, 0x50, 0x22, 0x91, 0x7C, 0x5B, 0xAB, 0xD5, 0x7E, 0x16, 0x79, 0xAF, 0xED, 0x6E, 0x2E, 0x8F, 0xEE, 0xD9, 0xA5, 0xD2, 0x3B, 0x11, 0x81, 0x54, 0x2A, 0x15, 0x74, 0x77, 0x77, 0x03, 0x0E, 0x87, 0x03, 0x9A, 0x9A, 0x9A, 0x1E, 0xCB, 0xC8, 0xC8, 0xF8, 0x65, 0x56, 0x56, 0x16, 0xC4, 0x60, 0x30, 0xD7, 0xB3, 0xB2, 0xB2, 0xD2, 0x06, 0x83, 0xC1, 0x5C, 0xCF, 0xCC, 0xCC, 0x84, 0x38, 0x1C, 0x4E, 0xD1, 0xD9, 0xD9, 0x09, 0xD8, 0x6C, 0xF6, 0x3B, 0xC6, 0x7D, 0x15, 0xB0, 0xB4, 0xB4, 0x14, 0x60, 0xB1, 0x58, 0x70, 0xF9, 0xF2, 0x65, 0x70, 0xE9, 0xD2, 0x25, 0x70, 0xE9, 0xD2, 0x25, 0x90, 0x91, 0x91, 0x01, 0xB2, 0xB2, 0xB2, 0xA4, 0x19, 0x19, 0x19, 0x37, 0x32, 0x33, 0x33, 0x61, 0x46, 0x46, 0x46, 0xDA, 0x64, 0x66, 0x66, 0xC2, 0x4B, 0x97, 0x2E, 0xBD, 0x72, 0xE1, 0xC2, 0x85, 0xC7, 0x32, 0x33, 0x33, 0x41, 0x46, 0x46, 0xC6, 0x3B, 0xC6, 0x7D, 0x8F, 0xC0, 0xFC, 0xFC, 0x7C, 0x70, 0xE5, 0xCA, 0x95, 0x04, 0x79, 0x79, 0x79, 0x20, 0x2B, 0x2B, 0x0B, 0x64, 0x66, 0x66, 0x76, 0x60, 0x30, 0x98, 0x5F, 0x62, 0x30, 0x18, 0x98, 0x2E, 0xD9, 0xD9, 0xD9, 0x1B, 0x4F, 0x3D, 0xF5, 0xD4, 0x27, 0xBF, 0xF0, 0x85, 0x2F, 0x80, 0xC7, 0x1F, 0x7F, 0xFC, 0x1D, 0xE5, 0x3D, 0x2B, 0x60, 0x46, 0x46, 0x06, 0xC0, 0x60, 0x30, 0x39, 0x18, 0x0C, 0xE6, 0xEB, 0xA7, 0x15, 0x2E, 0x33, 0x33, 0xF3, 0x37, 0x18, 0x0C, 0x46, 0x92, 0x9D, 0x9D, 0xFD, 0xD0, 0x53, 0x4F, 0x3D, 0x05, 0xBE, 0xF8, 0xC5, 0x2F, 0x82, 0xF3, 0xE7, 0xCF, 0xBF, 0xA3, 0xBC, 0xD7, 0x05, 0x04, 0x99, 0x99, 0x99, 0x9F, 0xC8, 0xCE, 0xCE, 0x9E, 0x3B, 0x85, 0x80, 0xDF, 0xC1, 0x60, 0x30, 0x65, 0x18, 0x0C, 0x06, 0x64, 0x67, 0x67, 0x83, 0xF7, 0x05, 0xFC, 0x7F, 0x02, 0x82, 0xEC, 0xEC, 0x6C, 0x80, 0xC1, 0x60, 0x78, 0x59, 0x59, 0x59, 0xBF, 0x3A, 0x41, 0xBC, 0xA3, 0xCC, 0xCC, 0xCC, 0x3F, 0xC7, 0x60, 0x30, 0xE0, 0x7D, 0x01, 0x4F, 0x10, 0x30, 0x23, 0x23, 0x03, 0x3C, 0xFD, 0xF4, 0xD3, 0x05, 0x19, 0x19, 0x19, 0xCF, 0x61, 0x30, 0x98, 0x7F, 0xC7, 0x60, 0x30, 0x6F, 0x60, 0x30, 0x98, 0x1F, 0x64, 0x64, 0x64, 0x0C, 0x63, 0x30, 0x98, 0x87, 0x33, 0x33, 0x33, 0xC1, 0xFB, 0x02, 0x9E, 0x20, 0x60, 0x56, 0x56, 0x16, 0xB8, 0x74, 0xE9, 0x12, 0xB8, 0x78, 0xF1, 0xE2, 0xC3, 0x97, 0x2E, 0x5D, 0xE2, 0x62, 0x30, 0x98, 0x10, 0x06, 0x83, 0xD9, 0xCA, 0xCA, 0xCA, 0x1A, 0xCB, 0xC8, 0xC8, 0xB8, 0x88, 0xFC, 0xBE, 0xFF, 0x14, 0x02, 0xBE, 0xCF, 0xE9, 0x79, 0x5F, 0x84, 0xF7, 0x05, 0xBC, 0xBF, 0xFC, 0x9F, 0x01, 0x00, 0x3C, 0x81, 0x48, 0x45, 0x0A, 0x79, 0xE5, 0x48, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82, };

const char bulb_on_png[] PROGMEM={0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x78, 0x08, 0x06, 0x00, 0x00, 0x00, 0x65, 0xEE, 0x75, 0xF6, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0E, 0xC4, 0x00, 0x00, 0x0E, 0xC4, 0x01, 0x95, 0x2B, 0x0E, 0x1B, 0x00, 0x00, 0x0A, 0x4F, 0x69, 0x43, 0x43, 0x50, 0x50, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x20, 0x49, 0x43, 0x43, 0x20, 0x70, 0x72, 0x6F, 0x66, 0x69, 0x6C, 0x65, 0x00, 0x00, 0x78, 0xDA, 0x9D, 0x53, 0x67, 0x54, 0x53, 0xE9, 0x16, 0x3D, 0xF7, 0xDE, 0xF4, 0x42, 0x4B, 0x88, 0x80, 0x94, 0x4B, 0x6F, 0x52, 0x15, 0x08, 0x20, 0x52, 0x42, 0x8B, 0x80, 0x14, 0x91, 0x26, 0x2A, 0x21, 0x09, 0x10, 0x4A, 0x88, 0x21, 0xA1, 0xD9, 0x15, 0x51, 0xC1, 0x11, 0x45, 0x45, 0x04, 0x1B, 0xC8, 0xA0, 0x88, 0x03, 0x8E, 0x8E, 0x80, 0x8C, 0x15, 0x51, 0x2C, 0x0C, 0x8A, 0x0A, 0xD8, 0x07, 0xE4, 0x21, 0xA2, 0x8E, 0x83, 0xA3, 0x88, 0x8A, 0xCA, 0xFB, 0xE1, 0x7B, 0xA3, 0x6B, 0xD6, 0xBC, 0xF7, 0xE6, 0xCD, 0xFE, 0xB5, 0xD7, 0x3E, 0xE7, 0xAC, 0xF3, 0x9D, 0xB3, 0xCF, 0x07, 0xC0, 0x08, 0x0C, 0x96, 0x48, 0x33, 0x51, 0x35, 0x80, 0x0C, 0xA9, 0x42, 0x1E, 0x11, 0xE0, 0x83, 0xC7, 0xC4, 0xC6, 0xE1, 0xE4, 0x2E, 0x40, 0x81, 0x0A, 0x24, 0x70, 0x00, 0x10, 0x08, 0xB3, 0x64, 0x21, 0x73, 0xFD, 0x23, 0x01, 0x00, 0xF8, 0x7E, 0x3C, 0x3C, 0x2B, 0x22, 0xC0, 0x07, 0xBE, 0x00, 0x01, 0x78, 0xD3, 0x0B, 0x08, 0x00, 0xC0, 0x4D, 0x9B, 0xC0, 0x30, 0x1C, 0x87, 0xFF, 0x0F, 0xEA, 0x42, 0x99, 0x5C, 0x01, 0x80, 0x84, 0x01, 0xC0, 0x74, 0x91, 0x38, 0x4B, 0x08, 0x80, 0x14, 0x00, 0x40, 0x7A, 0x8E, 0x42, 0xA6, 0x00, 0x40, 0x46, 0x01, 0x80, 0x9D, 0x98, 0x26, 0x53, 0x00, 0xA0, 0x04, 0x00, 0x60, 0xCB, 0x63, 0x62, 0xE3, 0x00, 0x50, 0x2D, 0x00, 0x60, 0x27, 0x7F, 0xE6, 0xD3, 0x00, 0x80, 0x9D, 0xF8, 0x99, 0x7B, 0x01, 0x00, 0x5B, 0x94, 0x21, 0x15, 0x01, 0xA0, 0x91, 0x00, 0x20, 0x13, 0x65, 0x88, 0x44, 0x00, 0x68, 0x3B, 0x00, 0xAC, 0xCF, 0x56, 0x8A, 0x45, 0x00, 0x58, 0x30, 0x00, 0x14, 0x66, 0x4B, 0xC4, 0x39, 0x00, 0xD8, 0x2D, 0x00, 0x30, 0x49, 0x57, 0x66, 0x48, 0x00, 0xB0, 0xB7, 0x00, 0xC0, 0xCE, 0x10, 0x0B, 0xB2, 0x00, 0x08, 0x0C, 0x00, 0x30, 0x51, 0x88, 0x85, 0x29, 0x00, 0x04, 0x7B, 0x00, 0x60, 0xC8, 0x23, 0x23, 0x78, 0x00, 0x84, 0x99, 0x00, 0x14, 0x46, 0xF2, 0x57, 0x3C, 0xF1, 0x2B, 0xAE, 0x10, 0xE7, 0x2A, 0x00, 0x00, 0x78, 0x99, 0xB2, 0x3C, 0xB9, 0x24, 0x39, 0x45, 0x81, 0x5B, 0x08, 0x2D, 0x71, 0x07, 0x57, 0x57, 0x2E, 0x1E, 0x28, 0xCE, 0x49, 0x17, 0x2B, 0x14, 0x36, 0x61, 0x02, 0x61, 0x9A, 0x40, 0x2E, 0xC2, 0x79, 0x99, 0x19, 0x32, 0x81, 0x34, 0x0F, 0xE0, 0xF3, 0xCC, 0x00, 0x00, 0xA0, 0x91, 0x15, 0x11, 0xE0, 0x83, 0xF3, 0xFD, 0x78, 0xCE, 0x0E, 0xAE, 0xCE, 0xCE, 0x36, 0x8E, 0xB6, 0x0E, 0x5F, 0x2D, 0xEA, 0xBF, 0x06, 0xFF, 0x22, 0x62, 0x62, 0xE3, 0xFE, 0xE5, 0xCF, 0xAB, 0x70, 0x40, 0x00, 0x00, 0xE1, 0x74, 0x7E, 0xD1, 0xFE, 0x2C, 0x2F, 0xB3, 0x1A, 0x80, 0x3B, 0x06, 0x80, 0x6D, 0xFE, 0xA2, 0x25, 0xEE, 0x04, 0x68, 0x5E, 0x0B, 0xA0, 0x75, 0xF7, 0x8B, 0x66, 0xB2, 0x0F, 0x40, 0xB5, 0x00, 0xA0, 0xE9, 0xDA, 0x57, 0xF3, 0x70, 0xF8, 0x7E, 0x3C, 0x3C, 0x45, 0xA1, 0x90, 0xB9, 0xD9, 0xD9, 0xE5, 0xE4, 0xE4, 0xD8, 0x4A, 0xC4, 0x42, 0x5B, 0x61, 0xCA, 0x57, 0x7D, 0xFE, 0x67, 0xC2, 0x5F, 0xC0, 0x57, 0xFD, 0x6C, 0xF9, 0x7E, 0x3C, 0xFC, 0xF7, 0xF5, 0xE0, 0xBE, 0xE2, 0x24, 0x81, 0x32, 0x5D, 0x81, 0x47, 0x04, 0xF8, 0xE0, 0xC2, 0xCC, 0xF4, 0x4C, 0xA5, 0x1C, 0xCF, 0x92, 0x09, 0x84, 0x62, 0xDC, 0xE6, 0x8F, 0x47, 0xFC, 0xB7, 0x0B, 0xFF, 0xFC, 0x1D, 0xD3, 0x22, 0xC4, 0x49, 0x62, 0xB9, 0x58, 0x2A, 0x14, 0xE3, 0x51, 0x12, 0x71, 0x8E, 0x44, 0x9A, 0x8C, 0xF3, 0x32, 0xA5, 0x22, 0x89, 0x42, 0x92, 0x29, 0xC5, 0x25, 0xD2, 0xFF, 0x64, 0xE2, 0xDF, 0x2C, 0xFB, 0x03, 0x3E, 0xDF, 0x35, 0x00, 0xB0, 0x6A, 0x3E, 0x01, 0x7B, 0x91, 0x2D, 0xA8, 0x5D, 0x63, 0x03, 0xF6, 0x4B, 0x27, 0x10, 0x58, 0x74, 0xC0, 0xE2, 0xF7, 0x00, 0x00, 0xF2, 0xBB, 0x6F, 0xC1, 0xD4, 0x28, 0x08, 0x03, 0x80, 0x68, 0x83, 0xE1, 0xCF, 0x77, 0xFF, 0xEF, 0x3F, 0xFD, 0x47, 0xA0, 0x25, 0x00, 0x80, 0x66, 0x49, 0x92, 0x71, 0x00, 0x00, 0x5E, 0x44, 0x24, 0x2E, 0x54, 0xCA, 0xB3, 0x3F, 0xC7, 0x08, 0x00, 0x00, 0x44, 0xA0, 0x81, 0x2A, 0xB0, 0x41, 0x1B, 0xF4, 0xC1, 0x18, 0x2C, 0xC0, 0x06, 0x1C, 0xC1, 0x05, 0xDC, 0xC1, 0x0B, 0xFC, 0x60, 0x36, 0x84, 0x42, 0x24, 0xC4, 0xC2, 0x42, 0x10, 0x42, 0x0A, 0x64, 0x80, 0x1C, 0x72, 0x60, 0x29, 0xAC, 0x82, 0x42, 0x28, 0x86, 0xCD, 0xB0, 0x1D, 0x2A, 0x60, 0x2F, 0xD4, 0x40, 0x1D, 0x34, 0xC0, 0x51, 0x68, 0x86, 0x93, 0x70, 0x0E, 0x2E, 0xC2, 0x55, 0xB8, 0x0E, 0x3D, 0x70, 0x0F, 0xFA, 0x61, 0x08, 0x9E, 0xC1, 0x28, 0xBC, 0x81, 0x09, 0x04, 0x41, 0xC8, 0x08, 0x13, 0x61, 0x21, 0xDA, 0x88, 0x01, 0x62, 0x8A, 0x58, 0x23, 0x8E, 0x08, 0x17, 0x99, 0x85, 0xF8, 0x21, 0xC1, 0x48, 0x04, 0x12, 0x8B, 0x24, 0x20, 0xC9, 0x88, 0x14, 0x51, 0x22, 0x4B, 0x91, 0x35, 0x48, 0x31, 0x52, 0x8A, 0x54, 0x20, 0x55, 0x48, 0x1D, 0xF2, 0x3D, 0x72, 0x02, 0x39, 0x87, 0x5C, 0x46, 0xBA, 0x91, 0x3B, 0xC8, 0x00, 0x32, 0x82, 0xFC, 0x86, 0xBC, 0x47, 0x31, 0x94, 0x81, 0xB2, 0x51, 0x3D, 0xD4, 0x0C, 0xB5, 0x43, 0xB9, 0xA8, 0x37, 0x1A, 0x84, 0x46, 0xA2, 0x0B, 0xD0, 0x64, 0x74, 0x31, 0x9A, 0x8F, 0x16, 0xA0, 0x9B, 0xD0, 0x72, 0xB4, 0x1A, 0x3D, 0x8C, 0x36, 0xA1, 0xE7, 0xD0, 0xAB, 0x68, 0x0F, 0xDA, 0x8F, 0x3E, 0x43, 0xC7, 0x30, 0xC0, 0xE8, 0x18, 0x07, 0x33, 0xC4, 0x6C, 0x30, 0x2E, 0xC6, 0xC3, 0x42, 0xB1, 0x38, 0x2C, 0x09, 0x93, 0x63, 0xCB, 0xB1, 0x22, 0xAC, 0x0C, 0xAB, 0xC6, 0x1A, 0xB0, 0x56, 0xAC, 0x03, 0xBB, 0x89, 0xF5, 0x63, 0xCF, 0xB1, 0x77, 0x04, 0x12, 0x81, 0x45, 0xC0, 0x09, 0x36, 0x04, 0x77, 0x42, 0x20, 0x61, 0x1E, 0x41, 0x48, 0x58, 0x4C, 0x58, 0x4E, 0xD8, 0x48, 0xA8, 0x20, 0x1C, 0x24, 0x34, 0x11, 0xDA, 0x09, 0x37, 0x09, 0x03, 0x84, 0x51, 0xC2, 0x27, 0x22, 0x93, 0xA8, 0x4B, 0xB4, 0x26, 0xBA, 0x11, 0xF9, 0xC4, 0x18, 0x62, 0x32, 0x31, 0x87, 0x58, 0x48, 0x2C, 0x23, 0xD6, 0x12, 0x8F, 0x13, 0x2F, 0x10, 0x7B, 0x88, 0x43, 0xC4, 0x37, 0x24, 0x12, 0x89, 0x43, 0x32, 0x27, 0xB9, 0x90, 0x02, 0x49, 0xB1, 0xA4, 0x54, 0xD2, 0x12, 0xD2, 0x46, 0xD2, 0x6E, 0x52, 0x23, 0xE9, 0x2C, 0xA9, 0x9B, 0x34, 0x48, 0x1A, 0x23, 0x93, 0xC9, 0xDA, 0x64, 0x6B, 0xB2, 0x07, 0x39, 0x94, 0x2C, 0x20, 0x2B, 0xC8, 0x85, 0xE4, 0x9D, 0xE4, 0xC3, 0xE4, 0x33, 0xE4, 0x1B, 0xE4, 0x21, 0xF2, 0x5B, 0x0A, 0x9D, 0x62, 0x40, 0x71, 0xA4, 0xF8, 0x53, 0xE2, 0x28, 0x52, 0xCA, 0x6A, 0x4A, 0x19, 0xE5, 0x10, 0xE5, 0x34, 0xE5, 0x06, 0x65, 0x98, 0x32, 0x41, 0x55, 0xA3, 0x9A, 0x52, 0xDD, 0xA8, 0xA1, 0x54, 0x11, 0x35, 0x8F, 0x5A, 0x42, 0xAD, 0xA1, 0xB6, 0x52, 0xAF, 0x51, 0x87, 0xA8, 0x13, 0x34, 0x75, 0x9A, 0x39, 0xCD, 0x83, 0x16, 0x49, 0x4B, 0xA5, 0xAD, 0xA2, 0x95, 0xD3, 0x1A, 0x68, 0x17, 0x68, 0xF7, 0x69, 0xAF, 0xE8, 0x74, 0xBA, 0x11, 0xDD, 0x95, 0x1E, 0x4E, 0x97, 0xD0, 0x57, 0xD2, 0xCB, 0xE9, 0x47, 0xE8, 0x97, 0xE8, 0x03, 0xF4, 0x77, 0x0C, 0x0D, 0x86, 0x15, 0x83, 0xC7, 0x88, 0x67, 0x28, 0x19, 0x9B, 0x18, 0x07, 0x18, 0x67, 0x19, 0x77, 0x18, 0xAF, 0x98, 0x4C, 0xA6, 0x19, 0xD3, 0x8B, 0x19, 0xC7, 0x54, 0x30, 0x37, 0x31, 0xEB, 0x98, 0xE7, 0x99, 0x0F, 0x99, 0x6F, 0x55, 0x58, 0x2A, 0xB6, 0x2A, 0x7C, 0x15, 0x91, 0xCA, 0x0A, 0x95, 0x4A, 0x95, 0x26, 0x95, 0x1B, 0x2A, 0x2F, 0x54, 0xA9, 0xAA, 0xA6, 0xAA, 0xDE, 0xAA, 0x0B, 0x55, 0xF3, 0x55, 0xCB, 0x54, 0x8F, 0xA9, 0x5E, 0x53, 0x7D, 0xAE, 0x46, 0x55, 0x33, 0x53, 0xE3, 0xA9, 0x09, 0xD4, 0x96, 0xAB, 0x55, 0xAA, 0x9D, 0x50, 0xEB, 0x53, 0x1B, 0x53, 0x67, 0xA9, 0x3B, 0xA8, 0x87, 0xAA, 0x67, 0xA8, 0x6F, 0x54, 0x3F, 0xA4, 0x7E, 0x59, 0xFD, 0x89, 0x06, 0x59, 0xC3, 0x4C, 0xC3, 0x4F, 0x43, 0xA4, 0x51, 0xA0, 0xB1, 0x5F, 0xE3, 0xBC, 0xC6, 0x20, 0x0B, 0x63, 0x19, 0xB3, 0x78, 0x2C, 0x21, 0x6B, 0x0D, 0xAB, 0x86, 0x75, 0x81, 0x35, 0xC4, 0x26, 0xB1, 0xCD, 0xD9, 0x7C, 0x76, 0x2A, 0xBB, 0x98, 0xFD, 0x1D, 0xBB, 0x8B, 0x3D, 0xAA, 0xA9, 0xA1, 0x39, 0x43, 0x33, 0x4A, 0x33, 0x57, 0xB3, 0x52, 0xF3, 0x94, 0x66, 0x3F, 0x07, 0xE3, 0x98, 0x71, 0xF8, 0x9C, 0x74, 0x4E, 0x09, 0xE7, 0x28, 0xA7, 0x97, 0xF3, 0x7E, 0x8A, 0xDE, 0x14, 0xEF, 0x29, 0xE2, 0x29, 0x1B, 0xA6, 0x34, 0x4C, 0xB9, 0x31, 0x65, 0x5C, 0x6B, 0xAA, 0x96, 0x97, 0x96, 0x58, 0xAB, 0x48, 0xAB, 0x51, 0xAB, 0x47, 0xEB, 0xBD, 0x36, 0xAE, 0xED, 0xA7, 0x9D, 0xA6, 0xBD, 0x45, 0xBB, 0x59, 0xFB, 0x81, 0x0E, 0x41, 0xC7, 0x4A, 0x27, 0x5C, 0x27, 0x47, 0x67, 0x8F, 0xCE, 0x05, 0x9D, 0xE7, 0x53, 0xD9, 0x53, 0xDD, 0xA7, 0x0A, 0xA7, 0x16, 0x4D, 0x3D, 0x3A, 0xF5, 0xAE, 0x2E, 0xAA, 0x6B, 0xA5, 0x1B, 0xA1, 0xBB, 0x44, 0x77, 0xBF, 0x6E, 0xA7, 0xEE, 0x98, 0x9E, 0xBE, 0x5E, 0x80, 0x9E, 0x4C, 0x6F, 0xA7, 0xDE, 0x79, 0xBD, 0xE7, 0xFA, 0x1C, 0x7D, 0x2F, 0xFD, 0x54, 0xFD, 0x6D, 0xFA, 0xA7, 0xF5, 0x47, 0x0C, 0x58, 0x06, 0xB3, 0x0C, 0x24, 0x06, 0xDB, 0x0C, 0xCE, 0x18, 0x3C, 0xC5, 0x35, 0x71, 0x6F, 0x3C, 0x1D, 0x2F, 0xC7, 0xDB, 0xF1, 0x51, 0x43, 0x5D, 0xC3, 0x40, 0x43, 0xA5, 0x61, 0x95, 0x61, 0x97, 0xE1, 0x84, 0x91, 0xB9, 0xD1, 0x3C, 0xA3, 0xD5, 0x46, 0x8D, 0x46, 0x0F, 0x8C, 0x69, 0xC6, 0x5C, 0xE3, 0x24, 0xE3, 0x6D, 0xC6, 0x6D, 0xC6, 0xA3, 0x26, 0x06, 0x26, 0x21, 0x26, 0x4B, 0x4D, 0xEA, 0x4D, 0xEE, 0x9A, 0x52, 0x4D, 0xB9, 0xA6, 0x29, 0xA6, 0x3B, 0x4C, 0x3B, 0x4C, 0xC7, 0xCD, 0xCC, 0xCD, 0xA2, 0xCD, 0xD6, 0x99, 0x35, 0x9B, 0x3D, 0x31, 0xD7, 0x32, 0xE7, 0x9B, 0xE7, 0x9B, 0xD7, 0x9B, 0xDF, 0xB7, 0x60, 0x5A, 0x78, 0x5A, 0x2C, 0xB6, 0xA8, 0xB6, 0xB8, 0x65, 0x49, 0xB2, 0xE4, 0x5A, 0xA6, 0x59, 0xEE, 0xB6, 0xBC, 0x6E, 0x85, 0x5A, 0x39, 0x59, 0xA5, 0x58, 0x55, 0x5A, 0x5D, 0xB3, 0x46, 0xAD, 0x9D, 0xAD, 0x25, 0xD6, 0xBB, 0xAD, 0xBB, 0xA7, 0x11, 0xA7, 0xB9, 0x4E, 0x93, 0x4E, 0xAB, 0x9E, 0xD6, 0x67, 0xC3, 0xB0, 0xF1, 0xB6, 0xC9, 0xB6, 0xA9, 0xB7, 0x19, 0xB0, 0xE5, 0xD8, 0x06, 0xDB, 0xAE, 0xB6, 0x6D, 0xB6, 0x7D, 0x61, 0x67, 0x62, 0x17, 0x67, 0xB7, 0xC5, 0xAE, 0xC3, 0xEE, 0x93, 0xBD, 0x93, 0x7D, 0xBA, 0x7D, 0x8D, 0xFD, 0x3D, 0x07, 0x0D, 0x87, 0xD9, 0x0E, 0xAB, 0x1D, 0x5A, 0x1D, 0x7E, 0x73, 0xB4, 0x72, 0x14, 0x3A, 0x56, 0x3A, 0xDE, 0x9A, 0xCE, 0x9C, 0xEE, 0x3F, 0x7D, 0xC5, 0xF4, 0x96, 0xE9, 0x2F, 0x67, 0x58, 0xCF, 0x10, 0xCF, 0xD8, 0x33, 0xE3, 0xB6, 0x13, 0xCB, 0x29, 0xC4, 0x69, 0x9D, 0x53, 0x9B, 0xD3, 0x47, 0x67, 0x17, 0x67, 0xB9, 0x73, 0x83, 0xF3, 0x88, 0x8B, 0x89, 0x4B, 0x82, 0xCB, 0x2E, 0x97, 0x3E, 0x2E, 0x9B, 0x1B, 0xC6, 0xDD, 0xC8, 0xBD, 0xE4, 0x4A, 0x74, 0xF5, 0x71, 0x5D, 0xE1, 0x7A, 0xD2, 0xF5, 0x9D, 0x9B, 0xB3, 0x9B, 0xC2, 0xED, 0xA8, 0xDB, 0xAF, 0xEE, 0x36, 0xEE, 0x69, 0xEE, 0x87, 0xDC, 0x9F, 0xCC, 0x34, 0x9F, 0x29, 0x9E, 0x59, 0x33, 0x73, 0xD0, 0xC3, 0xC8, 0x43, 0xE0, 0x51, 0xE5, 0xD1, 0x3F, 0x0B, 0x9F, 0x95, 0x30, 0x6B, 0xDF, 0xAC, 0x7E, 0x4F, 0x43, 0x4F, 0x81, 0x67, 0xB5, 0xE7, 0x23, 0x2F, 0x63, 0x2F, 0x91, 0x57, 0xAD, 0xD7, 0xB0, 0xB7, 0xA5, 0x77, 0xAA, 0xF7, 0x61, 0xEF, 0x17, 0x3E, 0xF6, 0x3E, 0x72, 0x9F, 0xE3, 0x3E, 0xE3, 0x3C, 0x37, 0xDE, 0x32, 0xDE, 0x59, 0x5F, 0xCC, 0x37, 0xC0, 0xB7, 0xC8, 0xB7, 0xCB, 0x4F, 0xC3, 0x6F, 0x9E, 0x5F, 0x85, 0xDF, 0x43, 0x7F, 0x23, 0xFF, 0x64, 0xFF, 0x7A, 0xFF, 0xD1, 0x00, 0xA7, 0x80, 0x25, 0x01, 0x67, 0x03, 0x89, 0x81, 0x41, 0x81, 0x5B, 0x02, 0xFB, 0xF8, 0x7A, 0x7C, 0x21, 0xBF, 0x8E, 0x3F, 0x3A, 0xDB, 0x65, 0xF6, 0xB2, 0xD9, 0xED, 0x41, 0x8C, 0xA0, 0xB9, 0x41, 0x15, 0x41, 0x8F, 0x82, 0xAD, 0x82, 0xE5, 0xC1, 0xAD, 0x21, 0x68, 0xC8, 0xEC, 0x90, 0xAD, 0x21, 0xF7, 0xE7, 0x98, 0xCE, 0x91, 0xCE, 0x69, 0x0E, 0x85, 0x50, 0x7E, 0xE8, 0xD6, 0xD0, 0x07, 0x61, 0xE6, 0x61, 0x8B, 0xC3, 0x7E, 0x0C, 0x27, 0x85, 0x87, 0x85, 0x57, 0x86, 0x3F, 0x8E, 0x70, 0x88, 0x58, 0x1A, 0xD1, 0x31, 0x97, 0x35, 0x77, 0xD1, 0xDC, 0x43, 0x73, 0xDF, 0x44, 0xFA, 0x44, 0x96, 0x44, 0xDE, 0x9B, 0x67, 0x31, 0x4F, 0x39, 0xAF, 0x2D, 0x4A, 0x35, 0x2A, 0x3E, 0xAA, 0x2E, 0x6A, 0x3C, 0xDA, 0x37, 0xBA, 0x34, 0xBA, 0x3F, 0xC6, 0x2E, 0x66, 0x59, 0xCC, 0xD5, 0x58, 0x9D, 0x58, 0x49, 0x6C, 0x4B, 0x1C, 0x39, 0x2E, 0x2A, 0xAE, 0x36, 0x6E, 0x6C, 0xBE, 0xDF, 0xFC, 0xED, 0xF3, 0x87, 0xE2, 0x9D, 0xE2, 0x0B, 0xE3, 0x7B, 0x17, 0x98, 0x2F, 0xC8, 0x5D, 0x70, 0x79, 0xA1, 0xCE, 0xC2, 0xF4, 0x85, 0xA7, 0x16, 0xA9, 0x2E, 0x12, 0x2C, 0x3A, 0x96, 0x40, 0x4C, 0x88, 0x4E, 0x38, 0x94, 0xF0, 0x41, 0x10, 0x2A, 0xA8, 0x16, 0x8C, 0x25, 0xF2, 0x13, 0x77, 0x25, 0x8E, 0x0A, 0x79, 0xC2, 0x1D, 0xC2, 0x67, 0x22, 0x2F, 0xD1, 0x36, 0xD1, 0x88, 0xD8, 0x43, 0x5C, 0x2A, 0x1E, 0x4E, 0xF2, 0x48, 0x2A, 0x4D, 0x7A, 0x92, 0xEC, 0x91, 0xBC, 0x35, 0x79, 0x24, 0xC5, 0x33, 0xA5, 0x2C, 0xE5, 0xB9, 0x84, 0x27, 0xA9, 0x90, 0xBC, 0x4C, 0x0D, 0x4C, 0xDD, 0x9B, 0x3A, 0x9E, 0x16, 0x9A, 0x76, 0x20, 0x6D, 0x32, 0x3D, 0x3A, 0xBD, 0x31, 0x83, 0x92, 0x91, 0x90, 0x71, 0x42, 0xAA, 0x21, 0x4D, 0x93, 0xB6, 0x67, 0xEA, 0x67, 0xE6, 0x66, 0x76, 0xCB, 0xAC, 0x65, 0x85, 0xB2, 0xFE, 0xC5, 0x6E, 0x8B, 0xB7, 0x2F, 0x1E, 0x95, 0x07, 0xC9, 0x6B, 0xB3, 0x90, 0xAC, 0x05, 0x59, 0x2D, 0x0A, 0xB6, 0x42, 0xA6, 0xE8, 0x54, 0x5A, 0x28, 0xD7, 0x2A, 0x07, 0xB2, 0x67, 0x65, 0x57, 0x66, 0xBF, 0xCD, 0x89, 0xCA, 0x39, 0x96, 0xAB, 0x9E, 0x2B, 0xCD, 0xED, 0xCC, 0xB3, 0xCA, 0xDB, 0x90, 0x37, 0x9C, 0xEF, 0x9F, 0xFF, 0xED, 0x12, 0xC2, 0x12, 0xE1, 0x92, 0xB6, 0xA5, 0x86, 0x4B, 0x57, 0x2D, 0x1D, 0x58, 0xE6, 0xBD, 0xAC, 0x6A, 0x39, 0xB2, 0x3C, 0x71, 0x79, 0xDB, 0x0A, 0xE3, 0x15, 0x05, 0x2B, 0x86, 0x56, 0x06, 0xAC, 0x3C, 0xB8, 0x8A, 0xB6, 0x2A, 0x6D, 0xD5, 0x4F, 0xAB, 0xED, 0x57, 0x97, 0xAE, 0x7E, 0xBD, 0x26, 0x7A, 0x4D, 0x6B, 0x81, 0x5E, 0xC1, 0xCA, 0x82, 0xC1, 0xB5, 0x01, 0x6B, 0xEB, 0x0B, 0x55, 0x0A, 0xE5, 0x85, 0x7D, 0xEB, 0xDC, 0xD7, 0xED, 0x5D, 0x4F, 0x58, 0x2F, 0x59, 0xDF, 0xB5, 0x61, 0xFA, 0x86, 0x9D, 0x1B, 0x3E, 0x15, 0x89, 0x8A, 0xAE, 0x14, 0xDB, 0x17, 0x97, 0x15, 0x7F, 0xD8, 0x28, 0xDC, 0x78, 0xE5, 0x1B, 0x87, 0x6F, 0xCA, 0xBF, 0x99, 0xDC, 0x94, 0xB4, 0xA9, 0xAB, 0xC4, 0xB9, 0x64, 0xCF, 0x66, 0xD2, 0x66, 0xE9, 0xE6, 0xDE, 0x2D, 0x9E, 0x5B, 0x0E, 0x96, 0xAA, 0x97, 0xE6, 0x97, 0x0E, 0x6E, 0x0D, 0xD9, 0xDA, 0xB4, 0x0D, 0xDF, 0x56, 0xB4, 0xED, 0xF5, 0xF6, 0x45, 0xDB, 0x2F, 0x97, 0xCD, 0x28, 0xDB, 0xBB, 0x83, 0xB6, 0x43, 0xB9, 0xA3, 0xBF, 0x3C, 0xB8, 0xBC, 0x65, 0xA7, 0xC9, 0xCE, 0xCD, 0x3B, 0x3F, 0x54, 0xA4, 0x54, 0xF4, 0x54, 0xFA, 0x54, 0x36, 0xEE, 0xD2, 0xDD, 0xB5, 0x61, 0xD7, 0xF8, 0x6E, 0xD1, 0xEE, 0x1B, 0x7B, 0xBC, 0xF6, 0x34, 0xEC, 0xD5, 0xDB, 0x5B, 0xBC, 0xF7, 0xFD, 0x3E, 0xC9, 0xBE, 0xDB, 0x55, 0x01, 0x55, 0x4D, 0xD5, 0x66, 0xD5, 0x65, 0xFB, 0x49, 0xFB, 0xB3, 0xF7, 0x3F, 0xAE, 0x89, 0xAA, 0xE9, 0xF8, 0x96, 0xFB, 0x6D, 0x5D, 0xAD, 0x4E, 0x6D, 0x71, 0xED, 0xC7, 0x03, 0xD2, 0x03, 0xFD, 0x07, 0x23, 0x0E, 0xB6, 0xD7, 0xB9, 0xD4, 0xD5, 0x1D, 0xD2, 0x3D, 0x54, 0x52, 0x8F, 0xD6, 0x2B, 0xEB, 0x47, 0x0E, 0xC7, 0x1F, 0xBE, 0xFE, 0x9D, 0xEF, 0x77, 0x2D, 0x0D, 0x36, 0x0D, 0x55, 0x8D, 0x9C, 0xC6, 0xE2, 0x23, 0x70, 0x44, 0x79, 0xE4, 0xE9, 0xF7, 0x09, 0xDF, 0xF7, 0x1E, 0x0D, 0x3A, 0xDA, 0x76, 0x8C, 0x7B, 0xAC, 0xE1, 0x07, 0xD3, 0x1F, 0x76, 0x1D, 0x67, 0x1D, 0x2F, 0x6A, 0x42, 0x9A, 0xF2, 0x9A, 0x46, 0x9B, 0x53, 0x9A, 0xFB, 0x5B, 0x62, 0x5B, 0xBA, 0x4F, 0xCC, 0x3E, 0xD1, 0xD6, 0xEA, 0xDE, 0x7A, 0xFC, 0x47, 0xDB, 0x1F, 0x0F, 0x9C, 0x34, 0x3C, 0x59, 0x79, 0x4A, 0xF3, 0x54, 0xC9, 0x69, 0xDA, 0xE9, 0x82, 0xD3, 0x93, 0x67, 0xF2, 0xCF, 0x8C, 0x9D, 0x95, 0x9D, 0x7D, 0x7E, 0x2E, 0xF9, 0xDC, 0x60, 0xDB, 0xA2, 0xB6, 0x7B, 0xE7, 0x63, 0xCE, 0xDF, 0x6A, 0x0F, 0x6F, 0xEF, 0xBA, 0x10, 0x74, 0xE1, 0xD2, 0x45, 0xFF, 0x8B, 0xE7, 0x3B, 0xBC, 0x3B, 0xCE, 0x5C, 0xF2, 0xB8, 0x74, 0xF2, 0xB2, 0xDB, 0xE5, 0x13, 0x57, 0xB8, 0x57, 0x9A, 0xAF, 0x3A, 0x5F, 0x6D, 0xEA, 0x74, 0xEA, 0x3C, 0xFE, 0x93, 0xD3, 0x4F, 0xC7, 0xBB, 0x9C, 0xBB, 0x9A, 0xAE, 0xB9, 0x5C, 0x6B, 0xB9, 0xEE, 0x7A, 0xBD, 0xB5, 0x7B, 0x66, 0xF7, 0xE9, 0x1B, 0x9E, 0x37, 0xCE, 0xDD, 0xF4, 0xBD, 0x79, 0xF1, 0x16, 0xFF, 0xD6, 0xD5, 0x9E, 0x39, 0x3D, 0xDD, 0xBD, 0xF3, 0x7A, 0x6F, 0xF7, 0xC5, 0xF7, 0xF5, 0xDF, 0x16, 0xDD, 0x7E, 0x72, 0x27, 0xFD, 0xCE, 0xCB, 0xBB, 0xD9, 0x77, 0x27, 0xEE, 0xAD, 0xBC, 0x4F, 0xBC, 0x5F, 0xF4, 0x40, 0xED, 0x41, 0xD9, 0x43, 0xDD, 0x87, 0xD5, 0x3F, 0x5B, 0xFE, 0xDC, 0xD8, 0xEF, 0xDC, 0x7F, 0x6A, 0xC0, 0x77, 0xA0, 0xF3, 0xD1, 0xDC, 0x47, 0xF7, 0x06, 0x85, 0x83, 0xCF, 0xFE, 0x91, 0xF5, 0x8F, 0x0F, 0x43, 0x05, 0x8F, 0x99, 0x8F, 0xCB, 0x86, 0x0D, 0x86, 0xEB, 0x9E, 0x38, 0x3E, 0x39, 0x39, 0xE2, 0x3F, 0x72, 0xFD, 0xE9, 0xFC, 0xA7, 0x43, 0xCF, 0x64, 0xCF, 0x26, 0x9E, 0x17, 0xFE, 0xA2, 0xFE, 0xCB, 0xAE, 0x17, 0x16, 0x2F, 0x7E, 0xF8, 0xD5, 0xEB, 0xD7, 0xCE, 0xD1, 0x98, 0xD1, 0xA1, 0x97, 0xF2, 0x97, 0x93, 0xBF, 0x6D, 0x7C, 0xA5, 0xFD, 0xEA, 0xC0, 0xEB, 0x19, 0xAF, 0xDB, 0xC6, 0xC2, 0xC6, 0x1E, 0xBE, 0xC9, 0x78, 0x33, 0x31, 0x5E, 0xF4, 0x56, 0xFB, 0xED, 0xC1, 0x77, 0xDC, 0x77, 0x1D, 0xEF, 0xA3, 0xDF, 0x0F, 0x4F, 0xE4, 0x7C, 0x20, 0x7F, 0x28, 0xFF, 0x68, 0xF9, 0xB1, 0xF5, 0x53, 0xD0, 0xA7, 0xFB, 0x93, 0x19, 0x93, 0x93, 0xFF, 0x04, 0x03, 0x98, 0xF3, 0xFC, 0x63, 0x33, 0x2D, 0xDB, 0x00, 0x00, 0x00, 0x20, 0x63, 0x48, 0x52, 0x4D, 0x00, 0x00, 0x7A, 0x25, 0x00, 0x00, 0x80, 0x83, 0x00, 0x00, 0xF9, 0xFF, 0x00, 0x00, 0x80, 0xE9, 0x00, 0x00, 0x75, 0x30, 0x00, 0x00, 0xEA, 0x60, 0x00, 0x00, 0x3A, 0x98, 0x00, 0x00, 0x17, 0x6F, 0x92, 0x5F, 0xC5, 0x46, 0x00, 0x00, 0x26, 0x6C, 0x49, 0x44, 0x41, 0x54, 0x78, 0xDA, 0xEC, 0x9B, 0x79, 0x58, 0x53, 0x69, 0x9E, 0xEF, 0xDF, 0xEA, 0xEE, 0xAA, 0xEE, 0x2E, 0xC1, 0x0D, 0x45, 0x40, 0x92, 0xE0, 0x6E, 0x95, 0x55, 0xCA, 0x12, 0x16, 0x71, 0x61, 0x4D, 0x42, 0x40, 0x11, 0x05, 0x31, 0xA0, 0xB8, 0xEF, 0xFB, 0x5A, 0xE5, 0xAE, 0xB5, 0xD8, 0xDD, 0xF5, 0x74, 0xDF, 0x9E, 0xE5, 0xCE, 0xF4, 0x52, 0x33, 0xD3, 0xB7, 0x67, 0xEE, 0xF4, 0xED, 0xA7, 0x67, 0xEE, 0x9D, 0x29, 0x17, 0x90, 0x45, 0x51, 0xA1, 0xC0, 0xAD, 0xD4, 0x42, 0x65, 0x27, 0x64, 0x3D, 0xFB, 0x39, 0xC9, 0x49, 0x20, 0x09, 0x21, 0xCB, 0x7B, 0xFF, 0xC8, 0x42, 0x12, 0xC2, 0x76, 0xA4, 0xA6, 0xEC, 0x9E, 0xCA, 0xF3, 0x7C, 0x9E, 0x13, 0xF5, 0x2F, 0x3F, 0xCF, 0xFB, 0x7D, 0x7F, 0xBF, 0xF7, 0x77, 0xDE, 0x00, 0x08, 0x21, 0xF8, 0x0E, 0xEE, 0x7C, 0x27, 0xE1, 0x3B, 0x81, 0xAF, 0xB1, 0x40, 0x27, 0xFC, 0xF1, 0x30, 0xFC, 0x08, 0x38, 0xE0, 0x0C, 0x60, 0x87, 0x7C, 0x60, 0x87, 0x7C, 0x60, 0x83, 0x3C, 0x60, 0x73, 0xF2, 0x80, 0x0D, 0xCE, 0x04, 0xFD, 0x4E, 0x1E, 0xB0, 0x3A, 0x78, 0xC0, 0x6A, 0x8F, 0x06, 0x7D, 0x0E, 0xF7, 0x77, 0x87, 0x00, 0x98, 0xED, 0x3C, 0x60, 0xB1, 0xF3, 0x81, 0xD9, 0xC6, 0x07, 0x66, 0x3B, 0x0F, 0x98, 0x6C, 0xD1, 0xC0, 0xDC, 0x1F, 0x0D, 0x2C, 0xB6, 0x48, 0x60, 0xB2, 0xCE, 0x9C, 0x60, 0xB4, 0xF0, 0xE6, 0xF4, 0x58, 0x79, 0x2B, 0x8D, 0x7D, 0xBC, 0x12, 0x63, 0x1F, 0x6F, 0x0F, 0x6B, 0x8E, 0x3E, 0xCE, 0x9A, 0xA2, 0x3F, 0x64, 0x4D, 0xD1, 0x1F, 0xB0, 0xBD, 0x33, 0x0F, 0xEB, 0x7B, 0xA2, 0x77, 0x32, 0x86, 0x99, 0x6B, 0x69, 0x36, 0x2A, 0x51, 0x67, 0x8C, 0x9A, 0xC9, 0x18, 0x23, 0xDE, 0xA4, 0xD8, 0x08, 0x40, 0xE8, 0x22, 0x81, 0xBE, 0x27, 0x02, 0x10, 0xCC, 0x0C, 0x80, 0x92, 0x33, 0x00, 0xCE, 0x44, 0x00, 0x94, 0x0A, 0x07, 0x28, 0x39, 0x0D, 0xA0, 0x64, 0x38, 0xC0, 0xA8, 0x70, 0x80, 0x51, 0xD3, 0x00, 0x4A, 0x4E, 0x03, 0x5A, 0x2C, 0x0C, 0x20, 0xF8, 0x54, 0xA0, 0xC2, 0xC2, 0x80, 0x42, 0x3D, 0x09, 0x68, 0xB1, 0x50, 0xD0, 0xAD, 0x9E, 0x02, 0xBA, 0x95, 0x21, 0x40, 0xCF, 0x4E, 0x00, 0xAC, 0x21, 0x38, 0xAF, 0xB3, 0xC0, 0xB7, 0x2C, 0xB6, 0xC8, 0x18, 0x93, 0x75, 0x66, 0xA6, 0xD1, 0xC2, 0xDB, 0x65, 0xEC, 0xE3, 0x7D, 0x6C, 0xB0, 0xF0, 0x3E, 0x37, 0x58, 0x78, 0x7F, 0x60, 0x4D, 0xBC, 0xFF, 0xC7, 0x9A, 0xA2, 0xAF, 0xB2, 0xA6, 0xE8, 0x2F, 0xF4, 0xBD, 0xD1, 0xFF, 0xA6, 0x33, 0x46, 0xFF, 0x0B, 0x63, 0x88, 0xFE, 0x9F, 0x8C, 0x61, 0xE6, 0x19, 0x9D, 0x31, 0x6A, 0x23, 0x63, 0x8C, 0x48, 0xA6, 0xD8, 0x88, 0x70, 0x42, 0x17, 0xF9, 0xC6, 0x7F, 0x2F, 0x81, 0x76, 0xFE, 0xDB, 0x66, 0x3B, 0x2F, 0xD5, 0xD4, 0xCF, 0x3B, 0x62, 0xB2, 0xF2, 0x3E, 0x37, 0x59, 0x79, 0x37, 0x7A, 0xFA, 0x78, 0x77, 0x0D, 0x16, 0x5E, 0x9D, 0xC1, 0xC2, 0xBB, 0x6B, 0xB0, 0xF0, 0x6A, 0x0D, 0x66, 0xDE, 0x2D, 0xD6, 0xC4, 0xBB, 0xC5, 0x9A, 0xA2, 0x6B, 0x58, 0x53, 0x74, 0x8D, 0xAE, 0x27, 0xFA, 0x96, 0xCE, 0x18, 0x7D, 0x5B, 0x67, 0x8C, 0xBE, 0xA3, 0x33, 0xCE, 0xBC, 0xC7, 0x18, 0xA2, 0xEA, 0x49, 0x36, 0xEA, 0x0E, 0xC9, 0x46, 0xFD, 0x27, 0xC9, 0x46, 0xFD, 0x15, 0x6D, 0x88, 0xDC, 0x4C, 0x30, 0x33, 0xDE, 0xC1, 0xC8, 0x19, 0x6F, 0xFC, 0x25, 0x0B, 0x9C, 0x63, 0xB6, 0xF3, 0x77, 0x99, 0x6C, 0xFC, 0xDF, 0x9B, 0x6C, 0xBC, 0x5A, 0x93, 0x95, 0x57, 0x6F, 0xB2, 0xF2, 0x6A, 0x4D, 0x56, 0x5E, 0x65, 0x4F, 0x1F, 0xEF, 0xA6, 0xC1, 0x32, 0x00, 0x6B, 0xE6, 0xDD, 0x64, 0x4D, 0xBC, 0x9B, 0xAC, 0x29, 0xFA, 0x26, 0x6B, 0x8A, 0xBE, 0xA9, 0x33, 0xFA, 0x12, 0x75, 0x93, 0x32, 0x44, 0x55, 0x92, 0x6C, 0x54, 0x25, 0xC9, 0x46, 0xDD, 0x22, 0xD9, 0xA8, 0x3A, 0x42, 0x17, 0xD5, 0x40, 0xE8, 0x22, 0xAB, 0x70, 0x26, 0xE2, 0x6F, 0x71, 0x26, 0x62, 0x35, 0x4A, 0x85, 0x4F, 0xFE, 0x4B, 0x12, 0x38, 0xB7, 0xCF, 0x2E, 0x38, 0x63, 0xB2, 0x09, 0xCA, 0x4D, 0x36, 0x41, 0xBD, 0xC9, 0xC6, 0xBF, 0x65, 0xEA, 0xE7, 0xDD, 0x34, 0x59, 0x79, 0x15, 0x26, 0x2B, 0xAF, 0xA2, 0xD7, 0xCA, 0xAB, 0x30, 0x5A, 0x02, 0x04, 0xFA, 0xC8, 0x63, 0x7B, 0x7D, 0xE5, 0xCD, 0xBC, 0xC9, 0x18, 0xA3, 0x6E, 0x52, 0xAC, 0x57, 0x60, 0x25, 0xC9, 0x46, 0x55, 0x12, 0xBA, 0xC8, 0x4A, 0x5C, 0x17, 0x59, 0x8D, 0x31, 0x91, 0xF7, 0x30, 0x3A, 0xB2, 0x11, 0xA3, 0x23, 0xFE, 0x84, 0x51, 0xD3, 0x37, 0xA1, 0x64, 0xF8, 0x94, 0x3F, 0x67, 0x81, 0xD3, 0xFB, 0x1C, 0xFC, 0x23, 0x16, 0xBB, 0xE0, 0xA6, 0x4B, 0x9C, 0xA0, 0xCA, 0x64, 0x13, 0x54, 0x98, 0x6C, 0xBC, 0x0A, 0x53, 0xBF, 0x4B, 0x9E, 0xC9, 0xCA, 0xAB, 0x08, 0x5C, 0x7D, 0x81, 0x02, 0xF5, 0x3D, 0xFE, 0xAB, 0x8F, 0x31, 0xF8, 0xCB, 0x23, 0xF5, 0x5E, 0x81, 0x95, 0x18, 0x13, 0x59, 0x89, 0xD1, 0x91, 0x95, 0x18, 0x1D, 0x59, 0x8B, 0xD1, 0x11, 0x8D, 0x28, 0x19, 0xF1, 0x47, 0x8C, 0x9A, 0x51, 0x80, 0x51, 0xD3, 0x7E, 0xF0, 0xE7, 0x26, 0x70, 0x95, 0xC5, 0xCE, 0xFF, 0x77, 0x8B, 0x5D, 0xD0, 0x60, 0xB1, 0x0B, 0xAA, 0xDC, 0xAB, 0xAF, 0xC2, 0x64, 0xE3, 0xBB, 0x04, 0x5A, 0x07, 0x08, 0x5C, 0x7D, 0x06, 0xB3, 0xCF, 0xEA, 0x1B, 0x3E, 0xBE, 0xAE, 0xD5, 0xA7, 0x8F, 0x1A, 0x90, 0x37, 0x20, 0xB0, 0x12, 0xA5, 0x22, 0x2A, 0x11, 0x22, 0xE2, 0x2E, 0x42, 0x44, 0x34, 0xA2, 0xE4, 0xF4, 0xBF, 0x45, 0x89, 0x69, 0xEF, 0xFE, 0x39, 0x08, 0x0C, 0xB3, 0x3A, 0x05, 0x97, 0x2D, 0x76, 0x41, 0xBD, 0xC5, 0x2E, 0xB8, 0x65, 0xB1, 0x7B, 0xC4, 0x79, 0xE0, 0x57, 0x98, 0xFA, 0xF9, 0x15, 0x26, 0x6B, 0xF8, 0x0D, 0x93, 0x35, 0xE2, 0x46, 0x6F, 0x1F, 0xBF, 0x62, 0xD0, 0xEA, 0x33, 0x0F, 0xB5, 0xFA, 0x66, 0x0E, 0x5E, 0x7D, 0x9E, 0xF8, 0x06, 0xC8, 0xC3, 0xE8, 0x88, 0x4A, 0x94, 0x8C, 0xA8, 0x44, 0x88, 0x88, 0x4A, 0x84, 0x98, 0x51, 0xA9, 0xC1, 0xC2, 0xEB, 0xD5, 0x68, 0xF8, 0x2D, 0x0D, 0x36, 0xAD, 0xE4, 0xF5, 0x15, 0x08, 0xF9, 0x0B, 0x6D, 0x4E, 0xFE, 0x3F, 0xF7, 0x39, 0x04, 0x75, 0x16, 0xBB, 0xA0, 0xC2, 0x83, 0xBF, 0xC0, 0xA8, 0x72, 0x53, 0x7F, 0xE8, 0x55, 0x73, 0x7F, 0x72, 0xAD, 0xB9, 0x7F, 0xC9, 0x2D, 0xA3, 0x25, 0xA2, 0x7C, 0xB8, 0xF8, 0xEA, 0x02, 0xE2, 0x4B, 0x0F, 0x11, 0x5F, 0x6C, 0x48, 0x81, 0x33, 0x2A, 0x11, 0x22, 0xBC, 0x52, 0x83, 0x85, 0xDF, 0x54, 0xA1, 0xE1, 0xB7, 0x54, 0x68, 0xF8, 0x7D, 0x35, 0x3A, 0xED, 0x82, 0x1A, 0x0B, 0x0B, 0x7D, 0xDD, 0x04, 0xA6, 0xD8, 0xA0, 0xE0, 0xAA, 0xD5, 0x29, 0xB8, 0xD3, 0xE7, 0x10, 0x94, 0x7B, 0xE4, 0x99, 0xBD, 0x02, 0x63, 0x2A, 0x4C, 0xB6, 0xA9, 0xD7, 0x4C, 0x36, 0x7E, 0x85, 0xD5, 0x7E, 0xB1, 0xD9, 0xE9, 0xA4, 0xFB, 0x6C, 0x8E, 0xFF, 0x40, 0x0C, 0x96, 0xC9, 0xD7, 0xFD, 0x04, 0x9A, 0x7C, 0x04, 0x06, 0x14, 0x8F, 0xA0, 0xF1, 0xD5, 0x0D, 0x21, 0x90, 0x1A, 0x24, 0xB0, 0x52, 0x85, 0x86, 0x57, 0xA9, 0xD0, 0xF0, 0x2A, 0x05, 0x32, 0xFD, 0xBE, 0x12, 0x9D, 0xFE, 0x37, 0x0A, 0xF5, 0xA4, 0x69, 0xAF, 0x8B, 0xC0, 0x15, 0x36, 0x28, 0xB8, 0x69, 0x83, 0x82, 0x5B, 0x56, 0xA7, 0xE0, 0x86, 0xEF, 0xEA, 0x33, 0xDB, 0x63, 0x2A, 0x4C, 0xB6, 0xE8, 0x72, 0x93, 0x6D, 0xE2, 0x17, 0x16, 0xFB, 0xAA, 0x06, 0x87, 0xF3, 0x2B, 0x1D, 0xF4, 0x7E, 0x1C, 0xCE, 0x5E, 0x6B, 0xF1, 0x43, 0xD6, 0x32, 0xE9, 0x9A, 0xC1, 0xC2, 0x1F, 0x5C, 0x3C, 0x7A, 0xC7, 0x23, 0xBE, 0xE1, 0x95, 0x5A, 0x3C, 0xBC, 0x52, 0xED, 0x15, 0x38, 0xBD, 0x4A, 0x81, 0x4C, 0xAF, 0x54, 0x20, 0xE1, 0x8D, 0xDD, 0xEA, 0x29, 0xFF, 0x88, 0x60, 0x13, 0xA7, 0x7F, 0xDB, 0x02, 0x97, 0xDA, 0x20, 0xFF, 0xA6, 0x0D, 0x0A, 0x6A, 0xFA, 0x9D, 0x82, 0x1B, 0x7D, 0x8E, 0x01, 0x79, 0x16, 0x7B, 0x4C, 0x85, 0xC9, 0x36, 0xE3, 0xBA, 0xC9, 0x36, 0xFD, 0x7A, 0xBF, 0xE3, 0x27, 0xAD, 0x10, 0x5A, 0x1D, 0x30, 0xE0, 0x63, 0x73, 0x3C, 0xD3, 0x1B, 0x2C, 0x33, 0x6F, 0x1A, 0x2C, 0x51, 0x15, 0x86, 0x11, 0x7A, 0xBF, 0x61, 0xE3, 0x4B, 0x07, 0x5B, 0x7D, 0x11, 0x95, 0x5A, 0xDC, 0x7F, 0xF5, 0xB9, 0x05, 0x56, 0x29, 0xB4, 0xD3, 0xAA, 0x14, 0xEA, 0xB0, 0x46, 0x85, 0x26, 0xEC, 0x1F, 0x15, 0xEA, 0xC9, 0x53, 0xBE, 0x05, 0x81, 0x3F, 0x04, 0x0E, 0x38, 0xE3, 0x3D, 0x1B, 0x9C, 0x75, 0xDD, 0x06, 0x05, 0xB7, 0x6C, 0x50, 0x70, 0xC3, 0xEA, 0x1C, 0x88, 0xAE, 0xC5, 0x1E, 0x53, 0x61, 0xB6, 0x4F, 0xBB, 0x66, 0xB6, 0xCD, 0xAF, 0xB4, 0x3B, 0x2B, 0x70, 0x38, 0xCC, 0xC7, 0xD2, 0x7F, 0xB9, 0x95, 0xB5, 0x84, 0x5E, 0xF5, 0x15, 0xE8, 0xBF, 0xFA, 0x86, 0xAE, 0xBE, 0x83, 0x05, 0x46, 0xF8, 0xC5, 0xD7, 0x7F, 0xF5, 0x85, 0x57, 0x29, 0x11, 0xB7, 0x40, 0xCD, 0xB4, 0xAA, 0x6E, 0x75, 0x58, 0xA5, 0x5C, 0x15, 0x76, 0x5F, 0xA1, 0x99, 0xFA, 0xB7, 0x72, 0x45, 0xC8, 0xDB, 0x7A, 0x76, 0x02, 0x30, 0x18, 0x83, 0x33, 0xEE, 0x02, 0x1D, 0x30, 0x24, 0xDC, 0x06, 0x79, 0x7F, 0xB4, 0x41, 0x41, 0xAD, 0x0D, 0x0A, 0x6E, 0xF4, 0x43, 0x41, 0xF9, 0x80, 0xC0, 0x98, 0x0A, 0x8B, 0x3D, 0xEC, 0x9A, 0xC5, 0x9E, 0x54, 0xEB, 0x70, 0xBE, 0x30, 0xC0, 0x11, 0x3E, 0x4E, 0x27, 0x63, 0x35, 0xF6, 0x25, 0xD6, 0xB2, 0xA6, 0xE9, 0x37, 0xBC, 0x02, 0x47, 0x59, 0x7D, 0xB1, 0x11, 0xAA, 0xAF, 0x16, 0x0F, 0xAF, 0x54, 0xA3, 0x7E, 0xF1, 0xAD, 0x52, 0x68, 0xA7, 0x57, 0x75, 0xAB, 0xC3, 0x3C, 0x54, 0xCA, 0x55, 0xD3, 0x1E, 0x76, 0x29, 0x27, 0x9D, 0xD1, 0xB3, 0x13, 0x00, 0xA3, 0x0B, 0x0E, 0x47, 0x81, 0x21, 0x01, 0x4C, 0x70, 0x33, 0xE9, 0x4D, 0x1B, 0xE4, 0xFF, 0xC4, 0x06, 0x63, 0xEA, 0x6C, 0x50, 0x70, 0xC3, 0x06, 0x05, 0xE5, 0xFD, 0x4E, 0x41, 0xB9, 0x2B, 0xBE, 0x2E, 0x79, 0x7D, 0x8E, 0xA5, 0x77, 0x9C, 0xB0, 0xBB, 0x17, 0x8E, 0xF2, 0xD3, 0x6F, 0xFF, 0x93, 0x86, 0x35, 0x4D, 0xBE, 0xCE, 0x9A, 0x66, 0x56, 0x8C, 0x26, 0xBE, 0x04, 0x87, 0xF8, 0x2A, 0x7D, 0xE2, 0xEB, 0x23, 0xB0, 0xAA, 0x4B, 0x39, 0xB5, 0xBA, 0x4B, 0x39, 0xB5, 0x51, 0xAD, 0x9D, 0x5C, 0xD0, 0xD1, 0x3E, 0x09, 0xB4, 0xB5, 0x0D, 0x86, 0xA3, 0xC0, 0x19, 0x41, 0x98, 0x06, 0xEC, 0x30, 0xBC, 0xC8, 0x06, 0x67, 0xD5, 0xDB, 0xA0, 0xA0, 0xDC, 0x83, 0xD5, 0x29, 0x28, 0xEF, 0x73, 0xC4, 0x54, 0x58, 0xEC, 0xD3, 0xAF, 0xF5, 0xD9, 0x63, 0x6B, 0x9C, 0xCE, 0x8E, 0x1E, 0x38, 0xA6, 0x8F, 0xCD, 0xD9, 0xDB, 0x57, 0xF2, 0x48, 0x6F, 0x9A, 0x7C, 0x9D, 0xED, 0x1D, 0x63, 0xF3, 0x4C, 0xFB, 0x37, 0xCF, 0xBE, 0xF1, 0xD5, 0x78, 0xF7, 0x3E, 0x1F, 0x81, 0x9A, 0x01, 0x81, 0x72, 0x55, 0x58, 0x55, 0x97, 0x72, 0x6A, 0x55, 0xA7, 0x62, 0x6A, 0x6D, 0x47, 0xF7, 0xD4, 0x8A, 0xF6, 0xCE, 0x49, 0xB3, 0x95, 0xCA, 0x50, 0xA0, 0x52, 0x4D, 0xF4, 0x83, 0xA3, 0xC0, 0x79, 0x01, 0xCC, 0x07, 0x0E, 0x38, 0x4B, 0x60, 0x83, 0xFC, 0xEB, 0x36, 0x28, 0xA8, 0xF6, 0x17, 0x18, 0x53, 0x6E, 0xB1, 0x47, 0xDE, 0xE8, 0xB3, 0x0B, 0x2A, 0x1C, 0xCE, 0x87, 0x0C, 0xE4, 0xF0, 0xE9, 0xB7, 0x5F, 0x45, 0x59, 0x53, 0xD8, 0x0D, 0x5D, 0xCF, 0xCC, 0x0A, 0xDF, 0xF8, 0xD2, 0xC6, 0xA8, 0x9B, 0xA3, 0x38, 0xBA, 0xF9, 0xAD, 0x3E, 0x4F, 0xEB, 0xA2, 0x0E, 0x2C, 0x1E, 0x88, 0x5F, 0x7C, 0xAB, 0xE4, 0xAA, 0xB0, 0xAA, 0x4E, 0xC5, 0xD4, 0xAA, 0x4E, 0xC5, 0xD4, 0xAA, 0x0E, 0xC5, 0xD4, 0xC6, 0x56, 0xF9, 0xA4, 0x9F, 0x93, 0xD4, 0x84, 0xEF, 0xEB, 0x74, 0x21, 0x80, 0xF1, 0x81, 0x93, 0x40, 0x07, 0x8C, 0x0A, 0xE4, 0x0D, 0x3B, 0x14, 0x5C, 0xB2, 0x41, 0x81, 0x37, 0xBA, 0x36, 0x28, 0x28, 0xEF, 0x87, 0x82, 0xF2, 0x3E, 0x07, 0xBF, 0xDC, 0x6C, 0x9F, 0x72, 0xD5, 0xEE, 0xFC, 0x83, 0x7A, 0xEC, 0xEA, 0xAC, 0x8E, 0x3E, 0xDB, 0x5F, 0x77, 0x19, 0xCC, 0x0B, 0x6A, 0xD8, 0xDE, 0xC8, 0x8A, 0xC0, 0xDE, 0x6F, 0x70, 0x7C, 0x23, 0x83, 0xEC, 0x7F, 0xEE, 0xE2, 0x41, 0x04, 0xEF, 0xFD, 0xBC, 0xC5, 0xC3, 0x7F, 0xFF, 0xF3, 0xAC, 0xBE, 0xAA, 0x4E, 0xC5, 0xD4, 0xAA, 0xF6, 0xEE, 0x29, 0xD5, 0xAD, 0xF2, 0xC9, 0x0D, 0x4A, 0x6D, 0xA8, 0x14, 0xC5, 0xDF, 0x06, 0x08, 0x36, 0x00, 0x27, 0x81, 0x76, 0x18, 0x11, 0x40, 0x64, 0xB2, 0xBB, 0x68, 0x54, 0x0C, 0x5A, 0x7D, 0x8E, 0x89, 0x5F, 0xD8, 0x1C, 0xC7, 0x9B, 0xC6, 0xAA, 0xCE, 0xE1, 0xEC, 0xEA, 0xED, 0xB1, 0xE4, 0x37, 0xEA, 0x4D, 0x6F, 0x5F, 0x65, 0x4D, 0xE1, 0xE5, 0xFA, 0x5E, 0xDE, 0xE0, 0xC9, 0x8B, 0x21, 0xE8, 0xE4, 0x25, 0x68, 0xF1, 0xF0, 0xAB, 0xBE, 0x3E, 0xF1, 0x55, 0x20, 0xC1, 0xE3, 0xEB, 0x91, 0xD7, 0xA9, 0x98, 0x52, 0xD5, 0x26, 0x9F, 0x5C, 0xD5, 0x2A, 0x9F, 0x7C, 0xAF, 0x4D, 0x3E, 0xE9, 0xFF, 0x74, 0xA9, 0x26, 0x86, 0x74, 0xA9, 0x26, 0x02, 0x0F, 0x1C, 0x05, 0xF2, 0x7D, 0xF9, 0x9E, 0x0D, 0xF2, 0x7F, 0x61, 0x83, 0x82, 0xBB, 0xBE, 0xF2, 0x5C, 0xAB, 0x2F, 0xFC, 0x5A, 0x9F, 0x23, 0xB9, 0x16, 0x42, 0xDA, 0x3A, 0x16, 0x79, 0x76, 0x47, 0x3D, 0x6D, 0xB4, 0x2C, 0xAA, 0xD1, 0x9B, 0x26, 0x5E, 0x1B, 0xED, 0xD1, 0xCD, 0x53, 0x3C, 0xF0, 0x20, 0x83, 0x83, 0x11, 0xE3, 0x3B, 0x68, 0xF5, 0xF9, 0xC4, 0xB7, 0x7B, 0x4A, 0x55, 0xAB, 0x7C, 0x72, 0x75, 0xAB, 0x7C, 0x52, 0x55, 0x4B, 0xE7, 0xA4, 0x07, 0xED, 0xF2, 0x89, 0x45, 0xDD, 0xCA, 0x10, 0x20, 0x77, 0xC3, 0x51, 0x60, 0x8C, 0x17, 0x1B, 0x14, 0x24, 0xD8, 0xA0, 0xA0, 0x26, 0x70, 0xF5, 0xF5, 0x3B, 0xF9, 0xE5, 0x16, 0xC7, 0xB4, 0x6B, 0x76, 0xE7, 0x7F, 0x20, 0x63, 0xDA, 0xEF, 0x1C, 0x95, 0xB8, 0xA1, 0x8F, 0x7F, 0x93, 0x35, 0x87, 0xDD, 0x60, 0x4D, 0xFC, 0x20, 0x47, 0xB7, 0xE8, 0xE1, 0xE6, 0x7E, 0x83, 0xE2, 0x1B, 0xD8, 0xBA, 0x68, 0x7C, 0x4E, 0x1E, 0x4A, 0x64, 0xD8, 0xE2, 0xE1, 0x89, 0x6F, 0x55, 0xAB, 0x7C, 0x72, 0x75, 0x8B, 0x7C, 0x52, 0x75, 0x4B, 0xC7, 0xA4, 0x7B, 0x6D, 0x9D, 0x13, 0xFF, 0x45, 0xA1, 0x0A, 0x7D, 0x5B, 0xA9, 0x0A, 0x05, 0x4A, 0x55, 0xE8, 0xAB, 0xAF, 0x40, 0x1B, 0xE4, 0x9F, 0xB5, 0x41, 0xC1, 0x3D, 0x5F, 0x79, 0x36, 0x28, 0x28, 0xEF, 0x73, 0x86, 0x5D, 0xB5, 0x3A, 0x8A, 0xEE, 0x43, 0x68, 0x77, 0x8E, 0xBA, 0xDE, 0x3A, 0xEE, 0x92, 0x06, 0x0B, 0xEF, 0x26, 0x6B, 0x99, 0x36, 0x20, 0x2F, 0xD8, 0xDC, 0x2F, 0xB0, 0x78, 0x8C, 0x72, 0xF2, 0xA2, 0xC5, 0xC3, 0x2B, 0x55, 0x58, 0x40, 0xEF, 0x37, 0x48, 0xE0, 0xD4, 0xC0, 0xF8, 0x56, 0xB7, 0xCA, 0x27, 0x57, 0xB7, 0x74, 0x4D, 0xAA, 0x6E, 0xE9, 0x98, 0x54, 0xDD, 0xDC, 0x3E, 0xA9, 0xA1, 0xB3, 0x3B, 0x34, 0xA3, 0xAD, 0x33, 0x14, 0xB4, 0x75, 0x86, 0x72, 0x2D, 0x22, 0xF3, 0xDC, 0xCC, 0x9D, 0x61, 0x83, 0xBC, 0xFF, 0xB4, 0x41, 0x41, 0x95, 0x7F, 0x7C, 0x79, 0x37, 0xFA, 0x1C, 0xE1, 0xD7, 0x1C, 0xCE, 0x5A, 0x62, 0xD4, 0x7B, 0x9E, 0xA3, 0xD9, 0x68, 0xE8, 0x5B, 0x50, 0x6D, 0xB0, 0x84, 0x5D, 0x37, 0x58, 0xF8, 0xFE, 0x67, 0x5F, 0x23, 0xB7, 0xF8, 0x06, 0xAB, 0xBE, 0xC1, 0x8A, 0x87, 0x42, 0x13, 0xBC, 0x78, 0x0C, 0xC4, 0x77, 0x72, 0x75, 0x4B, 0xE7, 0xA4, 0xEA, 0x96, 0x8E, 0x49, 0x55, 0xCD, 0xED, 0x13, 0xEF, 0x37, 0xB7, 0x85, 0x5E, 0x79, 0xD9, 0x12, 0x02, 0x5E, 0xB6, 0x70, 0x8E, 0x70, 0x14, 0xB0, 0xC3, 0x48, 0x60, 0x87, 0x82, 0x7C, 0x1B, 0x8C, 0xB9, 0xE7, 0x5B, 0x79, 0x5D, 0xC5, 0x23, 0xEC, 0xAA, 0xD5, 0x51, 0xD8, 0x08, 0xA1, 0x63, 0x54, 0xF2, 0x9C, 0x50, 0x67, 0xED, 0xB1, 0xA6, 0xD5, 0xB1, 0x96, 0xC9, 0x83, 0xE4, 0x05, 0x99, 0xBC, 0x54, 0x52, 0xA3, 0x5D, 0x7D, 0xD4, 0xD0, 0xF1, 0x1D, 0x4D, 0xF1, 0xF0, 0xC4, 0xB7, 0xD5, 0xBD, 0xFA, 0x5C, 0x2B, 0x70, 0x62, 0x6D, 0x73, 0xFB, 0xC4, 0xF2, 0x96, 0x8E, 0x90, 0xC8, 0xE6, 0x8E, 0x57, 0x12, 0x18, 0x05, 0xEC, 0x90, 0xF7, 0xA9, 0x0D, 0x0A, 0xEE, 0xF8, 0xAF, 0x3E, 0x7E, 0x79, 0x9F, 0x33, 0xEC, 0xEA, 0x58, 0xF6, 0x3E, 0x73, 0xFF, 0xD1, 0x26, 0xD6, 0x32, 0x21, 0xF8, 0xE4, 0x65, 0xA4, 0xA3, 0x9B, 0x7E, 0xD4, 0x83, 0xD3, 0xC0, 0xC9, 0x8B, 0x5B, 0x60, 0x58, 0xD0, 0xF8, 0x76, 0x74, 0x0F, 0x8E, 0xAF, 0x5B, 0x60, 0xF5, 0xCB, 0xB6, 0x89, 0xF7, 0x5B, 0x3B, 0x27, 0x48, 0xDB, 0xBA, 0x38, 0xB7, 0x31, 0x02, 0x60, 0x87, 0x82, 0xA9, 0x36, 0x28, 0xF8, 0xB7, 0xC0, 0xF8, 0x5A, 0x9D, 0x33, 0xAE, 0x59, 0x1D, 0x89, 0xB7, 0x21, 0x64, 0xAC, 0xA3, 0xDB, 0xF7, 0x6A, 0x08, 0xD6, 0x32, 0xF5, 0xBA, 0xC1, 0x12, 0x5D, 0x31, 0x30, 0xB6, 0xE7, 0x05, 0x2D, 0x1E, 0x63, 0x3A, 0xBA, 0xD1, 0x01, 0x27, 0x8F, 0x31, 0xF6, 0x7E, 0x41, 0xE2, 0x5B, 0xDD, 0xDC, 0x3E, 0xD1, 0x23, 0xB0, 0xB1, 0xB9, 0x3D, 0xE4, 0x7C, 0x9B, 0xFC, 0x95, 0x8A, 0x88, 0x20, 0xCE, 0x3D, 0x6D, 0xF1, 0xA9, 0xBE, 0x31, 0xE5, 0x56, 0xE7, 0xA4, 0x2F, 0x6C, 0xCE, 0x93, 0xA3, 0xEC, 0xFB, 0xCC, 0xF6, 0x5E, 0x6B, 0x56, 0x3D, 0x6B, 0x99, 0x72, 0x7D, 0x34, 0x73, 0x3F, 0xDD, 0x50, 0xD5, 0x77, 0x34, 0x83, 0x03, 0xFF, 0xC1, 0xE9, 0xC8, 0xF1, 0x75, 0xCB, 0x6B, 0xED, 0xF2, 0x97, 0xE7, 0x12, 0x18, 0x7A, 0xEF, 0x79, 0x6B, 0xC8, 0xEF, 0x5B, 0x3A, 0x27, 0xFE, 0x98, 0x93, 0xC0, 0x7E, 0x28, 0x00, 0xFD, 0x50, 0x50, 0x3C, 0xF8, 0xE4, 0xC1, 0x2F, 0xEF, 0x73, 0x86, 0x5D, 0x73, 0x38, 0x2B, 0xB0, 0x51, 0x9D, 0x33, 0xEC, 0x7F, 0x54, 0xB3, 0x96, 0x89, 0xD7, 0x46, 0xF7, 0xD6, 0x8D, 0xFB, 0xE0, 0x34, 0x68, 0x7C, 0xB5, 0x81, 0xF1, 0xF5, 0x17, 0xD8, 0x3A, 0xA8, 0xFA, 0x0E, 0x08, 0x7C, 0xD1, 0x1A, 0x7A, 0xFB, 0x79, 0x6B, 0xC8, 0xCD, 0xF6, 0xAE, 0xB7, 0x67, 0x71, 0x12, 0x68, 0x85, 0xD1, 0xC0, 0x06, 0x05, 0x27, 0x02, 0x05, 0x5A, 0x9D, 0x51, 0x37, 0xAC, 0x8E, 0x77, 0x2A, 0x9D, 0x50, 0x63, 0x1E, 0x59, 0x5F, 0x9F, 0xA3, 0xD7, 0x9A, 0x5D, 0xEF, 0x8A, 0xAF, 0xEF, 0x5B, 0xB7, 0x6F, 0x76, 0x70, 0x1A, 0x6C, 0x70, 0xE0, 0x1F, 0x5F, 0x9F, 0xE2, 0x11, 0x24, 0xBE, 0xCD, 0xED, 0x13, 0xAB, 0x9F, 0xB7, 0x84, 0xD4, 0x34, 0x35, 0x87, 0xD4, 0xB7, 0x77, 0xBD, 0xBD, 0x94, 0xA3, 0xC0, 0xC8, 0x1F, 0xF4, 0xBB, 0x4E, 0x1F, 0x77, 0xFC, 0xF7, 0xBF, 0x69, 0x57, 0xAD, 0x8E, 0xD5, 0x5F, 0x42, 0xE8, 0x1C, 0xC5, 0x69, 0xE3, 0x16, 0x61, 0xB0, 0x4C, 0xB9, 0x6E, 0xB0, 0xCC, 0xAC, 0x08, 0xF6, 0xDA, 0x72, 0xD0, 0xEA, 0x0B, 0xDA, 0xFB, 0x45, 0x05, 0x3F, 0xBA, 0x51, 0x43, 0x15, 0x8F, 0xF0, 0x11, 0x07, 0x07, 0x9D, 0x8A, 0xA9, 0x9E, 0xA3, 0x5B, 0x75, 0x6B, 0x97, 0x47, 0xA0, 0x5F, 0x7C, 0xAB, 0x9F, 0xB7, 0x84, 0x54, 0x3F, 0x6F, 0x09, 0xB9, 0xDF, 0xD2, 0x11, 0x5A, 0xCC, 0x49, 0xA0, 0x0D, 0x46, 0x45, 0xDA, 0x20, 0xFF, 0x9F, 0xDC, 0x7B, 0xA0, 0x3B, 0xBE, 0x31, 0xE5, 0x7D, 0xCE, 0x49, 0x5F, 0xF4, 0x3B, 0x4E, 0x3D, 0x1F, 0x5D, 0xE5, 0xDD, 0xFB, 0x8C, 0xB5, 0x84, 0x7A, 0x2B, 0x2F, 0xD7, 0xEA, 0x8B, 0x8D, 0x26, 0xBE, 0xEE, 0xC1, 0xA9, 0x72, 0x88, 0xA3, 0x9B, 0xDF, 0xE4, 0xC5, 0xB7, 0xFA, 0x76, 0x06, 0x8B, 0x6F, 0x88, 0x47, 0x60, 0xE3, 0xCB, 0xB6, 0x90, 0xC3, 0x1C, 0x05, 0xF2, 0xE3, 0x6C, 0x50, 0xF0, 0x47, 0xDF, 0xD1, 0x95, 0xD5, 0x29, 0x28, 0xB7, 0x38, 0x26, 0x5D, 0xB5, 0x39, 0x7F, 0x2D, 0x1F, 0x79, 0xD2, 0x4C, 0x58, 0x8C, 0x7D, 0xEF, 0xDF, 0x32, 0x58, 0x66, 0x94, 0x8F, 0xF6, 0xCE, 0x0B, 0x3D, 0xCA, 0xB1, 0x3D, 0x1A, 0x10, 0x5F, 0xF5, 0x08, 0xF1, 0xF5, 0x3F, 0xBA, 0xF9, 0x16, 0x8F, 0xA0, 0xD5, 0xD7, 0x23, 0xAF, 0xFA, 0x79, 0x4B, 0xC8, 0x97, 0x2F, 0xDA, 0x26, 0x5C, 0xE1, 0x28, 0x30, 0x3A, 0xD7, 0x06, 0x05, 0x5F, 0xD8, 0xA0, 0xA0, 0x72, 0x40, 0x20, 0xBF, 0xDC, 0x62, 0x0F, 0xBB, 0xE6, 0x70, 0x7E, 0x31, 0x62, 0xFF, 0x67, 0xB3, 0xD7, 0x10, 0xAC, 0x25, 0xEC, 0x86, 0xEB, 0xA5, 0x11, 0x6F, 0xE4, 0xB7, 0x6E, 0xA3, 0x9D, 0xFB, 0xF9, 0x4D, 0x5E, 0x38, 0xCC, 0xFD, 0x02, 0x7B, 0xBF, 0x80, 0xF8, 0xBE, 0x68, 0x0D, 0xF5, 0x15, 0x58, 0xFF, 0xA2, 0x75, 0xC2, 0x2F, 0x38, 0x56, 0x61, 0xFE, 0x7A, 0x1B, 0x14, 0x5C, 0x73, 0xBF, 0xB2, 0x2C, 0xEF, 0x87, 0x82, 0x72, 0xAB, 0x83, 0x57, 0x6E, 0xB1, 0xCF, 0xB8, 0xE1, 0x84, 0xF7, 0xA8, 0x11, 0xCB, 0x87, 0xED, 0xB3, 0x0E, 0xD6, 0x12, 0x32, 0x64, 0xF5, 0xF5, 0x5F, 0x7D, 0xAF, 0x36, 0x38, 0x1D, 0xB4, 0xFA, 0x06, 0x09, 0x1C, 0xA6, 0xF7, 0xEB, 0x1C, 0x54, 0x3C, 0x02, 0x04, 0x86, 0xFC, 0x35, 0x47, 0x81, 0xBC, 0x75, 0x6E, 0x81, 0x95, 0x03, 0xA3, 0xAB, 0xE8, 0x1B, 0x16, 0x3B, 0xBF, 0xDC, 0x09, 0x47, 0x7E, 0x59, 0x64, 0xEA, 0xDF, 0xFE, 0x84, 0xB5, 0x4C, 0x1C, 0xE8, 0xFD, 0xCC, 0x23, 0xF4, 0x7E, 0x41, 0x06, 0xA7, 0xF8, 0x28, 0xDE, 0xBA, 0x69, 0x86, 0x7E, 0xEB, 0x16, 0x7C, 0x70, 0xEA, 0x89, 0x6F, 0xD0, 0xE6, 0x39, 0x34, 0x98, 0xC0, 0x5F, 0x72, 0x5D, 0x81, 0xE9, 0x36, 0x28, 0xF8, 0xBF, 0x9E, 0x53, 0x88, 0xEB, 0xAD, 0x5B, 0x74, 0xB9, 0xC5, 0x1E, 0x53, 0xE1, 0x84, 0x9D, 0x3D, 0x43, 0x8D, 0x48, 0x9D, 0x4E, 0xDC, 0xE2, 0x70, 0x3E, 0x65, 0x7B, 0xFA, 0x52, 0xEF, 0xB2, 0x96, 0xF0, 0x72, 0x2E, 0xF1, 0x25, 0xC6, 0x72, 0x74, 0xF3, 0xAE, 0xBE, 0xF0, 0x21, 0x06, 0x07, 0xC1, 0xE3, 0x1B, 0x70, 0xF6, 0x0D, 0x16, 0x5F, 0xD7, 0x1E, 0xD8, 0x1A, 0xF2, 0x19, 0xC7, 0x3D, 0x70, 0xF6, 0x5C, 0x1B, 0x8C, 0xF9, 0x67, 0xF7, 0x4B, 0xF3, 0x72, 0xD7, 0x95, 0x0D, 0x5E, 0xB9, 0xC5, 0x3E, 0xF3, 0x86, 0x13, 0x3E, 0xA0, 0x9D, 0x50, 0xDF, 0xEF, 0x70, 0xBE, 0x30, 0xD8, 0x1D, 0x57, 0xD1, 0x7E, 0xC7, 0xFF, 0xE8, 0xB0, 0xDA, 0xF7, 0x3E, 0xB3, 0xF4, 0xE7, 0x7C, 0x69, 0xEE, 0x7F, 0xAF, 0xC6, 0x68, 0x89, 0xAA, 0x30, 0x58, 0xA2, 0x2A, 0xC6, 0xA5, 0x78, 0x8C, 0x30, 0x38, 0x1D, 0xFC, 0xD6, 0x8D, 0xDB, 0xD1, 0x2D, 0xA0, 0xFA, 0x7A, 0x68, 0x78, 0xD1, 0x3A, 0xE1, 0x2C, 0x47, 0x81, 0x11, 0x13, 0x6D, 0x90, 0xFF, 0x2B, 0x1B, 0x14, 0xD4, 0x5A, 0xBD, 0x02, 0x05, 0x15, 0x2E, 0x89, 0xCB, 0xEF, 0x98, 0x6D, 0x49, 0xB7, 0x5D, 0xD7, 0xD5, 0xA6, 0x5C, 0xED, 0xED, 0x0F, 0xBD, 0xDA, 0x6B, 0x9D, 0x74, 0xD5, 0x64, 0x0D, 0xBB, 0xDE, 0x6B, 0x9D, 0x71, 0xC3, 0xAF, 0xEF, 0x0B, 0x88, 0x6F, 0xD0, 0x0B, 0x93, 0x06, 0x6E, 0x83, 0x53, 0xF5, 0x88, 0x83, 0xD3, 0xA9, 0x7E, 0x02, 0xDB, 0x5C, 0xEF, 0x3D, 0x7C, 0x8A, 0xC7, 0xB0, 0xF1, 0xAD, 0x7E, 0xDE, 0x12, 0x72, 0xBF, 0xB9, 0x2D, 0x74, 0x3B, 0xC7, 0x08, 0x47, 0x00, 0x1B, 0xE4, 0x7F, 0xD4, 0x0F, 0x05, 0xF7, 0x02, 0xEF, 0xBC, 0x98, 0x6C, 0x11, 0x37, 0x5C, 0x44, 0x97, 0xBB, 0x2E, 0x4C, 0xF2, 0x2B, 0x4C, 0x56, 0xBE, 0xE7, 0xC2, 0x64, 0xC5, 0x98, 0x2E, 0x4C, 0x1A, 0x87, 0xE8, 0xFD, 0x74, 0x23, 0xF7, 0x7E, 0xDE, 0x2B, 0x1B, 0xC8, 0x50, 0x47, 0x37, 0x9F, 0xC1, 0x69, 0xF7, 0xF0, 0x47, 0xB7, 0x97, 0x6D, 0x83, 0xE4, 0xD5, 0x34, 0xB5, 0x84, 0x34, 0xB6, 0x76, 0x84, 0xE6, 0x70, 0x14, 0x18, 0x05, 0xFA, 0x21, 0x6F, 0x4F, 0x3F, 0x14, 0xD4, 0x0D, 0x16, 0xE8, 0x73, 0xDF, 0x2F, 0xE0, 0xC6, 0x69, 0xF0, 0x0B, 0x93, 0xC3, 0x0C, 0x4E, 0xD9, 0xB1, 0xBF, 0x34, 0x0F, 0x72, 0xE3, 0x6A, 0x90, 0xC0, 0xC0, 0x93, 0x47, 0xC7, 0xC8, 0x47, 0xB7, 0x40, 0x6E, 0x3D, 0x6F, 0x09, 0xB9, 0xD3, 0xD4, 0x3C, 0x61, 0x31, 0xB7, 0x08, 0x3B, 0x23, 0x81, 0xCD, 0x19, 0x25, 0xB2, 0x3A, 0x05, 0x77, 0xFD, 0x6F, 0x5C, 0xF9, 0x0A, 0xE4, 0xF9, 0xDF, 0x38, 0x1D, 0x69, 0xF5, 0x05, 0x56, 0x5F, 0x03, 0xF7, 0xC1, 0x69, 0xF0, 0xC1, 0xC1, 0xC8, 0x83, 0xD3, 0x96, 0x20, 0xC5, 0x63, 0x88, 0xF8, 0xDE, 0x79, 0xD1, 0x1A, 0xF2, 0x1F, 0x2D, 0x1D, 0x13, 0xA6, 0x73, 0x1B, 0x67, 0x39, 0x22, 0x81, 0xCD, 0x31, 0x53, 0xE0, 0x7A, 0x69, 0x2E, 0xA8, 0x0C, 0x7E, 0x61, 0xF2, 0xD5, 0xEE, 0x3B, 0xD3, 0x1C, 0x8E, 0x6E, 0x9E, 0xD6, 0x45, 0x8D, 0x0D, 0xBE, 0xB2, 0xA1, 0x18, 0x4D, 0xF1, 0xF0, 0x08, 0x1C, 0xBE, 0x78, 0x54, 0x3F, 0x6F, 0x09, 0xA9, 0x6F, 0x6E, 0x0F, 0xFD, 0xAB, 0x4E, 0xAE, 0xF3, 0x40, 0x57, 0x84, 0xA3, 0xDE, 0xEA, 0x73, 0xF0, 0x7E, 0x6B, 0xB1, 0x0B, 0x6E, 0x0F, 0x5E, 0x7D, 0x83, 0xE3, 0x6B, 0x18, 0x2E, 0xBE, 0xA3, 0xB9, 0xB2, 0xA1, 0x1B, 0x29, 0xBE, 0xC3, 0x0D, 0x4E, 0xA7, 0x0D, 0xF7, 0xD2, 0x7C, 0xAC, 0xF1, 0xAD, 0x6E, 0x6A, 0x0E, 0xB9, 0xFF, 0xB2, 0x7D, 0xC2, 0xF6, 0x96, 0x4E, 0x8E, 0x13, 0x69, 0xAB, 0x23, 0x12, 0x58, 0x1D, 0x91, 0xA0, 0xCF, 0xC1, 0xDF, 0x6F, 0xB1, 0xC7, 0xD4, 0x59, 0xEC, 0x82, 0xF2, 0x41, 0xF1, 0xF5, 0x91, 0xD7, 0x3B, 0xC6, 0xF8, 0x0E, 0x2A, 0x1E, 0x9C, 0x06, 0xA7, 0xA3, 0x9B, 0xFB, 0xB5, 0x0D, 0x3F, 0xF7, 0x1B, 0x6A, 0xFF, 0xBB, 0xFB, 0xBC, 0x75, 0xC2, 0xE2, 0xE7, 0x6D, 0x5C, 0x05, 0x3A, 0xF9, 0xC0, 0xEA, 0xE4, 0x83, 0x7E, 0xE7, 0xAC, 0x04, 0x8B, 0x5D, 0x70, 0xDB, 0xEC, 0xFA, 0xB9, 0x42, 0xC5, 0xA8, 0x6F, 0xDB, 0x5B, 0xBE, 0xB9, 0xB9, 0x9F, 0x27, 0xBE, 0x7E, 0x02, 0x83, 0x1E, 0xDD, 0xA6, 0x70, 0x29, 0x1E, 0xD5, 0xCF, 0x5B, 0x42, 0xEA, 0x9A, 0x5E, 0x4E, 0xF8, 0xFD, 0xD3, 0xA6, 0x1F, 0xFD, 0xE8, 0xD9, 0xF3, 0x1F, 0x71, 0x8C, 0xB0, 0x93, 0xEF, 0x86, 0xF7, 0x43, 0x8B, 0x9D, 0xFF, 0xB9, 0xD9, 0x26, 0xB8, 0x3D, 0x9C, 0xC0, 0x57, 0x8D, 0x2F, 0x39, 0xC4, 0x8D, 0xAB, 0xE1, 0x06, 0xA7, 0x0A, 0x74, 0xF0, 0x4B, 0xA3, 0xB1, 0x0C, 0x4E, 0x87, 0x28, 0x1E, 0x55, 0xCF, 0x5B, 0x42, 0x1E, 0x34, 0xB7, 0xBF, 0xBD, 0xF3, 0x45, 0xCB, 0x8F, 0xC0, 0x8B, 0x96, 0x1F, 0x71, 0x5D, 0x81, 0x73, 0xBC, 0xF4, 0x39, 0x66, 0x15, 0x9B, 0x6D, 0x82, 0xBA, 0xB1, 0xC4, 0xF7, 0x1B, 0x1B, 0x9C, 0x06, 0xB9, 0xF3, 0x32, 0x9A, 0xC9, 0x8B, 0x67, 0x74, 0x35, 0x8A, 0xF8, 0xDE, 0x6E, 0x6A, 0x0E, 0xA9, 0xEA, 0x54, 0xBC, 0x2D, 0x50, 0x68, 0xDE, 0x06, 0xDD, 0x6A, 0x8E, 0x11, 0xB6, 0xC1, 0x08, 0x2F, 0xFD, 0x30, 0x22, 0xCC, 0x64, 0x13, 0xFC, 0xBB, 0xC9, 0x26, 0xA8, 0x09, 0xB6, 0xFA, 0x02, 0x9B, 0x67, 0xF6, 0x55, 0xC6, 0xF6, 0x63, 0x9D, 0xBC, 0x0C, 0x2A, 0x1E, 0x61, 0x83, 0xE7, 0x7E, 0x63, 0x8B, 0xEF, 0xFD, 0xE7, 0xAD, 0x21, 0x17, 0x9A, 0x5A, 0x27, 0x81, 0xE7, 0x6E, 0x38, 0x09, 0xEC, 0x73, 0x44, 0xF9, 0x61, 0xB6, 0xF3, 0x76, 0x98, 0x6C, 0x82, 0x2F, 0x03, 0x7B, 0xBF, 0x5E, 0xEB, 0x50, 0xC5, 0x83, 0x37, 0x86, 0xC9, 0xCB, 0x48, 0x83, 0xD3, 0xC1, 0x37, 0xAE, 0x46, 0x1A, 0x9C, 0x76, 0x74, 0x8F, 0x69, 0x70, 0x3A, 0x50, 0x3C, 0x9A, 0x43, 0x6E, 0xBF, 0x68, 0x79, 0xEB, 0x9D, 0x17, 0xCD, 0x3F, 0x04, 0xCF, 0x5F, 0xFE, 0x10, 0x3C, 0x6F, 0xFE, 0x21, 0x47, 0x81, 0xF6, 0xB9, 0x7E, 0x58, 0x1D, 0x73, 0xC3, 0xCC, 0x36, 0xFE, 0x9F, 0x4C, 0x36, 0xDE, 0xAD, 0x80, 0xDE, 0xAF, 0x62, 0xF4, 0x3F, 0x96, 0x19, 0xC3, 0xE0, 0xF4, 0x55, 0x2F, 0x4C, 0x06, 0xF6, 0x7E, 0x83, 0x06, 0xA7, 0xC1, 0x5B, 0x97, 0x0E, 0xF9, 0xDB, 0x67, 0x30, 0xEC, 0x4D, 0x80, 0xFA, 0xC0, 0xAD, 0x91, 0x76, 0x2E, 0xF0, 0xC3, 0xE1, 0x5C, 0x00, 0xFA, 0x1D, 0xB3, 0xD6, 0x98, 0x6C, 0xD1, 0x5F, 0x9A, 0xAC, 0x03, 0xBF, 0xB6, 0x34, 0x06, 0x0A, 0x1C, 0xF2, 0xB7, 0x6E, 0x43, 0x5C, 0x98, 0x0C, 0xFA, 0x63, 0x19, 0xD7, 0xDC, 0xCF, 0x25, 0x6F, 0x98, 0xF8, 0x6A, 0x86, 0xBB, 0x30, 0x39, 0x5C, 0x7C, 0x83, 0x9F, 0x3C, 0x9A, 0x9A, 0x27, 0x5C, 0x7F, 0xD1, 0xF2, 0x16, 0xAF, 0xAB, 0xFB, 0x2D, 0xD0, 0x29, 0x1F, 0x60, 0xDC, 0xAE, 0xF8, 0xDA, 0x9D, 0xB3, 0xDE, 0x32, 0xD9, 0x78, 0xBF, 0x34, 0x59, 0x79, 0x75, 0x26, 0x2B, 0xAF, 0x3C, 0x58, 0xF5, 0x1D, 0xEE, 0xB7, 0x6E, 0x3A, 0x63, 0xD4, 0x4D, 0x72, 0x94, 0x17, 0x26, 0xB1, 0x91, 0x8E, 0x6E, 0x81, 0xD5, 0x77, 0x88, 0xDE, 0xAF, 0x55, 0x3E, 0xAA, 0xC9, 0x4B, 0xCD, 0x8B, 0xD6, 0x90, 0xFB, 0x2F, 0xDB, 0x26, 0x14, 0x7D, 0xF5, 0xEC, 0x4D, 0xF0, 0xE8, 0x89, 0x3F, 0x9C, 0x04, 0x9A, 0xED, 0xBC, 0x21, 0x98, 0x19, 0x63, 0xEE, 0x8F, 0xBE, 0x6E, 0xB2, 0xF2, 0x6B, 0x7A, 0x2C, 0x63, 0x99, 0xBC, 0xCC, 0xBC, 0x49, 0x1B, 0x66, 0x56, 0x92, 0xEC, 0x00, 0x84, 0x7E, 0xA6, 0xAB, 0xFA, 0x32, 0x51, 0x95, 0x18, 0x13, 0x55, 0x89, 0xD1, 0x2E, 0x50, 0x2A, 0xB2, 0x12, 0x25, 0x23, 0x2B, 0x11, 0x22, 0xB2, 0x12, 0x21, 0x22, 0x2A, 0x35, 0x58, 0x44, 0x95, 0x1A, 0x8D, 0xA8, 0x56, 0xA1, 0x11, 0xD5, 0x2A, 0x74, 0x46, 0xB5, 0x02, 0x71, 0xA3, 0x09, 0xAF, 0xEE, 0x56, 0x87, 0x57, 0xCB, 0x55, 0xE1, 0xD5, 0x72, 0x65, 0x78, 0x75, 0x97, 0x62, 0x5A, 0x75, 0x97, 0x72, 0x7A, 0x75, 0x47, 0x77, 0x58, 0x75, 0x9B, 0x3C, 0xAC, 0xA6, 0x4D, 0x3E, 0xAD, 0xA6, 0xB5, 0x2B, 0xAC, 0xA6, 0xA5, 0x73, 0x6A, 0x4D, 0x4B, 0xC7, 0xD4, 0x9A, 0xE6, 0xF6, 0x29, 0x35, 0xCD, 0xED, 0x53, 0x6A, 0x5E, 0xB4, 0x4E, 0x76, 0x33, 0xA5, 0xE6, 0x79, 0xCB, 0x94, 0xEA, 0x17, 0x6D, 0x53, 0x1E, 0x3E, 0x6F, 0x9E, 0xF4, 0x59, 0x47, 0xE7, 0x84, 0x37, 0xDA, 0x3B, 0xDE, 0x06, 0x81, 0x70, 0x13, 0xE8, 0x88, 0x0E, 0x4A, 0x9F, 0x33, 0x02, 0xD8, 0x9C, 0x33, 0x72, 0x7B, 0xAD, 0x73, 0x1B, 0x8C, 0xE6, 0xD9, 0x35, 0x06, 0xF3, 0x9C, 0x6A, 0x83, 0x65, 0x4E, 0xB5, 0xD1, 0x32, 0xA7, 0xDA, 0x60, 0x9E, 0x53, 0xCD, 0x9A, 0xE6, 0x54, 0xB3, 0xA6, 0xD9, 0xD5, 0xAC, 0x69, 0x76, 0xB5, 0xBE, 0x67, 0x76, 0xB5, 0xBE, 0xD7, 0xFD, 0xEC, 0x99, 0x55, 0x4D, 0x1B, 0x66, 0xD5, 0x50, 0x86, 0x59, 0x35, 0x14, 0xEB, 0x82, 0xD4, 0xC7, 0xD4, 0x10, 0xFA, 0x98, 0x1A, 0x42, 0x17, 0x53, 0x83, 0x33, 0x6E, 0x68, 0x41, 0x0D, 0x46, 0x0B, 0x6A, 0x30, 0x4A, 0x50, 0x83, 0x92, 0x31, 0x35, 0x28, 0xC9, 0xAF, 0x41, 0x08, 0x7E, 0x8D, 0x06, 0xE7, 0xDF, 0x52, 0xE3, 0xBC, 0xDB, 0x2A, 0xCC, 0x0D, 0xCA, 0xBB, 0xAD, 0xD4, 0xF2, 0x6E, 0x2B, 0xB5, 0xD1, 0xB7, 0x95, 0x1A, 0xDE, 0xED, 0x6E, 0xF5, 0xCC, 0xDB, 0x72, 0xD5, 0xCC, 0xDB, 0x72, 0x55, 0xF4, 0xED, 0x2E, 0x65, 0xD4, 0xED, 0x0E, 0x45, 0x54, 0x6D, 0x7B, 0xB7, 0x8B, 0xB6, 0xAE, 0xC8, 0xDA, 0xD6, 0xCE, 0x08, 0x2F, 0xCD, 0xED, 0x33, 0x6A, 0x9B, 0xDB, 0x23, 0x6A, 0x9B, 0xDB, 0x23, 0x6E, 0x37, 0xB7, 0x47, 0xDC, 0x6F, 0xED, 0x8A, 0xB8, 0xFA, 0x75, 0xD3, 0xA4, 0xA8, 0x2E, 0xF9, 0x04, 0x20, 0xEF, 0x1E, 0x0C, 0x27, 0x81, 0x24, 0xC3, 0x0F, 0x0A, 0xA5, 0xE3, 0x01, 0x92, 0x89, 0x06, 0x06, 0xD3, 0xDC, 0xC3, 0x3D, 0x7D, 0x8B, 0xBE, 0x32, 0x58, 0xDE, 0xBD, 0x65, 0xB0, 0xBC, 0x7B, 0xCB, 0xE8, 0x7E, 0xB2, 0x96, 0x77, 0x6E, 0x19, 0xCC, 0x0B, 0x6F, 0xB1, 0xA6, 0x77, 0x6E, 0xE9, 0x7B, 0x5C, 0xB0, 0x3D, 0x0B, 0x6F, 0xE9, 0x7B, 0x16, 0xDE, 0xA6, 0x8D, 0x0B, 0x6F, 0xD3, 0x86, 0x85, 0xB5, 0xB4, 0x61, 0x61, 0x2D, 0xCD, 0x2E, 0xAC, 0x25, 0xF5, 0x0B, 0x6A, 0x09, 0x37, 0xA4, 0x6E, 0x41, 0x2D, 0xC9, 0x2C, 0xA8, 0x25, 0x99, 0xF9, 0xB5, 0x38, 0x35, 0xBF, 0x16, 0x73, 0x83, 0x52, 0xF3, 0x6A, 0x11, 0x72, 0x5E, 0xAD, 0x86, 0x98, 0x77, 0x47, 0x4B, 0xCC, 0xBD, 0xA3, 0xC6, 0xDC, 0xA0, 0x73, 0xEF, 0xA8, 0x90, 0x39, 0x77, 0x54, 0xC8, 0xDC, 0x3B, 0x4A, 0xED, 0x9C, 0x3B, 0x0A, 0xCD, 0x9C, 0x3B, 0x0A, 0xF5, 0x9C, 0x3B, 0xDD, 0xEA, 0xD9, 0x77, 0xBA, 0x94, 0xB3, 0xEE, 0x76, 0x2A, 0x67, 0xDD, 0xED, 0x50, 0xC6, 0xDC, 0xED, 0x50, 0xC4, 0xDC, 0xED, 0xE8, 0x16, 0xDC, 0x6D, 0x97, 0xBB, 0x68, 0x93, 0xF3, 0xEF, 0xB6, 0x76, 0x7A, 0x10, 0x34, 0xB4, 0x75, 0x0A, 0x1A, 0xEE, 0x3F, 0x9A, 0x2C, 0xBC, 0x7B, 0xEF, 0xC7, 0xA0, 0xBE, 0xE1, 0xC7, 0xE0, 0xCB, 0x20, 0x70, 0x12, 0x88, 0x60, 0x82, 0x21, 0xD1, 0xA2, 0x02, 0x60, 0x32, 0x45, 0xBE, 0x65, 0xEE, 0x7F, 0xE7, 0x67, 0xC6, 0xBE, 0xB8, 0xC7, 0x46, 0xCB, 0x92, 0x5A, 0xA3, 0x65, 0xC9, 0x1D, 0x83, 0x79, 0xC9, 0x1D, 0x83, 0x79, 0xF1, 0x1D, 0xD6, 0xBC, 0xF8, 0x0E, 0xDB, 0xEB, 0xCB, 0xFB, 0x77, 0x74, 0xC6, 0xF7, 0xEF, 0xD2, 0x06, 0x37, 0xC6, 0xF7, 0xEF, 0xD2, 0x86, 0xC5, 0x77, 0x29, 0xFD, 0xFB, 0xF7, 0x48, 0x0F, 0x3A, 0x0F, 0xEF, 0xDD, 0x23, 0xE8, 0xF7, 0xEE, 0xE1, 0xF4, 0x7B, 0xF7, 0x70, 0x7A, 0xD1, 0x3D, 0x94, 0x5C, 0x74, 0x0F, 0x21, 0x17, 0xDD, 0x43, 0x88, 0x45, 0x75, 0x5A, 0xE2, 0x9D, 0x3A, 0x0D, 0xF1, 0x4E, 0x9D, 0x06, 0x7F, 0xB7, 0x4E, 0x83, 0x2D, 0xAC, 0x53, 0xA3, 0x0B, 0xEB, 0xD4, 0xE8, 0x3B, 0x75, 0x4A, 0xED, 0xC2, 0x3A, 0xA5, 0x66, 0x61, 0x9D, 0x52, 0xBB, 0xB0, 0x4E, 0xA1, 0x99, 0x5F, 0x27, 0x57, 0xCF, 0xAF, 0x97, 0xAB, 0x17, 0xD4, 0x77, 0xA9, 0xE6, 0xD7, 0x77, 0x29, 0xE7, 0xD7, 0x77, 0x2A, 0xE6, 0xD7, 0x77, 0x76, 0xBB, 0x68, 0x97, 0xCF, 0xAB, 0x6F, 0xEF, 0x9A, 0x57, 0xDF, 0xDE, 0x35, 0xAF, 0xA1, 0x5D, 0x3E, 0xEF, 0x59, 0x47, 0x37, 0xBF, 0xA0, 0xF6, 0xEE, 0x8F, 0x41, 0x65, 0xF5, 0x5B, 0xA0, 0xAA, 0xE6, 0x87, 0x41, 0xF9, 0x46, 0x04, 0xF6, 0x9A, 0x22, 0x80, 0xD5, 0x31, 0x7B, 0x62, 0x8F, 0x39, 0xE1, 0xF7, 0x46, 0x4B, 0xE2, 0x57, 0x46, 0xB3, 0xB0, 0xCE, 0x60, 0x16, 0xD6, 0x19, 0xCD, 0x09, 0x75, 0x06, 0x73, 0x42, 0x1D, 0xDB, 0x93, 0x50, 0xC7, 0xF6, 0x08, 0xEB, 0xD8, 0xDE, 0x84, 0x3A, 0xB6, 0x27, 0xA1, 0x5E, 0x67, 0x4C, 0xF8, 0x92, 0xF1, 0x81, 0x36, 0x24, 0xD4, 0x53, 0x6C, 0x7C, 0x3D, 0xA9, 0x8F, 0xAF, 0xA7, 0xF4, 0xF1, 0xF5, 0xA4, 0x2E, 0xBE, 0x9E, 0xD2, 0xC5, 0xD5, 0x93, 0xBA, 0xB8, 0x7A, 0x82, 0x89, 0xAB, 0x27, 0xE8, 0xB8, 0x7A, 0x9C, 0x8A, 0xAD, 0xC7, 0xA8, 0xD8, 0x7A, 0x84, 0x8C, 0xFD, 0x12, 0x25, 0x63, 0xBF, 0xD4, 0x12, 0x4B, 0x1A, 0xB4, 0x44, 0x6C, 0x83, 0x16, 0x5F, 0xD2, 0xA0, 0xC1, 0x5C, 0xA8, 0xD1, 0x25, 0x0D, 0x6A, 0x64, 0x71, 0x83, 0x5A, 0xBB, 0xB8, 0x41, 0x8D, 0xBC, 0xDF, 0xA0, 0xD4, 0xBE, 0xDF, 0xD0, 0xAD, 0x79, 0xBF, 0xB1, 0x5B, 0xF3, 0x5E, 0xA3, 0x5C, 0xB5, 0xA8, 0xB1, 0x5B, 0xB5, 0xA8, 0x51, 0xAE, 0x74, 0xD1, 0xA5, 0x5C, 0xD4, 0xD8, 0xD1, 0xFD, 0xAE, 0x9B, 0x45, 0x2F, 0xBB, 0x14, 0x0B, 0x0E, 0x75, 0x29, 0xA3, 0x41, 0xDD, 0x97, 0x13, 0xC0, 0xAD, 0xDA, 0x1F, 0x83, 0xDB, 0x77, 0x82, 0xC3, 0x2D, 0xC2, 0x94, 0x60, 0x48, 0x08, 0x4A, 0x00, 0x0C, 0x3D, 0xD1, 0xA0, 0xC7, 0x1C, 0x03, 0x58, 0xE3, 0x82, 0xF9, 0x46, 0x73, 0x4A, 0x9D, 0xC1, 0x9C, 0xFA, 0xD0, 0x68, 0x4E, 0x69, 0x30, 0x9A, 0x53, 0x1A, 0x0C, 0xBD, 0x29, 0x0D, 0x6C, 0x4F, 0x4A, 0x83, 0xBE, 0x27, 0xA5, 0x81, 0xED, 0x4D, 0x69, 0xD0, 0xF7, 0x24, 0x37, 0x32, 0xC6, 0xE4, 0x46, 0xC6, 0x98, 0xD4, 0xA8, 0x33, 0xBA, 0xBE, 0xD3, 0x86, 0xA4, 0x46, 0x9A, 0x4D, 0x6A, 0xA4, 0xF5, 0x49, 0x8D, 0xB4, 0x3E, 0xB9, 0x91, 0xD6, 0x25, 0x35, 0xD2, 0xFA, 0xC4, 0x46, 0x52, 0x97, 0xD8, 0x48, 0x30, 0x49, 0xF7, 0x09, 0x26, 0xE9, 0x3E, 0x4E, 0x27, 0xDE, 0xC7, 0xE8, 0xC4, 0xFB, 0x18, 0x95, 0x78, 0x1F, 0xA3, 0x84, 0xF7, 0x11, 0x52, 0xF8, 0x00, 0x25, 0x84, 0x0F, 0x10, 0x22, 0xE1, 0x01, 0x82, 0x27, 0x3C, 0x40, 0xF0, 0xF8, 0x07, 0x5A, 0x2C, 0xFE, 0x81, 0x06, 0x75, 0xA1, 0x46, 0xE2, 0x1E, 0x28, 0xB5, 0x71, 0x0F, 0x94, 0x9A, 0xB8, 0x87, 0x0A, 0x4D, 0xEC, 0xC3, 0x6E, 0x75, 0xEC, 0x43, 0x85, 0x3A, 0xF6, 0x61, 0xB7, 0x6A, 0xC9, 0x43, 0xB9, 0x6A, 0xC9, 0x43, 0xB9, 0x72, 0xC9, 0xC3, 0x4E, 0xC5, 0xE2, 0x87, 0x5D, 0x8A, 0xD8, 0x97, 0x9D, 0xF2, 0x85, 0x9F, 0xAB, 0xD5, 0x31, 0x6F, 0x6A, 0x34, 0xB3, 0x80, 0x4A, 0x15, 0x33, 0x2C, 0x9C, 0x04, 0x1A, 0x4D, 0xEF, 0x0E, 0x49, 0x8F, 0xE9, 0x5D, 0x60, 0xE8, 0x75, 0x61, 0xEC, 0x7D, 0x17, 0xF4, 0xF6, 0xA5, 0xEE, 0x34, 0x9A, 0x57, 0xB4, 0x18, 0xCD, 0xCB, 0x1F, 0x18, 0xCD, 0xCB, 0x1F, 0x18, 0x7A, 0x56, 0x3C, 0x30, 0xF4, 0xAE, 0x78, 0xC0, 0xF6, 0xAE, 0x78, 0xC0, 0xF6, 0x2C, 0x7F, 0xA0, 0x37, 0x2E, 0x7B, 0xA0, 0x33, 0x2E, 0x7B, 0xA8, 0x33, 0x2E, 0x7F, 0xA8, 0x33, 0x2E, 0x7F, 0xC8, 0x18, 0x97, 0x3F, 0xA4, 0x0D, 0xA9, 0x0F, 0x69, 0xD6, 0x8D, 0xDE, 0xC3, 0xD2, 0x87, 0x94, 0x6E, 0xE9, 0x43, 0x82, 0x49, 0x7D, 0x48, 0x30, 0x4B, 0x1F, 0x12, 0xF4, 0xD2, 0x87, 0x18, 0xBD, 0xF4, 0x11, 0x46, 0xA5, 0x3E, 0xC2, 0xA8, 0xA5, 0x8F, 0x50, 0x6A, 0xE9, 0x23, 0x94, 0x4C, 0x79, 0x84, 0xE2, 0x29, 0x8F, 0x10, 0x3C, 0xE5, 0x11, 0x82, 0x27, 0x3F, 0xD2, 0x62, 0xC9, 0x8F, 0x34, 0x58, 0xD2, 0x23, 0x0D, 0x96, 0xF4, 0x48, 0x8D, 0x24, 0x3D, 0x52, 0x6A, 0x93, 0x1E, 0x2B, 0xB5, 0x49, 0x8F, 0x95, 0x9A, 0xC4, 0xC7, 0x4A, 0x75, 0xE2, 0x63, 0x85, 0x5A, 0xE8, 0x45, 0xAE, 0x4C, 0x78, 0x2C, 0x57, 0x0A, 0x9F, 0x75, 0x2B, 0x13, 0x1E, 0x75, 0xC9, 0x67, 0x2D, 0x54, 0xA9, 0x05, 0x40, 0xAD, 0x9E, 0x05, 0xD4, 0x9A, 0xE1, 0xE1, 0x78, 0x12, 0x49, 0x1D, 0x35, 0xE6, 0xFE, 0xA4, 0x50, 0xA3, 0x69, 0xF9, 0x75, 0x83, 0x29, 0xE3, 0x85, 0xC1, 0x94, 0xFE, 0x98, 0xED, 0x75, 0x61, 0xE8, 0x4D, 0x7F, 0x6C, 0xE8, 0x4D, 0x7B, 0xAC, 0x37, 0xA6, 0x7D, 0xA5, 0x33, 0xA4, 0x7D, 0xA5, 0x33, 0xBA, 0x60, 0x0C, 0x69, 0x5F, 0x31, 0x86, 0x95, 0x5F, 0xD1, 0xEC, 0xCA, 0xAF, 0x68, 0xFD, 0x00, 0x94, 0x7E, 0xC5, 0x57, 0xA4, 0xCE, 0x0D, 0xB3, 0xE2, 0x2B, 0x82, 0x5E, 0xF1, 0x15, 0x4E, 0xAD, 0x78, 0x82, 0x53, 0x2B, 0x9E, 0x60, 0xD4, 0x72, 0x17, 0xE4, 0xB2, 0x27, 0x28, 0xE1, 0x02, 0xC1, 0x97, 0x3D, 0xD1, 0x62, 0xA9, 0x4F, 0xB4, 0x58, 0xEA, 0x13, 0x04, 0x4B, 0x7D, 0xA2, 0x46, 0x53, 0x9F, 0xA8, 0x90, 0xD4, 0xA7, 0x6A, 0x34, 0xF5, 0xA9, 0x4A, 0xBB, 0xF4, 0xA9, 0x52, 0x93, 0xF2, 0x54, 0xA9, 0x49, 0x76, 0x93, 0xF2, 0x54, 0xA1, 0x4A, 0x7A, 0xDA, 0xAD, 0x4A, 0x91, 0xAB, 0x34, 0x8B, 0xCF, 0x28, 0xD5, 0x02, 0xA0, 0x50, 0xC5, 0x8C, 0x0A, 0x4E, 0x02, 0x7B, 0xCD, 0xC2, 0x51, 0xD3, 0x63, 0x8E, 0x07, 0x46, 0x53, 0xF2, 0x46, 0x83, 0x29, 0xBB, 0xD3, 0xD0, 0x9B, 0xF5, 0xC4, 0x03, 0xDB, 0x93, 0xF9, 0x84, 0xED, 0xC9, 0x7C, 0xAA, 0x33, 0xF8, 0x60, 0xCC, 0x7C, 0xAA, 0x63, 0xD3, 0x9F, 0x32, 0x6C, 0xC6, 0x53, 0x5A, 0xEF, 0x4B, 0xFA, 0x53, 0x4A, 0x9F, 0xFE, 0x94, 0x62, 0xD2, 0x9F, 0x52, 0xBA, 0xF4, 0xA7, 0x24, 0x93, 0xFE, 0x94, 0xA0, 0xD2, 0x9F, 0x11, 0x54, 0xFA, 0x33, 0x82, 0x4E, 0x7B, 0x86, 0x53, 0x69, 0xCF, 0x70, 0x32, 0xED, 0x19, 0x4E, 0xAE, 0x7C, 0x86, 0x91, 0x2B, 0x9F, 0xA1, 0xC4, 0xCA, 0xAF, 0x11, 0x62, 0xE5, 0xD7, 0x08, 0xBE, 0xF2, 0x6B, 0x04, 0x5F, 0xF1, 0xB5, 0x16, 0x5B, 0xF1, 0xB5, 0x06, 0x75, 0x83, 0x2C, 0xFF, 0x5A, 0xAD, 0x5D, 0xFE, 0xB5, 0x6A, 0x80, 0x26, 0x95, 0x76, 0x59, 0x93, 0x42, 0xBD, 0xAC, 0x59, 0xA1, 0x5E, 0xFA, 0x58, 0x8D, 0x2C, 0xE2, 0xA9, 0xB5, 0x0B, 0x80, 0x4A, 0xBB, 0x70, 0x54, 0x70, 0x13, 0x68, 0x49, 0x18, 0x03, 0xF1, 0xC0, 0x68, 0x16, 0x86, 0xB1, 0xBD, 0x59, 0x75, 0x6C, 0x8F, 0xB8, 0x85, 0xED, 0x11, 0x7F, 0xCD, 0xF6, 0x88, 0xBF, 0x36, 0xF4, 0x64, 0x7F, 0xAD, 0x37, 0x66, 0x37, 0xE9, 0x0C, 0x6E, 0x8C, 0xD9, 0x4D, 0x3A, 0x36, 0xBB, 0x49, 0xC7, 0x66, 0x35, 0x31, 0x6C, 0x76, 0x13, 0xA3, 0xCF, 0x6E, 0xA2, 0xF5, 0xAE, 0x27, 0xA3, 0xCF, 0x6A, 0xA2, 0x75, 0x59, 0x4D, 0x94, 0x2E, 0xBB, 0x89, 0x64, 0xB2, 0x9A, 0x48, 0x26, 0xAB, 0x89, 0xA0, 0x33, 0x9F, 0x7B, 0xC0, 0xA9, 0xCC, 0xE7, 0x38, 0x99, 0xF1, 0x1C, 0x27, 0xBC, 0xBC, 0xC0, 0x88, 0xF4, 0x17, 0x28, 0xEE, 0x02, 0xC1, 0xD3, 0x5F, 0x68, 0x31, 0x17, 0x1A, 0x34, 0xED, 0x85, 0x06, 0x49, 0x7B, 0xA1, 0xD6, 0xAE, 0x74, 0x81, 0xAC, 0x7C, 0xA9, 0xD2, 0xAC, 0x7C, 0xA1, 0xD2, 0xA4, 0xAB, 0x55, 0xDA, 0xA4, 0xCF, 0xB4, 0xE8, 0x5C, 0x30, 0x16, 0x38, 0x09, 0xD4, 0xF5, 0x2C, 0x1B, 0x1B, 0xC6, 0x54, 0xC0, 0xF6, 0x64, 0x5E, 0x61, 0x7B, 0x72, 0xD4, 0x6C, 0x8F, 0xE4, 0x39, 0x6B, 0x94, 0xBC, 0x60, 0x8D, 0x92, 0x97, 0x3A, 0x83, 0x38, 0x00, 0xC9, 0x4B, 0xC6, 0x20, 0x7E, 0xC9, 0xB0, 0xE2, 0x97, 0x8C, 0xCE, 0x07, 0xBD, 0xEB, 0x49, 0xEB, 0x44, 0x2F, 0x29, 0x46, 0xF4, 0x92, 0x64, 0x44, 0xCD, 0x24, 0x9D, 0xDD, 0x4C, 0xD2, 0xD9, 0x2D, 0x04, 0x9D, 0xDD, 0x82, 0xD3, 0xD9, 0xCD, 0x38, 0x99, 0x35, 0x00, 0x91, 0xD5, 0x8C, 0xE1, 0x2E, 0x50, 0x3C, 0xB3, 0x19, 0xC1, 0x32, 0x5B, 0xDC, 0xB4, 0x6A, 0xD1, 0x8C, 0x16, 0x2D, 0x92, 0xD1, 0xA2, 0x41, 0xD2, 0xBD, 0xA8, 0xB5, 0xE9, 0x6D, 0x6A, 0x4D, 0x86, 0x02, 0x23, 0x96, 0xAC, 0x24, 0xE9, 0x05, 0x80, 0xA4, 0x17, 0x8E, 0x1A, 0x4E, 0x02, 0x0D, 0xBD, 0x19, 0x63, 0x24, 0x1D, 0x18, 0x7A, 0x33, 0xB3, 0x0D, 0x3D, 0xB9, 0x4A, 0x83, 0x51, 0xDA, 0x6A, 0x30, 0x4A, 0x5B, 0xF4, 0xC6, 0x9C, 0x16, 0x9D, 0x21, 0xA7, 0xD5, 0x1F, 0x49, 0x2B, 0xC3, 0xBA, 0xD1, 0xE5, 0xB8, 0x91, 0xB4, 0xD2, 0x8C, 0x2F, 0xE2, 0x56, 0x92, 0x16, 0xB7, 0x79, 0xA1, 0x5C, 0x4F, 0x9C, 0x14, 0xB9, 0x11, 0xB7, 0x61, 0x84, 0xA8, 0x0D, 0xC3, 0xB3, 0xDB, 0x30, 0x3C, 0xBB, 0x0D, 0xC5, 0xB3, 0xDB, 0x50, 0x2C, 0xBB, 0x1D, 0xC5, 0xB2, 0xDA, 0x11, 0x2C, 0xAB, 0x5D, 0x8B, 0x66, 0xB5, 0x6B, 0x91, 0xCC, 0x76, 0x2D, 0x92, 0xE5, 0x26, 0xB3, 0x5D, 0x83, 0x64, 0xA9, 0x34, 0x48, 0xFA, 0x5D, 0x0D, 0x92, 0x1C, 0xAA, 0x41, 0x92, 0x80, 0x06, 0x49, 0x1E, 0x35, 0x9C, 0x04, 0xB2, 0x3D, 0x19, 0x63, 0xC7, 0x98, 0x1E, 0xCE, 0x1A, 0x72, 0x1E, 0x1B, 0x8C, 0xB9, 0x72, 0x83, 0x51, 0xDA, 0xA6, 0x37, 0x48, 0xDB, 0x75, 0x3E, 0x30, 0xAC, 0x1B, 0xBD, 0xB4, 0x9D, 0xD1, 0x4B, 0x3B, 0x18, 0xBD, 0xB4, 0x83, 0xD6, 0xB9, 0x61, 0xA4, 0x1D, 0x34, 0x93, 0xD3, 0x41, 0x33, 0x39, 0x1D, 0x14, 0x9D, 0xD3, 0x41, 0x7A, 0x91, 0x74, 0x90, 0x94, 0x0B, 0x82, 0x14, 0x77, 0x10, 0xA4, 0xB8, 0x93, 0x20, 0x25, 0x9D, 0x38, 0x21, 0xF6, 0x82, 0xE2, 0x22, 0x2F, 0x08, 0x2E, 0xEA, 0x44, 0x30, 0x51, 0x27, 0x82, 0x66, 0x77, 0x6A, 0x91, 0xEC, 0x4E, 0x04, 0xCD, 0xEE, 0xD4, 0x68, 0xB3, 0x3B, 0x35, 0x5A, 0x11, 0xA9, 0x41, 0x56, 0xFC, 0x8D, 0x1A, 0x49, 0x04, 0x6A, 0x24, 0x69, 0x4C, 0x70, 0x6B, 0xA4, 0xD1, 0xC4, 0x31, 0xA3, 0x45, 0x84, 0x6F, 0xD0, 0x4C, 0xD6, 0x9F, 0x0C, 0x86, 0x55, 0x28, 0x6B, 0xC8, 0xED, 0xD4, 0xB3, 0xB9, 0x5D, 0x7A, 0x36, 0xB7, 0x4B, 0xA7, 0x1F, 0x0C, 0xA3, 0xCB, 0xED, 0xD2, 0xE9, 0x72, 0xBB, 0x74, 0x3A, 0x69, 0x17, 0xCD, 0x48, 0xE5, 0xB4, 0x4E, 0x2A, 0xA7, 0x18, 0xA9, 0x9C, 0xA2, 0xA5, 0x72, 0x92, 0x1A, 0x80, 0x20, 0x73, 0xE4, 0x04, 0x95, 0x23, 0x27, 0xC9, 0x1C, 0xD7, 0x77, 0x32, 0x47, 0x4E, 0x10, 0x39, 0x72, 0x9C, 0x90, 0xC8, 0x71, 0x42, 0xD2, 0x8D, 0xE3, 0x92, 0x6E, 0xCC, 0x0D, 0x8A, 0x8B, 0xBB, 0x51, 0x4C, 0xE4, 0x02, 0x15, 0x77, 0xA3, 0x98, 0xB8, 0x1B, 0x45, 0x45, 0xDD, 0x08, 0x22, 0xEA, 0x46, 0x10, 0x31, 0xA3, 0x41, 0x56, 0x6C, 0xD5, 0x68, 0x53, 0x81, 0x46, 0xBB, 0x6C, 0x4C, 0x70, 0x8B, 0x70, 0x4F, 0x2A, 0x07, 0x96, 0x02, 0x83, 0x21, 0xFB, 0x53, 0x3D, 0xBB, 0x8A, 0xD6, 0xB3, 0x79, 0xDD, 0x3A, 0x7D, 0x9E, 0x42, 0xA7, 0xCF, 0x53, 0xE8, 0xDD, 0x4F, 0x9D, 0x3E, 0x57, 0xA1, 0xD3, 0xE7, 0x2A, 0x18, 0x5D, 0x00, 0x4C, 0xAE, 0x82, 0x66, 0x72, 0x15, 0x34, 0x2D, 0x55, 0xD0, 0xB4, 0x54, 0x41, 0xD1, 0x52, 0x25, 0xE9, 0x81, 0x72, 0x41, 0x90, 0x39, 0x03, 0x10, 0x39, 0x4A, 0x9C, 0x90, 0x28, 0x71, 0xDC, 0x05, 0x86, 0x8B, 0x55, 0x18, 0x2E, 0x51, 0x61, 0x98, 0x0B, 0x14, 0x15, 0xA9, 0x50, 0x54, 0xAC, 0x42, 0x31, 0xB1, 0x0A, 0x41, 0x45, 0x2A, 0x04, 0x15, 0x69, 0x50, 0x54, 0x8C, 0x21, 0xDA, 0xD4, 0x24, 0xAD, 0x36, 0x19, 0x68, 0xB5, 0x29, 0x63, 0x82, 0x93, 0x40, 0x3D, 0x2B, 0xE6, 0x04, 0xCB, 0x4A, 0x0E, 0xE8, 0xF5, 0x79, 0x7A, 0xBD, 0x2E, 0x4F, 0xA5, 0xD3, 0xE5, 0xA9, 0x75, 0x7A, 0x37, 0xBA, 0x5C, 0x35, 0xC3, 0x0C, 0x0D, 0x4D, 0xE7, 0xAA, 0x69, 0x5A, 0xAA, 0xA6, 0x29, 0xA9, 0x9A, 0xA2, 0xA4, 0x1A, 0x17, 0x39, 0x1A, 0x8A, 0xCA, 0xD1, 0x90, 0xA4, 0xD4, 0x0F, 0x82, 0xC8, 0xF1, 0x82, 0xE3, 0x39, 0x1A, 0x1C, 0xCF, 0xD1, 0xE2, 0xB8, 0x44, 0x8B, 0x61, 0x62, 0x17, 0xA8, 0x58, 0x83, 0xA1, 0x62, 0x0D, 0x8A, 0x88, 0xB5, 0x08, 0x22, 0xD6, 0xA2, 0x88, 0x18, 0x43, 0x11, 0x91, 0x42, 0x8B, 0x2C, 0x9B, 0xAD, 0x45, 0x52, 0xC1, 0x58, 0xE1, 0x56, 0x85, 0xF5, 0x12, 0x8E, 0xE4, 0xEC, 0xD1, 0xEB, 0xF2, 0x8C, 0x3A, 0x26, 0x4F, 0xC3, 0x30, 0x79, 0x5A, 0x86, 0xC9, 0xD3, 0xEA, 0x98, 0x3C, 0xAD, 0x8E, 0xC9, 0xD5, 0x32, 0x74, 0xAE, 0x96, 0x61, 0xDC, 0xD0, 0xB9, 0x5A, 0x86, 0x96, 0x6A, 0x69, 0x5A, 0xAA, 0xA5, 0x29, 0x29, 0x42, 0x53, 0x52, 0x84, 0xA2, 0xDD, 0x4F, 0x52, 0x8A, 0x50, 0x64, 0x8E, 0x17, 0xD2, 0x17, 0x62, 0x00, 0x02, 0xCF, 0x41, 0x08, 0x3C, 0x07, 0xC5, 0x89, 0x1C, 0x14, 0x27, 0x24, 0x28, 0x8E, 0x49, 0x50, 0x1C, 0x13, 0x7B, 0xC1, 0x50, 0x2F, 0x24, 0x8A, 0x8A, 0x94, 0x08, 0x92, 0x36, 0x0B, 0x41, 0xD2, 0xC0, 0x58, 0xE1, 0x26, 0x50, 0x27, 0xE6, 0x88, 0x64, 0xBF, 0x8E, 0xCE, 0x35, 0x31, 0x4C, 0x2E, 0xCA, 0x30, 0xB9, 0x18, 0xC3, 0xE4, 0x62, 0x0C, 0x9D, 0x8B, 0xD1, 0x74, 0x2E, 0xC6, 0xD0, 0x52, 0x3F, 0x68, 0x5A, 0x8A, 0xD1, 0x94, 0x14, 0x77, 0x91, 0x83, 0x53, 0xA4, 0x14, 0xA7, 0xC8, 0x1C, 0x3F, 0x48, 0x32, 0x07, 0x27, 0x09, 0x5F, 0x24, 0x5E, 0x08, 0x5C, 0x42, 0x10, 0xB8, 0x84, 0xC0, 0x3D, 0x60, 0x12, 0x02, 0xC7, 0xC4, 0x04, 0x8E, 0x89, 0x08, 0x0C, 0x13, 0x13, 0x18, 0xEA, 0x85, 0xC1, 0x50, 0x91, 0x06, 0x45, 0xD2, 0x66, 0xA3, 0x48, 0x1A, 0x18, 0x2B, 0xDC, 0x04, 0x32, 0x22, 0xAE, 0xEC, 0x67, 0x68, 0xA9, 0x95, 0xA6, 0xA5, 0x04, 0x43, 0x4B, 0x49, 0x9A, 0xF2, 0x25, 0xC7, 0x0F, 0x8A, 0xCC, 0x21, 0x69, 0xD2, 0xF5, 0xA4, 0x08, 0x17, 0x24, 0x91, 0x43, 0x92, 0x84, 0x84, 0x24, 0x09, 0x09, 0xE5, 0x05, 0x1F, 0x80, 0xF0, 0x43, 0x4C, 0xE1, 0x98, 0x98, 0xC2, 0x31, 0xD1, 0x00, 0xA8, 0x17, 0x1A, 0x43, 0xBC, 0xB0, 0x18, 0x9A, 0x8D, 0x22, 0xDA, 0x95, 0x73, 0x10, 0xED, 0x4A, 0x30, 0x56, 0x38, 0x09, 0xA4, 0xE9, 0x4C, 0x8E, 0x64, 0x1D, 0x64, 0x28, 0x89, 0x9D, 0xA1, 0x24, 0x34, 0x43, 0x49, 0x18, 0x5F, 0x68, 0x52, 0xC2, 0xD0, 0x84, 0x84, 0x61, 0x48, 0x09, 0xC3, 0x90, 0x62, 0x86, 0x26, 0xC5, 0x0C, 0x4D, 0xF8, 0x43, 0x11, 0x62, 0x86, 0x24, 0xC4, 0x0C, 0x89, 0x8B, 0x19, 0x12, 0x17, 0xEB, 0x28, 0x5C, 0xA4, 0x23, 0x3D, 0x60, 0x83, 0x21, 0x30, 0x91, 0x8E, 0x40, 0x3D, 0x64, 0xFB, 0x81, 0x23, 0x59, 0x1E, 0x8C, 0x38, 0x92, 0x89, 0xA3, 0xDA, 0xE5, 0x73, 0x50, 0xED, 0x72, 0x30, 0x56, 0x38, 0x09, 0x64, 0xE8, 0x0C, 0x8E, 0x64, 0x1E, 0xA4, 0x49, 0xB1, 0x83, 0x26, 0xC5, 0x7A, 0x17, 0x22, 0x3D, 0x43, 0x8A, 0xF4, 0xF4, 0x00, 0x2C, 0x4D, 0x8A, 0xF4, 0x34, 0xE1, 0x07, 0x4B, 0x13, 0x22, 0x96, 0xC2, 0xB3, 0x59, 0x8A, 0xC8, 0x76, 0x3D, 0x03, 0x20, 0x3D, 0x60, 0x03, 0x10, 0x5E, 0xB2, 0x0C, 0x04, 0xEA, 0x0F, 0xEE, 0xFF, 0x67, 0x13, 0x8E, 0x66, 0x92, 0x18, 0xB2, 0x7C, 0x2E, 0x86, 0x2C, 0x07, 0x63, 0x85, 0xDB, 0x0A, 0x24, 0xD3, 0x39, 0x92, 0x71, 0x88, 0x26, 0xB2, 0x21, 0x4D, 0x64, 0x1B, 0x5D, 0x64, 0x19, 0x69, 0x22, 0xCB, 0x48, 0x79, 0xC9, 0x36, 0x52, 0x78, 0x56, 0x20, 0x3D, 0x14, 0x9E, 0xD5, 0x43, 0xE2, 0x59, 0x3D, 0x24, 0xE6, 0x4B, 0x66, 0x70, 0x50, 0x17, 0xC4, 0x00, 0xBD, 0x03, 0x64, 0xF4, 0x12, 0x68, 0x46, 0x2F, 0x8E, 0xF8, 0xD1, 0x87, 0x23, 0xE9, 0x14, 0xAA, 0x4D, 0x9D, 0x8B, 0x6A, 0x53, 0xC1, 0x58, 0xE1, 0x24, 0x90, 0x22, 0x56, 0x70, 0x64, 0xE5, 0x21, 0x1A, 0xCF, 0x84, 0x34, 0x9E, 0x69, 0xA2, 0xF1, 0x4C, 0x13, 0x85, 0x67, 0x98, 0x28, 0x2C, 0xC3, 0x44, 0x61, 0x19, 0x66, 0x1F, 0x4C, 0xA4, 0x0F, 0x7E, 0x7F, 0x46, 0xBD, 0x4F, 0xB3, 0x2F, 0x04, 0x9A, 0xEE, 0x85, 0x44, 0xD3, 0xCD, 0x04, 0x92, 0x6E, 0x21, 0x5C, 0x4F, 0x1F, 0xD2, 0xFC, 0xD1, 0xA6, 0x99, 0x71, 0x6D, 0x9A, 0x19, 0x47, 0xD2, 0xFA, 0x71, 0xED, 0x4A, 0x1A, 0xD5, 0xA4, 0xCC, 0x45, 0x35, 0x29, 0x60, 0xAC, 0x70, 0x5B, 0x81, 0xF8, 0x32, 0x8E, 0x2C, 0x3F, 0x48, 0xA1, 0x69, 0x90, 0x42, 0xD3, 0xFA, 0x28, 0x34, 0xAD, 0x8F, 0x1C, 0xC4, 0x4A, 0x8B, 0xDF, 0xDF, 0x23, 0x69, 0x7D, 0x24, 0xB2, 0xB2, 0x8F, 0x44, 0x56, 0x5A, 0xBD, 0xA0, 0x3E, 0xDF, 0xDD, 0x10, 0xC8, 0x0A, 0x2F, 0xA4, 0xCF, 0x77, 0x42, 0xBB, 0xC2, 0x4A, 0x06, 0x40, 0x0C, 0xD0, 0xEF, 0xC6, 0x89, 0x6B, 0x97, 0xEB, 0x30, 0x4D, 0xD2, 0x3C, 0x4C, 0x93, 0x04, 0xC6, 0x0A, 0x37, 0x81, 0x58, 0x32, 0x47, 0x52, 0x0E, 0x91, 0xC8, 0x72, 0x48, 0x21, 0xCB, 0x6D, 0x14, 0xB2, 0xBC, 0x9F, 0x42, 0x96, 0xF7, 0x93, 0x2E, 0x6C, 0xC3, 0xB3, 0x6C, 0x78, 0xB4, 0x6E, 0x10, 0x9F, 0x27, 0xB2, 0xCC, 0xEE, 0x22, 0xD5, 0x85, 0xD6, 0x0D, 0x92, 0x6A, 0x27, 0xB4, 0x2E, 0xDC, 0x7F, 0x07, 0x71, 0xED, 0x52, 0x3D, 0xA2, 0x11, 0xCE, 0x47, 0x34, 0x42, 0x30, 0x56, 0xB8, 0xBD, 0x13, 0x41, 0xE2, 0x39, 0x92, 0xB0, 0x99, 0xD4, 0xA6, 0x42, 0x52, 0xBB, 0xD4, 0x49, 0x6A, 0x97, 0x3A, 0x7C, 0x70, 0x7A, 0x20, 0x82, 0x3C, 0x09, 0x6D, 0x8A, 0x93, 0x1C, 0x02, 0xCF, 0xBF, 0x11, 0x1A, 0xD7, 0x77, 0x42, 0x9B, 0x3C, 0x80, 0x26, 0x19, 0x12, 0xDA, 0x64, 0x48, 0x68, 0x46, 0x22, 0x09, 0xC3, 0xD4, 0xB1, 0x33, 0x31, 0x75, 0x2C, 0x18, 0x2B, 0x1C, 0xFB, 0xC0, 0x38, 0x4E, 0x30, 0x74, 0xDC, 0x12, 0x42, 0x93, 0x64, 0x1E, 0xF9, 0x3F, 0xF4, 0x5F, 0x49, 0x0A, 0xC4, 0xD5, 0x89, 0xF7, 0x70, 0xD5, 0xE2, 0xEF, 0xE3, 0xAA, 0xC5, 0x60, 0xAC, 0x70, 0x6B, 0x63, 0xF0, 0x58, 0x4E, 0xD0, 0xD8, 0x92, 0xEF, 0x91, 0x5A, 0xE1, 0x1F, 0x09, 0x4D, 0xCA, 0x6B, 0x23, 0x90, 0xD4, 0xA4, 0x40, 0x44, 0xBD, 0xA8, 0x04, 0xD1, 0x2C, 0x04, 0x5C, 0xE0, 0x24, 0x10, 0xD5, 0xBC, 0xC3, 0x19, 0x44, 0xF3, 0x6E, 0x0C, 0xA1, 0x4D, 0x6C, 0x7D, 0x3D, 0x24, 0xA6, 0x40, 0x54, 0x15, 0xFB, 0x5B, 0x8D, 0x72, 0xEE, 0x0F, 0x34, 0xAA, 0xB9, 0x80, 0x0B, 0x9C, 0x04, 0xAA, 0xD5, 0x73, 0x39, 0xA3, 0x51, 0xCF, 0x05, 0x04, 0x1A, 0x3B, 0x9F, 0xD0, 0x08, 0x6F, 0xE0, 0xEA, 0x64, 0xA8, 0x27, 0x92, 0xA1, 0x49, 0x97, 0x04, 0x7B, 0x99, 0x20, 0xE8, 0x02, 0x49, 0x1E, 0x15, 0xA6, 0x61, 0x30, 0xB3, 0xC9, 0x90, 0xC1, 0x92, 0x21, 0xAE, 0x4E, 0x66, 0x30, 0x75, 0xFC, 0x27, 0x1A, 0xE5, 0x82, 0xB7, 0x34, 0x8A, 0x79, 0x80, 0x2B, 0x9C, 0x04, 0x6A, 0xD4, 0xF3, 0x5E, 0x09, 0x02, 0x8D, 0x05, 0xB8, 0x36, 0xF6, 0x0D, 0x8B, 0xF1, 0xBD, 0x95, 0xD5, 0x37, 0x93, 0xAE, 0xFF, 0xE6, 0xEF, 0x52, 0xE1, 0xFF, 0xFA, 0x87, 0xA5, 0x5E, 0x7E, 0xF7, 0x0F, 0x29, 0xF0, 0x77, 0x9F, 0x27, 0xBB, 0xF8, 0x6D, 0x32, 0xFC, 0xA7, 0xCF, 0x93, 0xE0, 0x3F, 0xFD, 0x36, 0x09, 0xFE, 0xA3, 0x87, 0xDF, 0x24, 0xC2, 0x7F, 0x70, 0xF3, 0xF9, 0x6F, 0x84, 0xF0, 0xF3, 0x5F, 0x0B, 0xE1, 0xE7, 0xBF, 0x12, 0xC2, 0xDF, 0xFE, 0x2A, 0xC1, 0xC5, 0xDF, 0x27, 0xC0, 0xDF, 0xFC, 0x7D, 0x3C, 0xFC, 0xCD, 0xDF, 0xC7, 0xC3, 0x5F, 0xFF, 0x9D, 0x87, 0x38, 0xF8, 0xEB, 0xBF, 0x8B, 0x83, 0xBF, 0xFC, 0x79, 0xBC, 0xB5, 0xA5, 0x29, 0xF6, 0xB2, 0x9E, 0x5A, 0x3C, 0x1F, 0x51, 0x2D, 0x01, 0x1A, 0xE5, 0x42, 0xF0, 0x5F, 0x2E, 0x90, 0xC0, 0xE7, 0x70, 0x06, 0xC7, 0xE6, 0x00, 0x96, 0x5E, 0x0C, 0x4C, 0x86, 0x45, 0xA0, 0xA1, 0x4E, 0x04, 0xB6, 0x6C, 0xD9, 0x79, 0x64, 0xED, 0xBA, 0xAD, 0xB0, 0xA8, 0xC8, 0x45, 0x61, 0xD1, 0x16, 0xB8, 0x6E, 0x5D, 0x19, 0x2C, 0x58, 0xBB, 0x09, 0xAE, 0x59, 0xB3, 0x11, 0xE6, 0xE7, 0x97, 0xC2, 0xD5, 0xAB, 0x4B, 0xE0, 0xAA, 0x55, 0x32, 0x98, 0x97, 0xB7, 0x01, 0xE6, 0xE6, 0x16, 0xC3, 0x9C, 0x9C, 0x22, 0x28, 0x91, 0x14, 0x42, 0xB1, 0x64, 0x1D, 0xCC, 0x16, 0xAD, 0x85, 0x59, 0x59, 0x6B, 0x60, 0x66, 0xE6, 0x6A, 0x98, 0x9E, 0xB1, 0x0A, 0xA6, 0xA5, 0xE7, 0xC1, 0x95, 0x69, 0xB9, 0x70, 0xC5, 0x8A, 0x1C, 0xB8, 0x7C, 0xB9, 0x04, 0xA6, 0xA6, 0x8A, 0xE1, 0xD2, 0xA5, 0x22, 0x98, 0x92, 0x92, 0x0D, 0x93, 0x93, 0xB3, 0x60, 0x5C, 0xBC, 0xC8, 0xB8, 0x63, 0xBB, 0x44, 0xD0, 0xDD, 0x1E, 0x0F, 0x8C, 0xCC, 0x7B, 0x80, 0x40, 0xE7, 0x03, 0x02, 0x99, 0xC3, 0x19, 0x4E, 0x02, 0x1F, 0x3F, 0x8A, 0xE5, 0xCC, 0xB3, 0x27, 0xEF, 0x83, 0xAA, 0x9B, 0xF9, 0xE0, 0xB7, 0xBF, 0x3E, 0x04, 0x2E, 0x5C, 0x38, 0x07, 0x2E, 0x5C, 0xF8, 0x78, 0xCD, 0x4F, 0x7F, 0xFA, 0x13, 0xCB, 0x95, 0x2B, 0x57, 0xE0, 0x95, 0x2B, 0x57, 0xE0, 0xA7, 0x9F, 0x7E, 0x0A, 0x3F, 0xFA, 0xE8, 0x23, 0x78, 0xF9, 0xF2, 0x65, 0x78, 0xF1, 0xE2, 0x45, 0x78, 0xE1, 0xC2, 0x05, 0x78, 0xF6, 0xEC, 0x39, 0x78, 0xE6, 0xCC, 0x19, 0xF8, 0xE1, 0x87, 0x1F, 0xC2, 0x53, 0xA7, 0x4E, 0xC1, 0x13, 0x27, 0x4E, 0xC0, 0xE3, 0xC7, 0x8F, 0xC3, 0x63, 0xC7, 0x8E, 0xC1, 0x23, 0x47, 0x8E, 0xC0, 0x43, 0x87, 0x0E, 0xC1, 0x03, 0x07, 0x0E, 0xC0, 0xFD, 0xFB, 0xF7, 0xC3, 0xBD, 0x7B, 0xF7, 0xC2, 0x3D, 0x7B, 0xF6, 0xC0, 0x5D, 0xBB, 0x76, 0xC1, 0x9D, 0x3B, 0x77, 0xC2, 0xED, 0xDB, 0xB7, 0xC3, 0x2D, 0x5B, 0xB6, 0xC0, 0xCD, 0x9B, 0x37, 0xC3, 0x4D, 0x9B, 0x36, 0xC1, 0x8D, 0x1B, 0x4B, 0xDB, 0xA5, 0xD2, 0x75, 0x33, 0xB6, 0x6D, 0xCD, 0x03, 0x67, 0xCF, 0x64, 0x83, 0xDA, 0x9A, 0x58, 0xF0, 0xB0, 0xF1, 0x3D, 0x70, 0xFF, 0x4B, 0x6E, 0x70, 0x12, 0x98, 0x91, 0x21, 0x79, 0x25, 0xD2, 0xD3, 0x73, 0x40, 0x5A, 0x9A, 0x14, 0x64, 0x65, 0x89, 0x80, 0x54, 0x2A, 0x9D, 0xB6, 0x7B, 0xF7, 0xEE, 0x27, 0x87, 0x0F, 0x1F, 0x86, 0x87, 0x0F, 0x1F, 0xF6, 0x93, 0xB1, 0x6F, 0xDF, 0x3E, 0xB8, 0x6F, 0xDF, 0x3E, 0xB8, 0x77, 0xEF, 0x5E, 0x2F, 0xBE, 0x72, 0x76, 0xEC, 0xD8, 0x01, 0xB7, 0x6F, 0xDF, 0x0E, 0xB7, 0x6E, 0xDD, 0x0A, 0x37, 0x6F, 0xDE, 0x0C, 0xCB, 0xCA, 0xCA, 0xE0, 0xC6, 0x8D, 0x1B, 0x61, 0x49, 0x49, 0x09, 0x94, 0xC9, 0x64, 0x70, 0xC3, 0x86, 0x0D, 0xB0, 0xB8, 0xB8, 0x18, 0x16, 0x15, 0x15, 0xC1, 0xC2, 0xC2, 0x42, 0x28, 0x93, 0xC9, 0x5E, 0xAC, 0x5F, 0xBF, 0x7E, 0x63, 0x7E, 0x7E, 0x3E, 0xC8, 0xCD, 0x2B, 0x00, 0x12, 0xC9, 0x5A, 0x90, 0x9B, 0x5B, 0xF0, 0x4A, 0x70, 0x12, 0x98, 0x9E, 0x9E, 0x3E, 0x9E, 0x2C, 0x4F, 0x4B, 0x4B, 0x83, 0xE9, 0xE9, 0xE9, 0x30, 0x3B, 0x3B, 0x1B, 0x4A, 0x24, 0x12, 0x98, 0x9B, 0x9B, 0x0B, 0xF3, 0xF3, 0xF3, 0xE1, 0xDA, 0xB5, 0x6B, 0x61, 0x61, 0x61, 0x21, 0x2C, 0x2A, 0x2A, 0x82, 0x45, 0x45, 0x45, 0x70, 0xFD, 0xFA, 0xF5, 0xB0, 0xA8, 0xA8, 0x08, 0xAE, 0x5B, 0xB7, 0xCE, 0x4B, 0x41, 0x41, 0x01, 0xCC, 0xCF, 0xCF, 0x87, 0xAB, 0x57, 0xAF, 0x86, 0x79, 0x79, 0x79, 0x30, 0x2F, 0x2F, 0x0F, 0xE6, 0xE6, 0xE6, 0xC2, 0xDC, 0xDC, 0x5C, 0xB8, 0x6A, 0xD5, 0x2A, 0xB8, 0x7A, 0xF5, 0x6A, 0x58, 0x50, 0x50, 0x00, 0xD7, 0xAD, 0x5B, 0x07, 0x8B, 0x8B, 0x8B, 0x7B, 0x65, 0x32, 0xD9, 0xED, 0x92, 0x92, 0x92, 0x1F, 0x94, 0x94, 0x94, 0x80, 0xF1, 0x80, 0x93, 0xC0, 0xCC, 0xCC, 0xCC, 0x71, 0x23, 0x23, 0x23, 0x23, 0x4A, 0x2C, 0x16, 0x97, 0x6C, 0xDD, 0xBA, 0xB5, 0x76, 0xDF, 0xBE, 0x7D, 0x70, 0xFF, 0xFE, 0xFD, 0xF0, 0xC0, 0x81, 0x03, 0x7E, 0xAB, 0x70, 0xEF, 0xDE, 0xBD, 0x70, 0xD7, 0xAE, 0x5D, 0xDE, 0x38, 0x6E, 0xDA, 0xB4, 0x09, 0x96, 0x94, 0x94, 0xC0, 0xE2, 0xE2, 0x62, 0x58, 0x58, 0x58, 0x08, 0xD7, 0xAD, 0x5B, 0x07, 0xD7, 0xAE, 0x5D, 0xEB, 0x65, 0xDD, 0xBA, 0x75, 0x5E, 0xE1, 0xC5, 0xC5, 0xC5, 0xDE, 0x55, 0xB8, 0x7E, 0xFD, 0xFA, 0x6B, 0x32, 0x99, 0x6C, 0x9D, 0x4C, 0x26, 0x03, 0xE3, 0x05, 0x27, 0x81, 0xD9, 0xD9, 0xD9, 0xE3, 0x46, 0x46, 0x46, 0x06, 0x90, 0xC9, 0x64, 0xE0, 0xD2, 0xA5, 0x4B, 0xBF, 0x3B, 0x7F, 0xFE, 0x3C, 0x3C, 0x7D, 0xFA, 0x34, 0x3C, 0x71, 0xE2, 0x04, 0x3C, 0x78, 0xF0, 0x20, 0xDC, 0xB5, 0x6B, 0x17, 0xDC, 0xB2, 0x65, 0x0B, 0x2C, 0x29, 0x29, 0x81, 0x85, 0x85, 0x85, 0x70, 0xCD, 0x9A, 0x35, 0x70, 0xD5, 0xAA, 0x55, 0x30, 0x2F, 0x2F, 0xCF, 0x6F, 0x75, 0x15, 0x16, 0x16, 0xC2, 0xE2, 0xE2, 0x62, 0x58, 0x52, 0x52, 0x02, 0x4B, 0x4B, 0x4B, 0xE1, 0xC6, 0x8D, 0x1B, 0xE1, 0xC6, 0x8D, 0x1B, 0x61, 0x69, 0x69, 0x29, 0x2C, 0x29, 0x29, 0xF1, 0x46, 0xB9, 0xB8, 0xB8, 0xB8, 0x60, 0xFD, 0xFA, 0xF5, 0xA0, 0xB0, 0xB0, 0x70, 0xDC, 0xE0, 0x24, 0x30, 0x2B, 0x2B, 0x6B, 0x3C, 0x99, 0x9E, 0x99, 0x99, 0x79, 0xA6, 0xB8, 0xB8, 0xB8, 0xA3, 0xB0, 0xB0, 0x10, 0xE6, 0xE5, 0xE5, 0xC1, 0x9C, 0x9C, 0x1C, 0x28, 0x12, 0x89, 0xA0, 0x48, 0x24, 0x82, 0x12, 0x89, 0x04, 0xE6, 0xE5, 0xE5, 0xC1, 0x82, 0x82, 0x02, 0x58, 0x5C, 0x5C, 0x0C, 0x37, 0x6D, 0xDA, 0x04, 0xB7, 0x6E, 0xDD, 0x0A, 0x77, 0xED, 0xDA, 0x05, 0xF7, 0xEE, 0xDD, 0x0B, 0xF7, 0xEF, 0xDF, 0xEF, 0x65, 0xDF, 0xBE, 0x7D, 0x70, 0xCF, 0x9E, 0x3D, 0x70, 0xF7, 0xEE, 0xDD, 0x7E, 0xFB, 0xA3, 0xCF, 0xDE, 0xF8, 0xAB, 0xE2, 0xE2, 0xE2, 0xD5, 0x45, 0x45, 0x45, 0xDF, 0x2F, 0x2A, 0x2A, 0x02, 0xE3, 0xC1, 0xB7, 0x1E, 0xE1, 0xAC, 0xAC, 0xAC, 0xD4, 0xCC, 0xCC, 0xCC, 0x5E, 0x91, 0x48, 0x64, 0x2D, 0x28, 0x28, 0x80, 0x32, 0x99, 0x0C, 0x6E, 0xDB, 0xB6, 0x0D, 0xEE, 0xD9, 0xB3, 0x07, 0x1E, 0x3A, 0x74, 0x08, 0x1E, 0x3F, 0x7E, 0x1C, 0x9E, 0x3A, 0x75, 0x0A, 0x7E, 0xF8, 0xE1, 0x87, 0x5E, 0x3C, 0x95, 0xF8, 0xD8, 0xB1, 0x63, 0xF0, 0xF0, 0xE1, 0xC3, 0x70, 0xFF, 0xFE, 0xFD, 0x5E, 0x69, 0xBE, 0x11, 0xF7, 0x14, 0x12, 0x5F, 0x64, 0x32, 0x59, 0xBD, 0x4C, 0x26, 0xFB, 0xC1, 0x5F, 0x4C, 0x84, 0x33, 0x33, 0x33, 0x27, 0xE4, 0xE7, 0xE7, 0xF3, 0x2E, 0x5E, 0xBC, 0xF8, 0x6F, 0xBE, 0xAD, 0xCC, 0x27, 0x9F, 0x7C, 0x02, 0x2F, 0x5F, 0xBE, 0x0C, 0x2F, 0x5C, 0xB8, 0x00, 0xCF, 0x9C, 0x39, 0x03, 0x4F, 0x9E, 0x3C, 0x09, 0x0F, 0x1F, 0x3E, 0x0C, 0xF7, 0xEE, 0xDD, 0x0B, 0x77, 0xEC, 0xD8, 0x01, 0xCB, 0xCA, 0xCA, 0xA0, 0x4C, 0x26, 0xF3, 0x16, 0x95, 0x82, 0x82, 0x02, 0xB8, 0x66, 0xCD, 0x1A, 0xBF, 0x3D, 0x70, 0xC3, 0x86, 0x0D, 0xB0, 0xA4, 0xA4, 0xC4, 0x1B, 0xED, 0x92, 0x92, 0x92, 0x2B, 0x32, 0x99, 0x8C, 0xFF, 0xAD, 0xEF, 0x81, 0xE3, 0xB9, 0x02, 0xD3, 0xD3, 0xD3, 0xC1, 0x86, 0x0D, 0x1B, 0xC0, 0xA5, 0x4B, 0x97, 0xFE, 0x78, 0xE1, 0xC2, 0x05, 0x78, 0xEA, 0xD4, 0x29, 0x78, 0xE8, 0xD0, 0x21, 0xB8, 0x6B, 0xD7, 0x2E, 0x58, 0x56, 0x56, 0x06, 0x8B, 0x8B, 0x8B, 0x61, 0x41, 0x41, 0x01, 0xCC, 0xCB, 0xCB, 0x83, 0x52, 0xA9, 0x14, 0x4A, 0xA5, 0x52, 0x98, 0x97, 0x97, 0xE7, 0xAD, 0xD2, 0xC5, 0xC5, 0xC5, 0xB0, 0xB4, 0xB4, 0x14, 0x96, 0x95, 0x95, 0xC1, 0xAD, 0x5B, 0xB7, 0xC2, 0x6D, 0xDB, 0xB6, 0xC1, 0xED, 0xDB, 0xB7, 0x7B, 0x09, 0x68, 0x71, 0x8A, 0x64, 0x32, 0x19, 0xD8, 0xB0, 0x61, 0xC3, 0xB8, 0xF1, 0xAD, 0x0B, 0xCC, 0xCC, 0xCC, 0x9C, 0x97, 0x91, 0x91, 0x71, 0x53, 0x22, 0x91, 0xB0, 0x12, 0x89, 0x04, 0x66, 0x65, 0x65, 0xC1, 0xAC, 0xAC, 0x2C, 0x28, 0x12, 0x89, 0xA0, 0x54, 0x2A, 0x85, 0x6B, 0xD6, 0xAC, 0x81, 0xEB, 0xD7, 0xAF, 0x87, 0x1B, 0x37, 0x6E, 0xF4, 0x46, 0x7B, 0xFF, 0xFE, 0xFD, 0xF0, 0xE0, 0xC1, 0x83, 0xD0, 0xD3, 0x3B, 0x1E, 0x3C, 0x78, 0xD0, 0x5B, 0xB5, 0x3D, 0x7D, 0xA2, 0xAF, 0x3C, 0x4F, 0x41, 0x91, 0xC9, 0x64, 0xB5, 0x32, 0x99, 0xEC, 0xE3, 0x6F, 0x3D, 0xC2, 0xE3, 0x2C, 0x50, 0x98, 0x91, 0x91, 0xF1, 0x78, 0xDD, 0xBA, 0x75, 0xD8, 0xD6, 0xAD, 0x5B, 0xE1, 0xDE, 0xBD, 0x7B, 0xE1, 0x91, 0x23, 0x47, 0xE0, 0xC9, 0x93, 0x27, 0xE1, 0xE9, 0xD3, 0xA7, 0xE1, 0xD9, 0xB3, 0x67, 0xE1, 0xB9, 0x73, 0xE7, 0xE0, 0xB9, 0x73, 0x03, 0xA7, 0x91, 0x93, 0x27, 0x4F, 0x7A, 0xF7, 0xBF, 0x7D, 0xFB, 0xF6, 0xC1, 0x5D, 0xBB, 0x76, 0xC1, 0x6D, 0xDB, 0xB6, 0xC1, 0xB2, 0xB2, 0x32, 0x58, 0x5A, 0x5A, 0xEA, 0xD7, 0x40, 0x7B, 0xDA, 0x19, 0xF7, 0x1E, 0x68, 0x2C, 0x2E, 0x2E, 0xFE, 0x43, 0x51, 0x51, 0xD1, 0xF7, 0xFE, 0x62, 0x8A, 0x48, 0x7A, 0x7A, 0xFA, 0xF7, 0xD6, 0xAD, 0x5B, 0x07, 0x3E, 0xFD, 0xF4, 0xD3, 0xDF, 0x7F, 0xF6, 0xD9, 0x67, 0xF0, 0xA7, 0x3F, 0xFD, 0xA9, 0xF7, 0x38, 0xE7, 0x69, 0x6B, 0x8E, 0x1F, 0x3F, 0xEE, 0xD7, 0xD6, 0x78, 0xF6, 0x3E, 0x4F, 0x13, 0x9D, 0x9F, 0x9F, 0xEF, 0xDD, 0xFF, 0x02, 0x5B, 0x9A, 0x4D, 0x9B, 0x36, 0xB9, 0x8F, 0x70, 0x1B, 0x61, 0x69, 0x69, 0xE9, 0xDE, 0xA2, 0xA2, 0x22, 0xB0, 0x76, 0xED, 0xDA, 0x71, 0x83, 0xE3, 0x51, 0x2E, 0x63, 0xDC, 0x48, 0x4B, 0x4B, 0xFB, 0xFE, 0xDA, 0xB5, 0x6B, 0x67, 0x1C, 0x3F, 0x7E, 0xBC, 0xFC, 0xE8, 0xD1, 0xA3, 0xDE, 0xBD, 0xAF, 0xA8, 0xA8, 0x08, 0xE6, 0xE7, 0xE7, 0x7B, 0xDB, 0x9A, 0x9C, 0x9C, 0x1C, 0x28, 0x95, 0x4A, 0xE1, 0xAA, 0x55, 0xAB, 0xFC, 0xF6, 0xBE, 0x2D, 0x5B, 0xB6, 0xC0, 0xED, 0xDB, 0xB7, 0xC3, 0x9D, 0x3B, 0x77, 0xC2, 0x5D, 0xBB, 0x76, 0x79, 0xF1, 0xB4, 0x31, 0xDB, 0xB6, 0x6D, 0xF3, 0x9E, 0x83, 0x4B, 0x4B, 0x4B, 0x77, 0x6D, 0xD8, 0xB0, 0x21, 0xB4, 0xA4, 0xA4, 0xE4, 0x8D, 0xBF, 0x98, 0x93, 0x48, 0x66, 0x66, 0x66, 0x62, 0x66, 0x66, 0xA6, 0x21, 0x2D, 0x2D, 0xCD, 0x99, 0x9E, 0x9E, 0x0E, 0xB3, 0xB2, 0xB2, 0xA0, 0x54, 0x2A, 0x85, 0x9E, 0x96, 0x66, 0xF3, 0xE6, 0xCD, 0x70, 0xE7, 0xCE, 0x9D, 0x70, 0xFF, 0xFE, 0xFD, 0xF0, 0xF0, 0xE1, 0xC3, 0xF0, 0xE8, 0xD1, 0xA3, 0xF0, 0xF8, 0xF1, 0xE3, 0xDE, 0x61, 0xC2, 0xD1, 0xA3, 0x47, 0xE1, 0xE1, 0xC3, 0x87, 0xE1, 0x81, 0x03, 0x07, 0xBC, 0x27, 0x16, 0x4F, 0x3B, 0x13, 0xE4, 0x6C, 0xCC, 0xC8, 0x64, 0xB2, 0x2A, 0x99, 0x4C, 0xF6, 0xE6, 0xB7, 0xBA, 0x07, 0x8E, 0x67, 0x23, 0x9D, 0x99, 0x99, 0x39, 0x37, 0x33, 0x33, 0xF3, 0xE2, 0x8E, 0x1D, 0x3B, 0x1E, 0x9F, 0x38, 0x71, 0x02, 0x9E, 0x3E, 0x7D, 0x1A, 0x9E, 0x3F, 0x7F, 0x1E, 0x5E, 0xBC, 0x78, 0x11, 0x5E, 0xBA, 0x74, 0x09, 0x5E, 0xBC, 0x78, 0x11, 0x9E, 0x3F, 0x7F, 0x1E, 0x9E, 0x3D, 0x7B, 0xD6, 0xBB, 0xFF, 0x1D, 0x3D, 0x7A, 0x14, 0x1E, 0x38, 0x70, 0x00, 0xEE, 0xD9, 0xB3, 0x07, 0x6E, 0xDF, 0xBE, 0x1D, 0x6E, 0xDE, 0xBC, 0x19, 0x96, 0x94, 0x94, 0x78, 0xCF, 0xCA, 0x85, 0x85, 0x85, 0x5E, 0x3C, 0xFB, 0x9F, 0x4C, 0x26, 0x83, 0x32, 0x99, 0xEC, 0x7E, 0x49, 0x49, 0xC9, 0x61, 0x99, 0x4C, 0xF6, 0xC6, 0x5F, 0x92, 0x40, 0x20, 0x91, 0x48, 0xC0, 0x95, 0x2B, 0x57, 0x7E, 0xF7, 0xB3, 0x9F, 0xFD, 0x0C, 0x7E, 0xFA, 0xE9, 0xA7, 0xF0, 0xD2, 0xA5, 0x4B, 0xF0, 0xEC, 0xD9, 0xB3, 0xDE, 0x23, 0xDD, 0xEE, 0xDD, 0xBB, 0xBD, 0x7B, 0x9F, 0xE7, 0x48, 0xB7, 0x7A, 0xF5, 0xEA, 0x41, 0xC7, 0xB9, 0xF5, 0xEB, 0xD7, 0x43, 0x99, 0x4C, 0x06, 0x37, 0x6E, 0xDC, 0x08, 0xCB, 0xCA, 0xCA, 0xBC, 0xED, 0x4B, 0x59, 0x59, 0x99, 0x67, 0x1F, 0x2C, 0x2B, 0x29, 0x29, 0x01, 0xDF, 0x7A, 0x1F, 0x38, 0xCE, 0x02, 0x43, 0x44, 0x22, 0x91, 0x74, 0xDB, 0xB6, 0x6D, 0x8F, 0xB6, 0x6C, 0xD9, 0x02, 0x8B, 0x8B, 0x8B, 0x61, 0x7E, 0x7E, 0x3E, 0x94, 0x4A, 0xA5, 0x50, 0x2C, 0x16, 0xFB, 0x4D, 0x68, 0xD6, 0xAC, 0x59, 0x03, 0x8B, 0x8A, 0x8A, 0xBC, 0x7B, 0xDF, 0x8E, 0x1D, 0x3B, 0xE0, 0xEE, 0xDD, 0xBB, 0xFD, 0x46, 0x5D, 0xBB, 0x77, 0xEF, 0xF6, 0xDB, 0x03, 0x3D, 0x51, 0x76, 0x0B, 0xDC, 0x5A, 0x5A, 0x5A, 0x0A, 0xC6, 0x6B, 0xFF, 0x7B, 0x5D, 0xF6, 0xC0, 0x65, 0x9E, 0xDE, 0x4F, 0x22, 0x91, 0xC0, 0x35, 0x6B, 0xD6, 0xC0, 0xE2, 0xE2, 0x62, 0x58, 0x56, 0x56, 0xE6, 0xB7, 0xF7, 0x1D, 0x3B, 0x76, 0x0C, 0x9E, 0x38, 0x71, 0xC2, 0x3B, 0x4C, 0x3D, 0x7A, 0xF4, 0x28, 0x3C, 0x72, 0xE4, 0x08, 0x3C, 0x78, 0xF0, 0xA0, 0xB7, 0xFF, 0xDB, 0xBD, 0x7B, 0xB7, 0x77, 0x88, 0xBA, 0x75, 0xEB, 0xD6, 0x60, 0xFB, 0xE0, 0xEE, 0xF1, 0x94, 0xC7, 0x59, 0xE0, 0x38, 0x0F, 0x13, 0xA6, 0x65, 0x65, 0x65, 0xA5, 0xEC, 0xDB, 0xB7, 0xEF, 0xE7, 0x1F, 0x7F, 0xFC, 0x31, 0xFC, 0xE8, 0xA3, 0x8F, 0xE0, 0xC7, 0x1F, 0x7F, 0x0C, 0x3D, 0xDF, 0x2F, 0x5F, 0xBE, 0x0C, 0x2F, 0x5D, 0xBA, 0x04, 0x2F, 0x5C, 0xB8, 0x00, 0x2F, 0x5C, 0xB8, 0x00, 0xCF, 0x9D, 0x3B, 0x07, 0xCF, 0x9E, 0x3D, 0xEB, 0xE5, 0xCC, 0x99, 0x33, 0xF0, 0xF4, 0xE9, 0xD3, 0x7E, 0x67, 0xE5, 0x0F, 0x3E, 0xF8, 0x00, 0x9E, 0x3A, 0x75, 0x0A, 0x9E, 0x3A, 0x75, 0x0A, 0x9E, 0x3C, 0x79, 0x12, 0x9E, 0x38, 0x71, 0x02, 0x7E, 0xF0, 0xC1, 0x07, 0xBD, 0xC7, 0x8F, 0x1F, 0x4F, 0x39, 0x76, 0xEC, 0x18, 0x18, 0x4F, 0xBE, 0xF5, 0xB3, 0x70, 0x56, 0x56, 0x16, 0x10, 0x89, 0x44, 0xA0, 0xB4, 0xB4, 0xF4, 0xCD, 0x93, 0x27, 0x4F, 0xFE, 0xAB, 0xE7, 0x0C, 0xEC, 0xCB, 0x47, 0x1F, 0x7D, 0x34, 0x6A, 0x3C, 0xF2, 0x7D, 0xF9, 0xE4, 0x93, 0x4F, 0x6C, 0xE7, 0xCF, 0x9F, 0xDF, 0xF4, 0xC9, 0x27, 0x9F, 0x80, 0x73, 0xE7, 0xCE, 0x81, 0xF3, 0xE7, 0xCF, 0x8F, 0x1B, 0xAF, 0x85, 0x40, 0xB1, 0x58, 0x0C, 0x36, 0x6E, 0xDC, 0x08, 0x76, 0xEE, 0xDC, 0x19, 0x7A, 0xFE, 0xFC, 0xF9, 0x6A, 0xCF, 0x30, 0x61, 0x3C, 0xB8, 0x7C, 0xF9, 0x32, 0x3C, 0x7F, 0xFE, 0xFC, 0xB1, 0x63, 0xC7, 0x8E, 0x81, 0x4B, 0x97, 0x2E, 0x81, 0x0F, 0x3F, 0xFC, 0x10, 0x9C, 0x3E, 0x7D, 0x7A, 0xDC, 0x78, 0x2D, 0x06, 0xAA, 0x65, 0x65, 0x65, 0xE0, 0xD8, 0xB1, 0x63, 0xE0, 0xC8, 0x91, 0x23, 0xE0, 0xC8, 0x91, 0x23, 0x11, 0x1F, 0x7C, 0xF0, 0x41, 0x93, 0x3B, 0x86, 0x8E, 0x57, 0xC0, 0x79, 0xEA, 0xD4, 0x29, 0x78, 0xEE, 0xDC, 0xB9, 0x5F, 0x6C, 0xDF, 0xBE, 0x1D, 0x6C, 0xDD, 0xBA, 0x15, 0x6C, 0xDB, 0xB6, 0x6D, 0xDC, 0x79, 0x2D, 0x56, 0x60, 0x41, 0x41, 0x01, 0x28, 0x2D, 0x2D, 0xF5, 0xB6, 0x06, 0x2B, 0x56, 0xAC, 0x38, 0x26, 0x14, 0x0A, 0x61, 0x62, 0x62, 0xA2, 0xE3, 0x15, 0x80, 0x42, 0xA1, 0xD0, 0x2C, 0x16, 0x8B, 0xE7, 0xAC, 0x5A, 0xB5, 0x0A, 0xE4, 0xE6, 0xE6, 0x7E, 0x23, 0x7C, 0xEB, 0x02, 0xB3, 0xB3, 0xB3, 0x41, 0x62, 0x62, 0x22, 0x58, 0xBC, 0x78, 0x31, 0x58, 0xB2, 0x64, 0x09, 0x58, 0xB2, 0x64, 0x09, 0x88, 0x8B, 0x8B, 0x0B, 0x8F, 0x8F, 0x8F, 0x7F, 0x90, 0x90, 0x90, 0x00, 0x5F, 0x85, 0x45, 0x8B, 0x16, 0x7D, 0x34, 0x7B, 0xF6, 0x6C, 0xF0, 0x4D, 0xF2, 0xAD, 0x0A, 0x14, 0x89, 0x44, 0x20, 0x23, 0x23, 0x03, 0xC4, 0xC7, 0xC7, 0x07, 0x63, 0x6A, 0x42, 0x42, 0xC2, 0xBF, 0x0A, 0x85, 0x42, 0xC8, 0x81, 0x5E, 0xA1, 0x50, 0xB8, 0x77, 0xCE, 0x9C, 0x39, 0x20, 0x3A, 0x3A, 0x1A, 0xF0, 0x78, 0xBC, 0x6F, 0x8C, 0xD7, 0x59, 0x20, 0x88, 0x8B, 0x8B, 0x7B, 0x23, 0x21, 0x21, 0xE1, 0x68, 0x42, 0x42, 0x82, 0x79, 0x0C, 0xF2, 0x9A, 0xE2, 0xE2, 0xE2, 0x96, 0x26, 0x24, 0x24, 0x80, 0xB9, 0x73, 0xE7, 0x02, 0x1E, 0x8F, 0x07, 0xF8, 0x7C, 0xFE, 0x37, 0xC6, 0xEB, 0x2E, 0x10, 0x24, 0x24, 0x24, 0x80, 0xF8, 0xF8, 0xF8, 0x0C, 0xA1, 0x50, 0xD8, 0x3C, 0x92, 0xBC, 0xF8, 0xF8, 0xF8, 0x3F, 0xC4, 0xC5, 0xC5, 0x45, 0xC6, 0xC6, 0xC6, 0x82, 0xEF, 0x04, 0xFA, 0x0B, 0x04, 0x09, 0x09, 0x09, 0xD1, 0x42, 0xA1, 0xF0, 0x3F, 0x87, 0x8A, 0x6C, 0x5C, 0x5C, 0xDC, 0x49, 0xF7, 0xFE, 0x09, 0xBE, 0x13, 0x18, 0x44, 0xA0, 0x50, 0x28, 0x04, 0xB1, 0xB1, 0xB1, 0xDF, 0x5B, 0xB2, 0x64, 0xC9, 0x71, 0xA1, 0x50, 0xD8, 0x26, 0x14, 0x0A, 0xF5, 0x42, 0xA1, 0x90, 0x4A, 0x4C, 0x4C, 0xBC, 0x93, 0x90, 0x90, 0x90, 0x16, 0x1B, 0x1B, 0x0B, 0xBE, 0x13, 0x38, 0x82, 0xC0, 0xB8, 0xB8, 0x38, 0xF0, 0xDE, 0x7B, 0xEF, 0xCD, 0x49, 0x48, 0x48, 0xF8, 0x58, 0x28, 0x14, 0xFE, 0xEF, 0xC4, 0xC4, 0xC4, 0xDF, 0x25, 0x25, 0x25, 0xED, 0x4A, 0x48, 0x48, 0x78, 0xF3, 0xCF, 0x4A, 0xE0, 0x77, 0x8C, 0xCC, 0x77, 0x12, 0xBE, 0x13, 0xF8, 0xED, 0xF2, 0xFF, 0x07, 0x00, 0xC4, 0xDD, 0x95, 0xF6, 0xEB, 0x96, 0xB0, 0x29, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82, };

const char favicon_144x144_png[] PROGMEM={0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x91, 0x08, 0x06, 0x00, 0x00, 0x00, 0xC3, 0xD8, 0x5A, 0x23, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0B, 0x13, 0x00, 0x00, 0x0B, 0x13, 0x01, 0x00, 0x9A, 0x9C, 0x18, 0x00, 0x00, 0x00, 0x19, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6F, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x41, 0x64, 0x6F, 0x62, 0x65, 0x20, 0x49, 0x6D, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x71, 0xC9, 0x65, 0x3C, 0x00, 0x00, 0x0C, 0xFE, 0x49, 0x44, 0x41, 0x54, 0x78, 0xDA, 0xEC, 0x9D, 0x3D, 0x6C, 0x14, 0x49, 0x16, 0xC7, 0x6B, 0x10, 0x01, 0xBE, 0x04, 0x3B, 0x03, 0x82, 0x9B, 0x81, 0x88, 0x85, 0x00, 0xAF, 0x48, 0x90, 0x40, 0x62, 0x56, 0x22, 0x20, 0xB3, 0x37, 0x40, 0xCB, 0x06, 0xC8, 0x76, 0x76, 0x11, 0x1F, 0x5A, 0x5D, 0x78, 0xB2, 0xC9, 0x2E, 0x1B, 0x9B, 0x10, 0xAD, 0x64, 0x03, 0x09, 0x12, 0x01, 0x83, 0xD0, 0x49, 0x04, 0x48, 0x78, 0x75, 0x04, 0x6C, 0x80, 0x6C, 0x02, 0xB4, 0x04, 0x2B, 0x76, 0x9C, 0x80, 0x83, 0x93, 0x6C, 0x5F, 0x02, 0xD2, 0x4A, 0x37, 0x57, 0xFF, 0xEE, 0xAE, 0xE9, 0x76, 0xBB, 0xBB, 0xA7, 0x3F, 0x5E, 0x75, 0x57, 0x75, 0xBF, 0xBF, 0x54, 0xF2, 0x78, 0x3C, 0x1F, 0xED, 0xEA, 0x5F, 0xBF, 0xF7, 0xEA, 0xD5, 0xAB, 0xAE, 0xD6, 0x70, 0x38, 0x14, 0x69, 0xD4, 0x6A, 0xB5, 0x6E, 0x0B, 0x56, 0xE3, 0x24, 0xF9, 0x58, 0x4E, 0xF3, 0xA2, 0xC8, 0x26, 0xF5, 0x83, 0x6C, 0xBF, 0xCB, 0xF6, 0x27, 0x5E, 0xC6, 0xAD, 0xD1, 0x0D, 0x0C, 0x6C, 0xC8, 0x76, 0x29, 0x92, 0x95, 0x08, 0x78, 0xDA, 0x1E, 0x3C, 0xDC, 0x79, 0xDC, 0xA2, 0x1A, 0x60, 0x6A, 0x07, 0x99, 0x69, 0x05, 0xDD, 0x99, 0x74, 0x59, 0x00, 0xE8, 0x37, 0xD9, 0x26, 0xD8, 0x90, 0xB3, 0x12, 0xF4, 0x45, 0xB6, 0x6F, 0x24, 0x3B, 0x5B, 0x0E, 0x37, 0x0A, 0x22, 0x06, 0x88, 0x95, 0x15, 0x24, 0xC9, 0xCE, 0x5F, 0xF0, 0xE0, 0x50, 0xE0, 0xC9, 0x3E, 0x03, 0xC4, 0xCA, 0xA0, 0x09, 0x69, 0x78, 0xD6, 0x47, 0x96, 0x48, 0xFE, 0x72, 0x49, 0x3E, 0xFE, 0x37, 0xF7, 0x0B, 0x2B, 0xEB, 0xE0, 0x4D, 0xB6, 0x93, 0xCA, 0x12, 0xFD, 0xC4, 0xFD, 0xC1, 0xCA, 0xA1, 0x96, 0x6C, 0xFF, 0x50, 0x96, 0x68, 0x47, 0xFE, 0x32, 0xC9, 0x7D, 0xC2, 0xCA, 0xA1, 0x6D, 0x05, 0x51, 0xAA, 0x8C, 0xE3, 0xE5, 0xCB, 0xDC, 0x63, 0x4D, 0xD2, 0x2F, 0xBF, 0xA4, 0x7A, 0xD9, 0x6E, 0x6A, 0x88, 0x56, 0x57, 0x85, 0x98, 0x9F, 0xE7, 0x8E, 0x6D, 0x92, 0xD6, 0xD6, 0x84, 0x58, 0x58, 0x48, 0xE1, 0xD3, 0xD2, 0x42, 0x94, 0x72, 0x76, 0x84, 0x55, 0xB7, 0xA0, 0xA7, 0x35, 0xFE, 0x35, 0x87, 0xB8, 0x9B, 0x58, 0x45, 0xC5, 0x10, 0xB1, 0x18, 0x22, 0x16, 0x43, 0xC4, 0x62, 0x88, 0x58, 0x2C, 0x86, 0x88, 0xC5, 0x10, 0xB1, 0x18, 0x22, 0x16, 0x43, 0xC4, 0x62, 0x31, 0x44, 0x2C, 0x86, 0x88, 0xC5, 0x10, 0xB1, 0x18, 0x22, 0x16, 0x8B, 0x21, 0x62, 0x11, 0xE9, 0x30, 0x77, 0xC1, 0x41, 0x0D, 0x06, 0x42, 0xF4, 0xFB, 0x42, 0x6C, 0x6E, 0xBA, 0x8F, 0xA1, 0x4E, 0x47, 0x88, 0x6E, 0x57, 0x88, 0xD9, 0x59, 0x21, 0x26, 0xB9, 0x06, 0x74, 0xBF, 0xBC, 0x25, 0x43, 0x63, 0x17, 0xAD, 0xC5, 0x2C, 0x94, 0xAD, 0x55, 0xDB, 0xD9, 0x11, 0xC3, 0x5B, 0xB7, 0x92, 0xFB, 0xE1, 0xE8, 0x51, 0x31, 0x5C, 0x5C, 0x74, 0x5F, 0xDB, 0x84, 0x3E, 0x49, 0xC3, 0x06, 0x17, 0xA5, 0x79, 0x82, 0xD5, 0x41, 0xE5, 0xE6, 0xBB, 0x77, 0xE9, 0x5E, 0x7F, 0xEE, 0x9C, 0x10, 0xEB, 0xEB, 0xF5, 0xB7, 0x4A, 0x69, 0x8A, 0xD2, 0x18, 0x22, 0xA9, 0xDD, 0x5D, 0x21, 0xA6, 0xA7, 0x85, 0xD8, 0xDA, 0xCA, 0xF6, 0xBE, 0x26, 0x80, 0xC4, 0x95, 0x8D, 0x29, 0x05, 0x0B, 0x94, 0x15, 0x20, 0x08, 0x56, 0x6B, 0x69, 0x89, 0xFB, 0xAF, 0xF1, 0x96, 0x08, 0x6E, 0xEC, 0xDB, 0x6F, 0x8B, 0x7D, 0xC6, 0x1F, 0x7F, 0xB8, 0x81, 0x37, 0x5B, 0xA2, 0x86, 0x0A, 0x2B, 0x1A, 0x8A, 0x0A, 0x23, 0x39, 0xCE, 0x13, 0x35, 0x58, 0xB0, 0x44, 0x45, 0x85, 0xB8, 0x88, 0xF3, 0x44, 0x0D, 0x56, 0xCA, 0x05, 0x7A, 0x63, 0x03, 0x73, 0xAA, 0x00, 0x1F, 0x40, 0x06, 0xC1, 0x46, 0xD0, 0x8E, 0xFC, 0x14, 0x02, 0x7F, 0x86, 0x88, 0x95, 0x08, 0x0F, 0x02, 0x74, 0xB8, 0xD6, 0xBD, 0xBD, 0xF8, 0x91, 0xE0, 0xF2, 0xB2, 0x0B, 0x14, 0x43, 0x94, 0x21, 0x56, 0xC1, 0x55, 0xA9, 0x32, 0xC6, 0x90, 0xCA, 0x1A, 0xD7, 0x69, 0x25, 0x2E, 0xAC, 0x0E, 0xB2, 0xE0, 0xE3, 0x46, 0x87, 0x18, 0x09, 0x7E, 0xF7, 0x9D, 0x10, 0xB7, 0x6E, 0xB9, 0x30, 0x19, 0x25, 0xD3, 0x32, 0xD6, 0x4F, 0x9F, 0x8A, 0x61, 0xBB, 0x9D, 0x7C, 0x2C, 0xF8, 0x3B, 0x5E, 0x57, 0x56, 0x46, 0x76, 0x5C, 0xBB, 0x7C, 0x39, 0xDF, 0x77, 0xCB, 0x51, 0x9D, 0x93, 0x01, 0xCF, 0xFA, 0x7D, 0x73, 0x73, 0x66, 0x65, 0xAC, 0x8D, 0x82, 0x08, 0x9D, 0x93, 0xA5, 0x33, 0x31, 0x45, 0x61, 0x33, 0x44, 0x78, 0x5F, 0xDE, 0xEF, 0x2C, 0x0B, 0x24, 0xAB, 0x20, 0x1A, 0x37, 0x67, 0x15, 0xD7, 0x7A, 0x3D, 0x3B, 0x21, 0x5A, 0x5D, 0x2D, 0xFE, 0xBD, 0xF8, 0x0C, 0x86, 0x88, 0xA8, 0x43, 0xE1, 0x16, 0x6C, 0x83, 0x68, 0x66, 0x86, 0xE6, 0xBB, 0xA9, 0xDC, 0xBA, 0xD5, 0x10, 0x6D, 0x6C, 0x14, 0xEF, 0xC8, 0x22, 0xA6, 0xBD, 0x2A, 0x88, 0x04, 0xD1, 0x2D, 0x81, 0x11, 0x53, 0xA1, 0x0F, 0x1B, 0x0B, 0x11, 0xCA, 0x29, 0xC6, 0x05, 0xD1, 0x69, 0x5B, 0x53, 0x21, 0x42, 0x93, 0xC3, 0x7F, 0x6D, 0xA5, 0x29, 0x69, 0xBE, 0xBF, 0xD2, 0x8C, 0x75, 0xDE, 0x89, 0x4F, 0xDB, 0xB3, 0xC6, 0xC1, 0xB4, 0x05, 0x85, 0xAA, 0x9E, 0x08, 0xAE, 0x0C, 0x22, 0xE4, 0x81, 0x9E, 0x3D, 0x6B, 0x66, 0x72, 0x51, 0xC7, 0x64, 0xED, 0xCA, 0x4A, 0x75, 0x17, 0x52, 0x25, 0x10, 0x21, 0x43, 0x7B, 0xBB, 0xE1, 0xDB, 0xCD, 0xB4, 0xDB, 0x7A, 0x2C, 0x3B, 0xD5, 0x14, 0x8C, 0xF1, 0x10, 0xE1, 0x9F, 0x8D, 0x4B, 0xEF, 0x37, 0x45, 0xC8, 0x52, 0x53, 0x0B, 0xA1, 0x41, 0x25, 0x6E, 0xAD, 0xEC, 0xC0, 0xFA, 0xD5, 0x2B, 0x3D, 0x1B, 0x97, 0xE4, 0x0D, 0x2C, 0xAB, 0x0A, 0xAC, 0x91, 0x96, 0x10, 0x9A, 0x36, 0x71, 0x29, 0x92, 0xF2, 0xB0, 0x22, 0xB0, 0xD6, 0xE1, 0xC6, 0x66, 0x66, 0xEC, 0x2B, 0x51, 0x45, 0x5C, 0xB4, 0xB8, 0xA8, 0xCF, 0xD2, 0xD7, 0xD6, 0x12, 0x51, 0x64, 0x69, 0xA3, 0x1A, 0xAC, 0x9B, 0x8D, 0xD3, 0x1E, 0x79, 0xA6, 0x7A, 0xCA, 0xE8, 0x13, 0xA3, 0xF3, 0x44, 0x54, 0x39, 0x21, 0xCA, 0xF9, 0xB3, 0xAA, 0x21, 0xD2, 0x05, 0x52, 0xD1, 0x63, 0x32, 0x12, 0x22, 0x1D, 0x56, 0x08, 0x53, 0x07, 0x36, 0x4F, 0xC0, 0x06, 0x1B, 0x12, 0x86, 0x26, 0x5A, 0x23, 0xA3, 0x62, 0x22, 0x8A, 0x5A, 0xE6, 0xA0, 0x50, 0xA4, 0x45, 0xFD, 0x99, 0x55, 0x0A, 0x39, 0x1E, 0xEA, 0x61, 0x7F, 0x69, 0x75, 0x47, 0x65, 0x58, 0x22, 0x8A, 0xF9, 0x31, 0x5D, 0xF3, 0x45, 0x26, 0xB9, 0x0E, 0xEA, 0x7E, 0xA2, 0x18, 0xA9, 0x19, 0x63, 0x89, 0xA8, 0xAF, 0x08, 0xE4, 0x42, 0x4C, 0xAE, 0x39, 0xCE, 0x2B, 0xFC, 0x4F, 0xD4, 0x23, 0xB6, 0x52, 0xAC, 0xB5, 0x6E, 0x4B, 0x84, 0xFC, 0x4D, 0x9E, 0xEA, 0x3D, 0xDD, 0x57, 0xBD, 0x89, 0x96, 0x48, 0x47, 0x7C, 0x84, 0xC1, 0x8C, 0xF5, 0x96, 0x08, 0x6B, 0xB2, 0x28, 0xB3, 0xD3, 0x75, 0x8A, 0x83, 0xCA, 0xB0, 0xDC, 0xC8, 0x62, 0x53, 0x2C, 0x8B, 0xAA, 0x74, 0xDA, 0x83, 0x72, 0x61, 0x9F, 0x1C, 0x0A, 0xD7, 0x76, 0xA5, 0x69, 0x50, 0x58, 0x8C, 0x40, 0xB9, 0xB7, 0x9C, 0xF6, 0x0B, 0x4F, 0xB7, 0x3B, 0xA3, 0x74, 0x65, 0x94, 0xE9, 0x7C, 0x93, 0xDD, 0x19, 0xF5, 0xB4, 0x48, 0x11, 0x97, 0x56, 0xB9, 0x3B, 0xC3, 0xB0, 0x95, 0xCA, 0x95, 0x35, 0xC5, 0x0A, 0x05, 0xA7, 0x45, 0xA8, 0xAC, 0x91, 0x6E, 0x97, 0xA6, 0x1D, 0x22, 0x93, 0xE7, 0xDC, 0x4C, 0x17, 0xE5, 0xFF, 0xAC, 0xB3, 0xD6, 0xC8, 0x0A, 0x88, 0x90, 0x58, 0xAC, 0xE3, 0x90, 0x7E, 0x9C, 0x50, 0x2E, 0x42, 0x95, 0x80, 0xB4, 0x16, 0x22, 0x8A, 0x75, 0xEE, 0x50, 0x93, 0xF7, 0x9E, 0xA5, 0xAA, 0x3B, 0xB2, 0xD2, 0x9D, 0x51, 0x1E, 0xB4, 0x8E, 0x02, 0x2E, 0x5B, 0x44, 0x75, 0x01, 0x21, 0x2E, 0xD2, 0x55, 0xF5, 0x68, 0x3C, 0x44, 0x70, 0x65, 0x4D, 0x0A, 0xA8, 0xC3, 0x82, 0x1B, 0x97, 0x23, 0x5C, 0xA3, 0xAD, 0x91, 0x36, 0x88, 0xA8, 0x56, 0x34, 0x98, 0x78, 0x17, 0x8C, 0x2A, 0xF2, 0x46, 0x8D, 0x84, 0x88, 0xEA, 0x80, 0x9B, 0x18, 0x50, 0xEB, 0xEA, 0x03, 0xEB, 0xDC, 0x19, 0xD5, 0x01, 0x33, 0x44, 0x74, 0x96, 0x48, 0xD7, 0x08, 0xCD, 0x78, 0x77, 0xC6, 0x10, 0x99, 0x1F, 0x13, 0x6A, 0x83, 0x88, 0x62, 0x65, 0xAB, 0x8E, 0xB5, 0x59, 0x61, 0x51, 0x05, 0xAD, 0x0C, 0x51, 0x83, 0x3B, 0x8F, 0xC2, 0xD2, 0x95, 0x71, 0x9C, 0x14, 0xB0, 0x53, 0xE5, 0xED, 0xAC, 0x82, 0xA8, 0x0C, 0x51, 0xE4, 0xA0, 0xCA, 0x18, 0x41, 0x9A, 0xEC, 0xD6, 0x19, 0xA2, 0x82, 0x10, 0xC1, 0x42, 0x34, 0x39, 0x19, 0xCA, 0x10, 0x89, 0xE2, 0x8B, 0x08, 0x51, 0xAA, 0xDB, 0xF4, 0xAD, 0xAB, 0x78, 0x6F, 0x0F, 0x0F, 0x04, 0x64, 0xC6, 0xB3, 0x0A, 0xE5, 0x29, 0x4D, 0xBF, 0x31, 0x05, 0x43, 0x14, 0x10, 0x72, 0x28, 0x58, 0x8E, 0x9D, 0x05, 0xA0, 0x32, 0x4B, 0x75, 0x75, 0x97, 0xB8, 0x16, 0x92, 0xAE, 0xCA, 0x46, 0x61, 0x40, 0x91, 0x79, 0xDE, 0x45, 0x96, 0x49, 0x2B, 0x75, 0x51, 0x44, 0xAF, 0xFB, 0x3E, 0x89, 0xBA, 0xFA, 0x13, 0xC7, 0x6E, 0xD5, 0xA6, 0x79, 0x88, 0x13, 0x28, 0xAA, 0x1A, 0xAB, 0xDA, 0xDD, 0x08, 0x57, 0x3E, 0xAC, 0x93, 0xCA, 0xBC, 0x23, 0x76, 0xC2, 0x08, 0xA9, 0x8A, 0x51, 0x12, 0x8E, 0x61, 0x6A, 0xAA, 0xF8, 0xE7, 0xA0, 0x52, 0x32, 0x6B, 0xD6, 0x3A, 0xCD, 0x2E, 0x43, 0xDA, 0xEE, 0xA8, 0x8F, 0xCE, 0xA6, 0xC8, 0x4B, 0xE0, 0x64, 0x56, 0x71, 0xE2, 0xAA, 0x02, 0xC6, 0x3A, 0x57, 0x66, 0x43, 0x4C, 0x44, 0x7D, 0x7F, 0x43, 0x1B, 0x45, 0x05, 0x91, 0xAE, 0x7C, 0x96, 0x36, 0x88, 0x4C, 0x9F, 0x34, 0xB4, 0x2D, 0xE8, 0x6F, 0xA4, 0x25, 0xA2, 0x9A, 0x0A, 0x60, 0x88, 0x1A, 0x6C, 0x89, 0xA8, 0x20, 0xC2, 0xED, 0x75, 0xAB, 0xB8, 0x99, 0xA5, 0x49, 0x00, 0x51, 0xDD, 0xA6, 0x59, 0xD7, 0x1C, 0x9F, 0xF1, 0xEE, 0x0C, 0x6A, 0xF2, 0xF6, 0x98, 0x54, 0xB9, 0x28, 0x4C, 0xCF, 0xE8, 0x82, 0x48, 0xEB, 0x46, 0xC2, 0x18, 0xDD, 0xA4, 0xDD, 0x67, 0x9E, 0x7A, 0x68, 0x6A, 0xAF, 0xA6, 0xBD, 0xD6, 0x71, 0xDA, 0xAF, 0xBF, 0x76, 0xC4, 0xD7, 0xAF, 0x6A, 0xA8, 0xBF, 0x2B, 0x2D, 0xD3, 0xE6, 0xE8, 0xE7, 0x7A, 0x86, 0x4E, 0x41, 0x22, 0x35, 0xCF, 0xC5, 0x98, 0x66, 0x88, 0xAF, 0x75, 0x19, 0x75, 0xDE, 0x9D, 0x83, 0x44, 0x49, 0x4B, 0xA8, 0xCD, 0x69, 0x5D, 0xD9, 0xD6, 0x64, 0x1B, 0x0C, 0xB3, 0x48, 0xC2, 0x34, 0xEC, 0xF7, 0xFB, 0xC3, 0xF9, 0xF9, 0x79, 0x6D, 0xBB, 0x31, 0x89, 0x2A, 0x93, 0x8D, 0xCA, 0x0D, 0x7D, 0xFF, 0x3D, 0xCD, 0xF5, 0x69, 0xE4, 0x8E, 0x83, 0x85, 0x35, 0x2F, 0xDB, 0x92, 0x6C, 0x7E, 0xF5, 0xDD, 0x57, 0x69, 0x76, 0xB6, 0xB7, 0xB7, 0xC5, 0xC0, 0xCB, 0x6D, 0x0C, 0x02, 0x39, 0x8E, 0x63, 0xC7, 0x8E, 0x89, 0x23, 0x47, 0x8E, 0x38, 0x3F, 0xD1, 0x26, 0x03, 0x33, 0xBF, 0x7B, 0x7B, 0x7B, 0xB2, 0x7F, 0x96, 0x9D, 0xB6, 0x1B, 0x11, 0x44, 0x6E, 0x6C, 0xE4, 0xCB, 0x7B, 0xA5, 0xB1, 0x44, 0x5A, 0x21, 0xA2, 0xCA, 0xB4, 0x2A, 0x9F, 0x8E, 0xFE, 0xAC, 0xC7, 0x8C, 0x39, 0x6A, 0x47, 0x96, 0x47, 0xF0, 0x00, 0x9C, 0x0F, 0x1F, 0x3E, 0x38, 0x2E, 0x6A, 0x90, 0x21, 0x31, 0x06, 0x90, 0x4E, 0x9F, 0x3E, 0x2D, 0xE1, 0x98, 0x1E, 0x01, 0xA5, 0x60, 0x5A, 0x0A, 0xDC, 0x15, 0x1D, 0x7D, 0x97, 0x77, 0x70, 0x52, 0x39, 0x44, 0x4E, 0x77, 0xCD, 0xD2, 0xED, 0xE1, 0x81, 0x92, 0x8D, 0x2A, 0x37, 0x42, 0x29, 0x2E, 0x9C, 0x68, 0x44, 0xCA, 0x33, 0x23, 0x78, 0xDE, 0xBC, 0x79, 0xE3, 0xB4, 0xAF, 0x2A, 0xF0, 0xC9, 0x1B, 0x49, 0x49, 0x90, 0xBA, 0x72, 0x34, 0xA3, 0x60, 0x7A, 0x27, 0x83, 0x51, 0xE9, 0xE6, 0x1C, 0x30, 0x8B, 0x4C, 0x16, 0x1B, 0x01, 0x11, 0x0E, 0x7E, 0x61, 0x81, 0xEE, 0x34, 0xC8, 0xD8, 0xC8, 0xD2, 0xC5, 0x8C, 0xD3, 0x1E, 0x40, 0x6E, 0xCD, 0x09, 0xC0, 0x41, 0x60, 0x5C, 0x14, 0x9E, 0xB0, 0x2E, 0x5C, 0xB8, 0xE0, 0xC0, 0x04, 0xB7, 0x07, 0xAB, 0x04, 0x90, 0xE6, 0xE6, 0xFA, 0xB9, 0x0B, 0xE7, 0x8C, 0x80, 0x88, 0xD2, 0xA5, 0x15, 0x19, 0x65, 0x54, 0x0F, 0x10, 0x46, 0x52, 0x47, 0x1D, 0x68, 0x1E, 0x3F, 0x7E, 0x9C, 0xC9, 0x6D, 0x65, 0xB6, 0x77, 0xD2, 0x1A, 0x5D, 0xBF, 0x7E, 0xDD, 0x71, 0x77, 0xAE, 0x16, 0x3C, 0x80, 0x2D, 0x85, 0x88, 0xDA, 0xA5, 0x41, 0x4F, 0x9F, 0xDA, 0x54, 0x92, 0xEA, 0x03, 0x84, 0x80, 0x79, 0x4D, 0x9A, 0x66, 0x6A, 0xEB, 0x13, 0xDF, 0xEF, 0xB3, 0x8E, 0x9B, 0x2B, 0x02, 0x92, 0x31, 0x10, 0x21, 0x9D, 0x81, 0x3D, 0xDD, 0xA9, 0x64, 0x4F, 0x90, 0x0D, 0xBF, 0xBB, 0x59, 0x09, 0x40, 0xD1, 0x20, 0x61, 0xA8, 0xDC, 0xB7, 0x13, 0x22, 0xA7, 0x3B, 0x3B, 0x74, 0xE9, 0x7B, 0x08, 0xE5, 0xAC, 0xA6, 0x97, 0x48, 0xB8, 0x00, 0x9D, 0xAB, 0x0C, 0xA0, 0x83, 0x20, 0xED, 0x79, 0x96, 0x71, 0x40, 0x0A, 0x51, 0x69, 0xA5, 0x20, 0xD4, 0xA3, 0x2A, 0x64, 0xC2, 0xCD, 0xBE, 0x6F, 0xD1, 0x92, 0x03, 0x90, 0x8A, 0x81, 0xAA, 0x02, 0x08, 0xEA, 0xCB, 0x20, 0x12, 0x20, 0xC3, 0x22, 0xE6, 0x8D, 0x8D, 0x8C, 0x80, 0x08, 0x27, 0x9C, 0x7A, 0x45, 0xEB, 0x83, 0x07, 0xA6, 0x26, 0x20, 0x71, 0xB5, 0x2F, 0x8E, 0x4E, 0xE0, 0xAE, 0x01, 0x33, 0xC8, 0x3E, 0xC8, 0xB8, 0x11, 0xE4, 0xBC, 0x9D, 0x10, 0xE9, 0xB0, 0x46, 0xD0, 0x9D, 0x3B, 0x26, 0xDE, 0xDB, 0xDA, 0x25, 0x1B, 0x09, 0x44, 0x34, 0x13, 0x04, 0x90, 0xFD, 0xB9, 0x36, 0x1C, 0x1F, 0x5D, 0x40, 0x59, 0x5A, 0x4C, 0xA4, 0x2B, 0x36, 0x52, 0xEA, 0xF5, 0x4C, 0x59, 0xBE, 0xD3, 0x95, 0xED, 0x95, 0x7B, 0xAA, 0x62, 0xA6, 0x20, 0xA0, 0x89, 0x89, 0x09, 0x71, 0xFE, 0xFC, 0x79, 0x71, 0xE6, 0xCC, 0x19, 0x71, 0xE2, 0xC4, 0x09, 0xE7, 0xB9, 0x9D, 0x9D, 0x1D, 0xF1, 0xF1, 0xE3, 0x47, 0xF1, 0xFA, 0xF5, 0x6B, 0xE7, 0x71, 0x92, 0xD4, 0xFB, 0xD1, 0xA6, 0x02, 0x39, 0x94, 0x87, 0x0F, 0x1F, 0x3A, 0x9F, 0x11, 0xA7, 0xDB, 0xB2, 0x93, 0xDC, 0x84, 0xE4, 0x5D, 0xCF, 0xE5, 0x5A, 0x14, 0x58, 0xFB, 0xFE, 0x99, 0x6E, 0x3E, 0x2D, 0xAC, 0xB2, 0x97, 0xF1, 0x44, 0x0B, 0x07, 0x30, 0xE7, 0x64, 0x8A, 0xFB, 0x31, 0x09, 0x2D, 0x40, 0x73, 0xE3, 0xC6, 0x0D, 0x07, 0x84, 0x28, 0x7D, 0xF9, 0xF2, 0x45, 0xBC, 0x7C, 0xF9, 0x52, 0xBC, 0x7D, 0xFB, 0x36, 0x16, 0x9E, 0x8B, 0x17, 0x2F, 0x46, 0xBE, 0x7F, 0x1C, 0x44, 0x08, 0xB0, 0x67, 0x9D, 0xFC, 0xC8, 0x96, 0x37, 0x7A, 0xB4, 0x28, 0xB0, 0xF6, 0x47, 0x0A, 0xB4, 0x77, 0x8B, 0x0F, 0xC7, 0x48, 0x18, 0x84, 0x54, 0x17, 0x82, 0x4C, 0x3A, 0x00, 0x41, 0xC8, 0x48, 0x47, 0x09, 0x56, 0x23, 0x09, 0x20, 0x05, 0xCA, 0x95, 0x2B, 0x57, 0x46, 0x16, 0x2A, 0x08, 0xDF, 0xCD, 0x9B, 0x37, 0x9D, 0xBF, 0x25, 0xBD, 0x3F, 0x71, 0xBC, 0x28, 0xE1, 0x76, 0x63, 0x23, 0x04, 0xA8, 0x34, 0xC9, 0xB6, 0x4A, 0x0A, 0xF5, 0x75, 0x5A, 0x0B, 0x8C, 0xDA, 0xE0, 0x32, 0xAB, 0xC9, 0x6A, 0xBB, 0x27, 0x05, 0x23, 0x21, 0x77, 0x34, 0x74, 0x50, 0x61, 0x00, 0x3E, 0x7D, 0xFA, 0x24, 0x9E, 0x3C, 0x79, 0xE2, 0x34, 0x3C, 0x0E, 0x83, 0x14, 0x14, 0xFE, 0x9E, 0x17, 0x9E, 0x30, 0x48, 0xC1, 0xE3, 0xB5, 0x12, 0x22, 0x9D, 0x9B, 0xE8, 0x42, 0x58, 0xEF, 0x06, 0x97, 0x09, 0xAB, 0x57, 0xEE, 0x6A, 0x91, 0xEE, 0x28, 0xA0, 0x8E, 0xB3, 0x42, 0x67, 0xCF, 0x9E, 0xDD, 0xF7, 0x1C, 0xE0, 0x79, 0xFF, 0xFE, 0xBD, 0xD3, 0xF0, 0x38, 0xA8, 0x53, 0xA7, 0x4E, 0x1D, 0xB0, 0x46, 0xCA, 0x55, 0xC1, 0xD5, 0xC1, 0x75, 0xE5, 0x91, 0x7F, 0x7C, 0x5D, 0x7B, 0x21, 0x52, 0x23, 0x35, 0x5D, 0x6E, 0x4D, 0x09, 0x53, 0x2D, 0x70, 0x6F, 0xF8, 0xAE, 0x72, 0x5C, 0x9C, 0x7B, 0x52, 0xE2, 0xE6, 0xC5, 0xC2, 0x00, 0x01, 0x9C, 0x60, 0x00, 0x8D, 0xC7, 0x78, 0x2E, 0x0C, 0x52, 0xF8, 0x3D, 0x2B, 0x2B, 0x2B, 0xE2, 0xF9, 0xF3, 0xE7, 0x89, 0xB1, 0x4F, 0x92, 0xFC, 0xE3, 0x6B, 0xA7, 0x8A, 0x8B, 0x8C, 0x85, 0x48, 0xB9, 0x35, 0xDD, 0x77, 0x2A, 0x83, 0x55, 0xBA, 0x7B, 0xD7, 0xB5, 0x7E, 0x18, 0xBD, 0xE9, 0xB5, 0x4C, 0xED, 0x44, 0x88, 0xC2, 0x40, 0x7C, 0xFE, 0xFC, 0xF9, 0xC0, 0x6B, 0xC2, 0xCF, 0x85, 0xDF, 0x03, 0x0B, 0x34, 0x6E, 0xE4, 0x96, 0x0D, 0x24, 0xCB, 0x21, 0xC2, 0x89, 0x2D, 0x6B, 0x34, 0x05, 0x98, 0xE4, 0x05, 0x2C, 0x4E, 0x9E, 0x74, 0x17, 0x11, 0xE0, 0x7B, 0x29, 0xAD, 0xD3, 0xF6, 0x76, 0x77, 0x14, 0x0F, 0xC5, 0x69, 0x2A, 0x54, 0xCE, 0x10, 0x8C, 0x81, 0xE2, 0x9E, 0x9B, 0xA2, 0x2C, 0x81, 0x08, 0xE5, 0x8D, 0xA8, 0x5C, 0x5A, 0xE5, 0x2B, 0x60, 0x11, 0xB7, 0xE8, 0x8C, 0x8F, 0xA2, 0x84, 0xE5, 0xDD, 0xA8, 0x71, 0xC2, 0xF9, 0x81, 0xBB, 0x83, 0x85, 0x42, 0x20, 0x9E, 0xC5, 0x4A, 0x21, 0x36, 0xC5, 0x7B, 0xF0, 0x5E, 0x7C, 0xC6, 0x8F, 0x3F, 0xBA, 0xCF, 0x27, 0x4D, 0x6F, 0xE4, 0x01, 0x42, 0x3F, 0x44, 0xC5, 0x75, 0x58, 0x18, 0x20, 0xC4, 0x2C, 0x38, 0x81, 0x18, 0xA2, 0x97, 0x2D, 0x8C, 0xE6, 0xD0, 0x60, 0xA5, 0x94, 0x30, 0xB9, 0x1B, 0x57, 0x21, 0x80, 0xE3, 0x8C, 0x4A, 0x96, 0x36, 0xF9, 0xA6, 0xED, 0x87, 0x4D, 0x39, 0x10, 0xB8, 0x17, 0x5C, 0xDD, 0x14, 0x4B, 0x8C, 0x28, 0xC0, 0x62, 0x59, 0xE4, 0xCE, 0x82, 0xC2, 0xD4, 0x4E, 0x9E, 0x3B, 0x96, 0xD9, 0xA2, 0x3C, 0x01, 0x31, 0x45, 0x10, 0xDD, 0x28, 0x88, 0xE0, 0x42, 0xEA, 0x0C, 0x52, 0x18, 0x88, 0x70, 0x0E, 0x28, 0xEA, 0x39, 0x86, 0xA8, 0x41, 0x20, 0xA9, 0x21, 0xB3, 0x5F, 0xD7, 0x7C, 0x50, 0xE1, 0xBC, 0xCE, 0xF1, 0xE3, 0xC7, 0x0F, 0xBC, 0x26, 0xFC, 0x5C, 0xDE, 0x5C, 0xD0, 0x38, 0xF9, 0xC7, 0x39, 0xA8, 0x1F, 0x44, 0x0A, 0x24, 0xC4, 0x47, 0x73, 0x73, 0xF6, 0x41, 0x84, 0x55, 0x16, 0x93, 0x31, 0x51, 0x79, 0x18, 0x08, 0x24, 0x1F, 0x83, 0xA3, 0xAF, 0xA8, 0x8C, 0x36, 0x43, 0x44, 0x10, 0x6C, 0x97, 0x3D, 0xFC, 0x2F, 0x96, 0x3A, 0x70, 0x6F, 0x0D, 0xD7, 0x89, 0x59, 0xD3, 0x84, 0x1C, 0x50, 0x18, 0x8A, 0x6B, 0xD7, 0xAE, 0x39, 0xE0, 0xA0, 0xE1, 0x71, 0x18, 0xA0, 0xA8, 0x5C, 0x52, 0xF1, 0x8B, 0x74, 0x32, 0x00, 0xFA, 0x7A, 0xBD, 0x21, 0x52, 0xC3, 0x7F, 0xAC, 0xEE, 0xB0, 0x61, 0x0F, 0x0E, 0x55, 0xF4, 0xD5, 0x49, 0x58, 0x18, 0x87, 0x12, 0x0F, 0x94, 0x7A, 0x04, 0x63, 0x20, 0xC0, 0x83, 0x16, 0x8C, 0x87, 0x54, 0x39, 0x88, 0x0E, 0xF9, 0xC7, 0x47, 0xB3, 0x4F, 0x83, 0x15, 0xB7, 0x20, 0x46, 0x42, 0x12, 0xEE, 0xCD, 0xF4, 0x38, 0x49, 0xD5, 0x0F, 0x61, 0x69, 0x33, 0xDC, 0x5A, 0x9C, 0x35, 0xC2, 0x44, 0x6B, 0x10, 0xA4, 0xB0, 0xF0, 0xB7, 0x47, 0x8F, 0x1E, 0x69, 0xB1, 0x42, 0x90, 0xBF, 0xFA, 0xA3, 0xDF, 0x1C, 0x88, 0xDC, 0xAB, 0xC7, 0x05, 0xC9, 0x64, 0xF7, 0x86, 0x12, 0x8B, 0xAD, 0xAD, 0x2D, 0x07, 0x20, 0x80, 0x94, 0x14, 0x60, 0xDF, 0xBF, 0x7F, 0xFF, 0x40, 0x05, 0x23, 0xA0, 0xC1, 0x73, 0xF7, 0xEE, 0xDD, 0xD3, 0x06, 0x10, 0xDC, 0x98, 0x6F, 0x89, 0x68, 0x20, 0x2A, 0xBD, 0xB2, 0x91, 0x26, 0x88, 0x75, 0x0B, 0xFF, 0x75, 0xED, 0x9A, 0x53, 0x44, 0x28, 0x3F, 0xED, 0xF5, 0x7A, 0xCE, 0xB4, 0xC2, 0xB2, 0x81, 0xAB, 0x08, 0xFC, 0xE5, 0x43, 0x58, 0x4D, 0x3A, 0xBE, 0x9E, 0xC8, 0xC8, 0xCA, 0x46, 0x2A, 0xAB, 0x84, 0xF0, 0x63, 0x75, 0xB5, 0x9C, 0x3D, 0xD1, 0xB2, 0x0D, 0x06, 0xD6, 0x9C, 0x35, 0xF0, 0xB8, 0xE2, 0xA7, 0x0D, 0xDB, 0x1A, 0x68, 0xFF, 0x31, 0xD1, 0x01, 0x6E, 0xF5, 0xB6, 0x0C, 0xB0, 0x46, 0xB0, 0x4A, 0x28, 0xD2, 0x37, 0x25, 0xF0, 0x0E, 0x5A, 0xA0, 0xAB, 0x57, 0xAF, 0xC6, 0xC6, 0x46, 0x55, 0x59, 0x21, 0x3F, 0xA0, 0x5E, 0x27, 0xFB, 0x5C, 0x2B, 0xDD, 0x59, 0x52, 0x4A, 0x00, 0xA3, 0x39, 0x1D, 0xAB, 0x49, 0xB2, 0xBB, 0xDC, 0x81, 0xB4, 0x92, 0x6D, 0xA7, 0x8A, 0x10, 0x6B, 0xBE, 0xAA, 0x16, 0xEE, 0x16, 0x02, 0xA8, 0x5D, 0x9D, 0x14, 0x69, 0xF3, 0x43, 0xB5, 0x75, 0x67, 0xE3, 0x2C, 0x13, 0x52, 0x02, 0x59, 0x36, 0x7B, 0xD1, 0x79, 0xD5, 0x23, 0xC0, 0xC6, 0x09, 0xAC, 0x52, 0x48, 0x2C, 0xFA, 0x00, 0xDD, 0x11, 0x14, 0x09, 0xC6, 0xDA, 0x42, 0x14, 0x4C, 0x09, 0x60, 0xB4, 0x8D, 0x81, 0x0F, 0xE2, 0xA6, 0x2A, 0x80, 0xC2, 0x48, 0xED, 0x0E, 0x56, 0x56, 0x7A, 0x6E, 0xAD, 0xAA, 0xF8, 0x08, 0x00, 0xCD, 0x8F, 0xD6, 0x9B, 0x3F, 0x23, 0x8D, 0x85, 0x6A, 0xE9, 0xCE, 0x92, 0x63, 0x15, 0x37, 0x18, 0x57, 0x4D, 0x57, 0xB9, 0x07, 0x72, 0x59, 0xA8, 0x2D, 0x42, 0x73, 0x8D, 0x91, 0xF4, 0xB1, 0xDE, 0x32, 0x22, 0xE4, 0x91, 0x36, 0x4B, 0xBC, 0x0B, 0x85, 0x02, 0xC8, 0x8D, 0xCB, 0xF0, 0x0F, 0x77, 0xD1, 0x13, 0xD9, 0x00, 0x69, 0x31, 0x44, 0x89, 0x02, 0x4C, 0x38, 0xA7, 0x0A, 0x30, 0xD7, 0x82, 0x8C, 0xDF, 0x1D, 0x09, 0x41, 0xBC, 0x32, 0x2C, 0x80, 0x05, 0xA3, 0x45, 0xB4, 0xF8, 0xC2, 0x34, 0x1F, 0xA4, 0x17, 0x2F, 0x5E, 0xC4, 0xAE, 0x49, 0xA3, 0x1D, 0xC1, 0x76, 0x9C, 0x1B, 0x5D, 0x15, 0x01, 0x88, 0x21, 0x32, 0x2F, 0xEC, 0x1F, 0x81, 0x84, 0x60, 0x1B, 0x56, 0x49, 0xD7, 0x9D, 0x42, 0x70, 0xBB, 0xBD, 0xEE, 0x88, 0xE8, 0xFC, 0x00, 0x31, 0x44, 0x46, 0x0A, 0x37, 0x0B, 0xE8, 0x39, 0x8F, 0x00, 0x10, 0xE6, 0xDA, 0x28, 0xAD, 0x12, 0xAC, 0x0F, 0x02, 0x7A, 0x7F, 0x72, 0xF5, 0x81, 0xF7, 0x9D, 0xF9, 0xEB, 0xA9, 0x19, 0x22, 0x23, 0xB5, 0xFF, 0x06, 0xA0, 0xC8, 0x2B, 0x01, 0x24, 0x7F, 0x79, 0x73, 0x8E, 0x4F, 0x94, 0xBE, 0x15, 0xCD, 0x9F, 0xCE, 0x80, 0x3F, 0x46, 0x30, 0x5D, 0x7C, 0x5A, 0x83, 0x21, 0x32, 0x3B, 0x21, 0x21, 0xFB, 0xF4, 0xAE, 0xEC, 0xFB, 0xBF, 0x8E, 0x9E, 0x81, 0x9B, 0x43, 0x7E, 0x29, 0x78, 0x33, 0xF4, 0xB8, 0x80, 0x19, 0x0D, 0xD0, 0x04, 0x27, 0x7B, 0x87, 0xC3, 0xFF, 0xCA, 0xCF, 0xEB, 0x79, 0x23, 0x30, 0x9A, 0xD5, 0x1C, 0x0C, 0x91, 0x25, 0x30, 0xB9, 0x2E, 0xE7, 0x5C, 0xC4, 0x88, 0x72, 0x77, 0xDF, 0xD2, 0x9E, 0xFD, 0x75, 0x40, 0x41, 0x6D, 0x79, 0xD6, 0x8D, 0x0E, 0x1E, 0x86, 0xC8, 0x4A, 0xC1, 0x15, 0xCD, 0x7A, 0x41, 0x30, 0x5C, 0x5E, 0xD2, 0xA4, 0x20, 0xDC, 0x15, 0x52, 0x05, 0xEB, 0x9E, 0xCB, 0xD2, 0x97, 0x36, 0x60, 0x88, 0x6A, 0x11, 0x3F, 0x85, 0x2D, 0xCF, 0x7A, 0xA9, 0x47, 0xC0, 0x10, 0xB1, 0x4A, 0x81, 0xE8, 0x10, 0x77, 0x13, 0xAB, 0xA8, 0x52, 0x43, 0xD4, 0xE4, 0x2D, 0x34, 0x9B, 0xAA, 0xB4, 0xE7, 0x3C, 0xF5, 0x32, 0x6A, 0x24, 0x40, 0xEB, 0xB7, 0xDF, 0x18, 0x2B, 0x49, 0x29, 0x6F, 0xA4, 0x3A, 0xDA, 0x34, 0xEF, 0x4F, 0x61, 0xD0, 0xBA, 0x7C, 0x96, 0x5D, 0x06, 0x4B, 0xB9, 0xB3, 0xFF, 0x70, 0x5F, 0xB0, 0x72, 0x6A, 0xA0, 0x20, 0xFA, 0x17, 0xF7, 0x05, 0x2B, 0xA7, 0xFE, 0xD9, 0xF2, 0x36, 0x12, 0x66, 0x97, 0xC6, 0xCA, 0xE5, 0xCA, 0x24, 0x3F, 0x53, 0xC1, 0xD1, 0xD9, 0xDF, 0xB9, 0x4F, 0x58, 0x19, 0xF5, 0x37, 0x37, 0xB4, 0x0E, 0xEC, 0x5F, 0x2D, 0xF5, 0xB3, 0x10, 0x74, 0xDB, 0x90, 0x73, 0xAB, 0x75, 0xFB, 0x79, 0xC4, 0x4D, 0x78, 0x23, 0x74, 0x06, 0x89, 0xDB, 0x98, 0xF6, 0xBF, 0x20, 0x40, 0x91, 0x10, 0x79, 0x20, 0xFD, 0x20, 0xDB, 0x0E, 0x77, 0x18, 0xB7, 0x50, 0xFB, 0x5D, 0xB6, 0x4B, 0x61, 0x5E, 0x46, 0x81, 0x75, 0x94, 0x64, 0xB0, 0x7D, 0x49, 0xFE, 0xF8, 0x49, 0xB8, 0x53, 0xCC, 0x1D, 0x0E, 0x01, 0x1A, 0xA9, 0x77, 0x1E, 0x3C, 0x6B, 0x92, 0x95, 0xD7, 0x91, 0x9C, 0x0C, 0x79, 0x66, 0x95, 0x55, 0x50, 0xFF, 0x17, 0x60, 0x00, 0x5D, 0x64, 0xD8, 0x70, 0xC8, 0x71, 0xAC, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82, };

const char favicon_ico[] PROGMEM={0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x10, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x68, 0x04, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x13, 0x0B, 0x00, 0x00, 0x13, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0xDA, 0x00, 0xC0, 0xC0, 0xFF, 0x00, 0xDB, 0xDB, 0xFF, 0x00, 0xDB, 0xDB, 0xFF, 0x00, 0xDB, 0xDB, 0xFF, 0x00, 0xDB, 0xDB, 0xFF, 0x00, 0xDB, 0xDB, 0xFF, 0x00, 0xDB, 0xDB, 0xFF, 0x00, 0xDB, 0xDB, 0xFF, 0x00, 0xDB, 0xDB, 0xFF, 0x00, 0xDB, 0xDB, 0xFF, 0x00, 0xDB, 0xDB, 0xFF, 0x00, 0xDB, 0xDB, 0xFF, 0x00, 0xDB, 0xDB, 0xFF, 0x00, 0xC8, 0xC8, 0xFF, 0x00, 0x00, 0x00, 0xE4, 0x00, 0x00, 0x00, 0xDB, 0x00, 0xE0, 0xE0, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xE1, 0xE1, 0xFF, 0x00, 0x84, 0x84, 0xFF, 0x00, 0x55, 0x55, 0xFF, 0x00, 0x54, 0x54, 0xFF, 0x00, 0x81, 0x81, 0xFF, 0x00, 0xDD, 0xDD, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xEA, 0xEA, 0xFF, 0x00, 0x00, 0x00, 0xE5, 0x00, 0x00, 0x00, 0xDB, 0x00, 0xE0, 0xE0, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x8F, 0x8F, 0xFF, 0x00, 0x07, 0x07, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x05, 0x05, 0xFF, 0x00, 0x87, 0x87, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xEA, 0xEA, 0xFF, 0x00, 0x00, 0x00, 0xE5, 0x00, 0x00, 0x00, 0xDB, 0x00, 0xE0, 0xE0, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x96, 0x96, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x03, 0x03, 0xFF, 0x00, 0x66, 0x66, 0xFF, 0x00, 0xB2, 0xB2, 0xFF, 0x00, 0xB4, 0xB4, 0xFF, 0x00, 0x6B, 0x6B, 0xFF, 0x00, 0x05, 0x05, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x8C, 0x8C, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xEA, 0xEA, 0xFF, 0x00, 0x00, 0x00, 0xE5, 0x00, 0x00, 0x00, 0xDB, 0x00, 0xE0, 0xE0, 0xFF, 0x00, 0xEC, 0xEC, 0xFF, 0x00, 0x0C, 0x0C, 0xFF, 0x00, 0x02, 0x02, 0xFF, 0x00, 0xB0, 0xB0, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xB8, 0xB8, 0xFF, 0x00, 0x03, 0x03, 0xFF, 0x00, 0x08, 0x08, 0xFF, 0x00, 0xE6, 0xE6, 0xFF, 0x00, 0xEA, 0xEA, 0xFF, 0x00, 0x00, 0x00, 0xE5, 0x00, 0x00, 0x00, 0xDB, 0x00, 0xE0, 0xE0, 0xFF, 0x00, 0x9C, 0x9C, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x54, 0x54, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x5E, 0x5E, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x92, 0x92, 0xFF, 0x00, 0xEA, 0xEA, 0xFF, 0x00, 0x00, 0x00, 0xE5, 0x00, 0x00, 0x00, 0xDB, 0x00, 0xE0, 0xE0, 0xFF, 0x00, 0x73, 0x73, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x96, 0x96, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x9E, 0x9E, 0xFF, 0x00, 0x98, 0x98, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xA0, 0xA0, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x69, 0x69, 0xFF, 0x00, 0xEA, 0xEA, 0xFF, 0x00, 0x00, 0x00, 0xE5, 0x00, 0x00, 0x00, 0xDB, 0x00, 0xE0, 0xE0, 0xFF, 0x00, 0x78, 0x78, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x8E, 0x8E, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x0D, 0x0D, 0xFF, 0x00, 0x04, 0x04, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x98, 0x98, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x6E, 0x6E, 0xFF, 0x00, 0xEA, 0xEA, 0xFF, 0x00, 0x00, 0x00, 0xE5, 0x00, 0x00, 0x00, 0xDB, 0x00, 0xE0, 0xE0, 0xFF, 0x00, 0xAC, 0xAC, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x3B, 0x3B, 0xFF, 0x00, 0xFE, 0xFE, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x0B, 0x0B, 0xFF, 0x00, 0x01, 0x01, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x44, 0x44, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xA2, 0xA2, 0xFF, 0x00, 0xEA, 0xEA, 0xFF, 0x00, 0x00, 0x00, 0xE5, 0x00, 0x00, 0x00, 0xDB, 0x00, 0xE0, 0xE0, 0xFF, 0x00, 0xF8, 0xF8, 0xFF, 0x00, 0x1D, 0x1D, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x9D, 0x9D, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x0B, 0x0B, 0xFF, 0x00, 0x01, 0x01, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x97, 0x97, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x17, 0x17, 0xFF, 0x00, 0xF4, 0xF4, 0xFF, 0x00, 0xEA, 0xEA, 0xFF, 0x00, 0x00, 0x00, 0xE5, 0x00, 0x00, 0x00, 0xDB, 0x00, 0xE0, 0xE0, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xBE, 0xBE, 0xFF, 0x00, 0x1D, 0x1D, 0xFF, 0x00, 0xAC, 0xAC, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x0B, 0x0B, 0xFF, 0x00, 0x01, 0x01, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x6D, 0x6D, 0xFF, 0x00, 0x05, 0x05, 0xFF, 0x00, 0xB5, 0xB5, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xEA, 0xEA, 0xFF, 0x00, 0x00, 0x00, 0xE5, 0x00, 0x00, 0x00, 0xDB, 0x00, 0xE0, 0xE0, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x3B, 0x3B, 0xFF, 0x00, 0x31, 0x31, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFC, 0xFC, 0xFF, 0x00, 0xEC, 0xEC, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xEA, 0xEA, 0xFF, 0x00, 0x00, 0x00, 0xE5, 0x00, 0x00, 0x00, 0xDB, 0x00, 0xE0, 0xE0, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFE, 0xFE, 0xFF, 0x00, 0xFE, 0xFE, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xEA, 0xEA, 0xFF, 0x00, 0x00, 0x00, 0xE5, 0x00, 0x00, 0x00, 0xDA, 0x00, 0xB7, 0xB7, 0xFF, 0x00, 0xD1, 0xD1, 0xFF, 0x00, 0xD1, 0xD1, 0xFF, 0x00, 0xD1, 0xD1, 0xFF, 0x00, 0xD1, 0xD1, 0xFF, 0x00, 0xD1, 0xD1, 0xFF, 0x00, 0xD1, 0xD1, 0xFF, 0x00, 0xD1, 0xD1, 0xFF, 0x00, 0xD1, 0xD1, 0xFF, 0x00, 0xD1, 0xD1, 0xFF, 0x00, 0xD1, 0xD1, 0xFF, 0x00, 0xD1, 0xD1, 0xFF, 0x00, 0xD1, 0xD1, 0xFF, 0x00, 0xBF, 0xBF, 0xFF, 0x00, 0x00, 0x00, 0xE4, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0xCB, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };

const char jquery_js[] PROGMEM={"!function(a,b){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){\"use strict\";var c=[],d=a.document,e=Object.getPrototypeOf,f=c.slice,g=c.concat,h=c.push,i=c.indexOf,j={},k=j.toString,l=j.hasOwnProperty,m=l.toString,n=m.call(Object),o={};function p(a,b){b=b||d;var c=b.createElement(\"script\");c.text=a,b.head.appendChild(c).parentNode.removeChild(c)}var q=\"3.1.1\",r=function(a,b){return new r.fn.init(a,b)},s=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,t=/^-ms-/,u=/-([a-z])/g,v=function(a,b){return b.toUpperCase()};r.fn=r.prototype={jquery:q,constructor:r,length:0,toArray:function(){return f.call(this)},get:function(a){return null==a?f.call(this):a<0?this[a+this.length]:this[a]},pushStack:function(a){var b=r.merge(this.constructor(),a);return b.prevObject=this,b},each:function(a){return r.each(this,a)},map:function(a){return this.pushStack(r.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(f.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(a<0?b:0);return this.pushStack(c>=0&&c<b?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:h,sort:c.sort,splice:c.splice},r.extend=r.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||r.isFunction(g)||(g={}),h===i&&(g=this,h--);h<i;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(r.isPlainObject(d)||(e=r.isArray(d)))?(e?(e=!1,f=c&&r.isArray(c)?c:[]):f=c&&r.isPlainObject(c)?c:{},g[b]=r.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},r.extend({expando:\"jQuery\"+(q+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===r.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){var b=r.type(a);return(\"number\"===b||\"string\"===b)&&!isNaN(a-parseFloat(a))},isPlainObject:function(a){var b,c;return!(!a||\"[object Object]\"!==k.call(a))&&(!(b=e(a))||(c=l.call(b,\"constructor\")&&b.constructor,\"function\"==typeof c&&m.call(c)===n))},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?j[k.call(a)]||\"object\":typeof a},globalEval:function(a){p(a)},camelCase:function(a){return a.replace(t,\"ms-\").replace(u,v)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b){var c,d=0;if(w(a)){for(c=a.length;d<c;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(s,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(w(Object(a))?r.merge(c,\"string\"==typeof a?[a]:a):h.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:i.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;d<c;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;f<g;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,f=0,h=[];if(w(a))for(d=a.length;f<d;f++)e=b(a[f],f,c),null!=e&&h.push(e);else for(f in a)e=b(a[f],f,c),null!=e&&h.push(e);return g.apply([],h)},guid:1,proxy:function(a,b){var c,d,e;if(\"string\"==typeof b&&(c=a[b],b=a,a=c),r.isFunction(a))return d=f.call(arguments,2),e=function(){return a.apply(b||this,d.concat(f.call(arguments)))},e.guid=a.guid=a.guid||r.guid++,e},now:Date.now,support:o}),\"function\"==typeof Symbol&&(r.fn[Symbol.iterator]=c[Symbol.iterator]),r.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(a,b){j[\"[object \"+b+\"]\"]=b.toLowerCase()});function w(a){var b=!!a&&\"length\"in a&&a.length,c=r.type(a);return\"function\"!==c&&!r.isWindow(a)&&(\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a)}var x=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C={}.hasOwnProperty,D=[],E=D.pop,F=D.push,G=D.push,H=D.slice,I=function(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},J=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",K=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",L=\"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",M=\"\\\\[\"+K+\"*(\"+L+\")(?:\"+K+\"*([*^$|!~]?=)\"+K+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+L+\"))|)\"+K+\"*\\\\]\",N=\":(\"+L+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+M+\")*)|.*)\\\\)|)\",O=new RegExp(K+\"+\",\"g\"),P=new RegExp(\"^\"+K+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+K+\"+$\",\"g\"),Q=new RegExp(\"^\"+K+\"*,\"+K+\"*\"),R=new RegExp(\"^\"+K+\"*([>+~]|\"+K+\")\"+K+\"*\"),S=new RegExp(\"=\"+K+\"*([^\\\\]'\\\"]*?)\"+K+\"*\\\\]\",\"g\"),T=new RegExp(N),U=new RegExp(\"^\"+L+\"$\"),V={ID:new RegExp(\"^#(\"+L+\")\"),CLASS:new RegExp(\"^\\\\.(\"+L+\")\"),TAG:new RegExp(\"^(\"+L+\"|[*])\"),ATTR:new RegExp(\"^\"+M),PSEUDO:new RegExp(\"^\"+N),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+K+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+K+\"*(?:([+-]|)\"+K+\"*(\\\\d+)|))\"+K+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+J+\")$\",\"i\"),needsContext:new RegExp(\"^\"+K+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+K+\"*((?:-\\\\d)?\\\\d*)\"+K+\"*\\\\)|)(?=[^-]|$)\",\"i\")},W=/^(?:input|select|textarea|button)$/i,X=/^h\\d$/i,Y=/^[^{]+\\{\\s*\\[native \\w/,Z=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,$=/[+~]/,_=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+K+\"?|(\"+K+\")|.)\",\"ig\"),aa=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:d<0?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ba=/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,ca=function(a,b){return b?\"\\0\"===a?\"\\ufffd\":a.slice(0,-1)+\"\\\\\"+a.charCodeAt(a.length-1).toString(16)+\" \":\"\\\\\"+a},da=function(){m()},ea=ta(function(a){return a.disabled===!0&&(\"form\"in a||\"label\"in a)},{dir:\"parentNode\",next:\"legend\"});try{G.apply(D=H.call(v.childNodes),v.childNodes),D[v.childNodes.length].nodeType}catch(fa){G={apply:D.length?function(a,b){F.apply(a,H.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s=b&&b.ownerDocument,w=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==w&&9!==w&&11!==w)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==w&&(l=Z.exec(a)))if(f=l[1]){if(9===w){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(s&&(j=s.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(l[2])return G.apply(d,b.getElementsByTagName(a)),d;if((f=l[3])&&c.getElementsByClassName&&b.getElementsByClassName)return G.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==w)s=b,r=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(ba,ca):b.setAttribute(\"id\",k=u),o=g(a),h=o.length;while(h--)o[h]=\"#\"+k+\" \"+sa(o[h]);r=o.join(\",\"),s=$.test(a)&&qa(b.parentNode)||b}if(r)try{return G.apply(d,s.querySelectorAll(r)),d}catch(x){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(P,\"$1\"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement(\"fieldset\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function oa(a){return function(b){return\"form\"in b?b.parentNode&&b.disabled===!1?\"label\"in b?\"label\"in b.parentNode?b.parentNode.disabled===a:b.disabled===a:b.isDisabled===a||b.isDisabled!==!a&&ea(b)===a:b.disabled===a:\"label\"in b&&b.disabled===a}}function pa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function qa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return!!b&&\"HTML\"!==b.nodeName},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),v!==n&&(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener(\"unload\",da,!1):e.attachEvent&&e.attachEvent(\"onunload\",da)),c.attributes=ja(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ja(function(a){return a.appendChild(n.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=Y.test(n.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){return a.getAttribute(\"id\")===b}},d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}}):(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){var c=\"undefined\"!=typeof a.getAttributeNode&&a.getAttributeNode(\"id\");return c&&c.value===b}},d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c,d,e,f=b.getElementById(a);if(f){if(c=f.getAttributeNode(\"id\"),c&&c.value===a)return[f];e=b.getElementsByName(a),d=0;while(f=e[d++])if(c=f.getAttributeNode(\"id\"),c&&c.value===a)return[f]}return[]}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\"undefined\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){if(\"undefined\"!=typeof b.getElementsByClassName&&p)return b.getElementsByClassName(a)},r=[],q=[],(c.qsa=Y.test(n.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML=\"<a id='\"+u+\"'></a><select id='\"+u+\"-\\r\\\\' msallowcapture=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowcapture^='']\").length&&q.push(\"[*^$]=\"+K+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+K+\"*(?:value|\"+J+\")\"),a.querySelectorAll(\"[id~=\"+u+\"-]\").length||q.push(\"~=\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\"),a.querySelectorAll(\"a#\"+u+\"+*\").length||q.push(\".#.+[+~]\")}),ja(function(a){a.innerHTML=\"<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>\";var b=n.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+K+\"*[*^$|!~]?=\"),2!==a.querySelectorAll(\":enabled\").length&&q.push(\":enabled\",\":disabled\"),o.appendChild(a).disabled=!0,2!==a.querySelectorAll(\":disabled\").length&&q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=Y.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,\"*\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",N)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=Y.test(o.compareDocumentPosition),t=b||Y.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?I(k,a)-I(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?I(k,a)-I(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?la(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(S,\"='$1']\"),c.matchesSelector&&p&&!A[b+\" \"]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&C.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.escape=function(a){return(a+\"\").replace(ba,ca)},ga.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:V,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(_,aa),a[3]=(a[3]||a[4]||a[5]||\"\").replace(_,aa),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return V.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&T.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(_,aa).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+K+\")\"+a+\"(\"+K+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||\"undefined\"!=typeof a.getAttribute&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?\"!=\"===b:!b||(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e.replace(O,\" \")+\" \").indexOf(c)>-1:\"|=\"===b&&(e===c||e.slice(0,c.length+1)===c+\"-\"))}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(P,\"$1\"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(_,aa),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return U.test(a||\"\")||ga.error(\"unsupported lang: \"+a),a=a.replace(_,aa).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:oa(!1),disabled:oa(!0),checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return X.test(a.nodeName)},input:function(a){return W.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:pa(function(){return[0]}),last:pa(function(a,b){return[b-1]}),eq:pa(function(a,b,c){return[c<0?c+b:c]}),even:pa(function(a,b){for(var c=0;c<b;c+=2)a.push(c);return a}),odd:pa(function(a,b){for(var c=1;c<b;c+=2)a.push(c);return a}),lt:pa(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:pa(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function ra(){}ra.prototype=d.filters=d.pseudos,d.setFilters=new ra,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=Q.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=R.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(P,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=V[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function sa(a){for(var b=0,c=a.length,d=\"\";b<c;b++)d+=a[b].value;return d}function ta(a,b,c){var d=b.dir,e=b.next,f=e||d,g=c&&\"parentNode\"===f,h=x++;return b.first?function(b,c,e){while(b=b[d])if(1===b.nodeType||g)return a(b,c,e);return!1}:function(b,c,i){var j,k,l,m=[w,h];if(i){while(b=b[d])if((1===b.nodeType||g)&&a(b,c,i))return!0}else while(b=b[d])if(1===b.nodeType||g)if(l=b[u]||(b[u]={}),k=l[b.uniqueID]||(l[b.uniqueID]={}),e&&e===b.nodeName.toLowerCase())b=b[d]||b;else{if((j=k[f])&&j[0]===w&&j[1]===h)return m[2]=j[2];if(k[f]=m,m[2]=a(b,c,i))return!0}return!1}}function ua(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function va(a,b,c){for(var d=0,e=b.length;d<e;d++)ga(a,b[d],c);return c}function wa(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;h<i;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function xa(a,b,c,d,e,f){return d&&!d[u]&&(d=xa(d)),e&&!e[u]&&(e=xa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||va(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:wa(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=wa(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?I(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=wa(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):G.apply(g,r)})}function ya(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ta(function(a){return a===b},h,!0),l=ta(function(a){return I(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];i<f;i++)if(c=d.relative[a[i].type])m=[ta(ua(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;e<f;e++)if(d.relative[a[e].type])break;return xa(i>1&&ua(m),i>1&&sa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(P,\"$1\"),c,i<e&&ya(a.slice(i,e)),e<f&&ya(a=a.slice(e)),e<f&&sa(a))}m.push(c)}return ua(m)}function za(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=E.call(i));u=wa(u)}G.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&ga.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=ya(b[c]),f[u]?d.push(f):e.push(f);f=A(a,za(e,d)),f.selector=a}return f},i=ga.select=function(a,b,c,e){var f,i,j,k,l,m=\"function\"==typeof a&&a,n=!e&&g(a=m.selector||a);if(c=c||[],1===n.length){if(i=n[0]=n[0].slice(0),i.length>2&&\"ID\"===(j=i[0]).type&&9===b.nodeType&&p&&d.relative[i[1].type]){if(b=(d.find.ID(j.matches[0].replace(_,aa),b)||[])[0],!b)return c;m&&(b=b.parentNode),a=a.slice(i.shift().value.length)}f=V.needsContext.test(a)?0:i.length;while(f--){if(j=i[f],d.relative[k=j.type])break;if((l=d.find[k])&&(e=l(j.matches[0].replace(_,aa),$.test(i[0].type)&&qa(b.parentNode)||b))){if(i.splice(f,1),a=e.length&&sa(i),!a)return G.apply(c,e),c;break}}}return(m||h(a,n))(e,b,!p,c,!b||$.test(a)&&qa(b.parentNode)||b),c},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement(\"fieldset\"))}),ja(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||ka(\"type|href|height|width\",function(a,b,c){if(!c)return a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||ka(\"value\",function(a,b,c){if(!c&&\"input\"===a.nodeName.toLowerCase())return a.defaultValue}),ja(function(a){return null==a.getAttribute(\"disabled\")})||ka(J,function(a,b,c){var d;if(!c)return a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);r.find=x,r.expr=x.selectors,r.expr[\":\"]=r.expr.pseudos,r.uniqueSort=r.unique=x.uniqueSort,r.text=x.getText,r.isXMLDoc=x.isXML,r.contains=x.contains,r.escapeSelector=x.escape;var y=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&r(a).is(c))break;d.push(a)}return d},z=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},A=r.expr.match.needsContext,B=/^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i,C=/^.[^:#\\[\\.,]*$/;function D(a,b,c){return r.isFunction(b)?r.grep(a,function(a,d){return!!b.call(a,d,a)!==c}):b.nodeType?r.grep(a,function(a){return a===b!==c}):\"string\"!=typeof b?r.grep(a,function(a){return i.call(b,a)>-1!==c}):C.test(b)?r.filter(b,a,c):(b=r.filter(b,a),r.grep(a,function(a){return i.call(b,a)>-1!==c&&1===a.nodeType}))}r.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?r.find.matchesSelector(d,a)?[d]:[]:r.find.matches(a,r.grep(b,function(a){return 1===a.nodeType}))},r.fn.extend({find:function(a){var b,c,d=this.length,e=this;if(\"string\"!=typeof a)return this.pushStack(r(a).filter(function(){for(b=0;b<d;b++)if(r.contains(e[b],this))return!0}));for(c=this.pushStack([]),b=0;b<d;b++)r.find(a,e[b],c);return d>1?r.uniqueSort(c):c},filter:function(a){return this.pushStack(D(this,a||[],!1))},not:function(a){return this.pushStack(D(this,a||[],!0))},is:function(a){return!!D(this,\"string\"==typeof a&&A.test(a)?r(a):a||[],!1).length}});var E,F=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,G=r.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||E,\"string\"==typeof a){if(e=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:F.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof r?b[0]:b,r.merge(this,r.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),B.test(e[1])&&r.isPlainObject(b))for(e in b)r.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&(this[0]=f,this.length=1),this}return a.nodeType?(this[0]=a,this.length=1,this):r.isFunction(a)?void 0!==c.ready?c.ready(a):a(r):r.makeArray(a,this)};G.prototype=r.fn,E=r(d);var H=/^(?:parents|prev(?:Until|All))/,I={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(a){var b=r(a,this),c=b.length;return this.filter(function(){for(var a=0;a<c;a++)if(r.contains(this,b[a]))return!0})},closest:function(a,b){var c,d=0,e=this.length,f=[],g=\"string\"!=typeof a&&r(a);if(!A.test(a))for(;d<e;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&r.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?r.uniqueSort(f):f)},index:function(a){return a?\"string\"==typeof a?i.call(r(a),this[0]):i.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(r.uniqueSort(r.merge(this.get(),r(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function J(a,b){while((a=a[b])&&1!==a.nodeType);return a}r.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return y(a,\"parentNode\")},parentsUntil:function(a,b,c){return y(a,\"parentNode\",c)},next:function(a){return J(a,\"nextSibling\")},prev:function(a){return J(a,\"previousSibling\")},nextAll:function(a){return y(a,\"nextSibling\")},prevAll:function(a){return y(a,\"previousSibling\")},nextUntil:function(a,b,c){return y(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return y(a,\"previousSibling\",c)},siblings:function(a){return z((a.parentNode||{}).firstChild,a)},children:function(a){return z(a.firstChild)},contents:function(a){return a.contentDocument||r.merge([],a.childNodes)}},function(a,b){r.fn[a]=function(c,d){var e=r.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=r.filter(d,e)),this.length>1&&(I[a]||r.uniqueSort(e),H.test(a)&&e.reverse()),this.pushStack(e)}});var K=/[^\\x20\\t\\r\\n\\f]+/g;function L(a){var b={};return r.each(a.match(K)||[],function(a,c){b[c]=!0}),b}r.Callbacks=function(a){a=\"string\"==typeof a?L(a):r.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function d(b){r.each(b,function(b,c){r.isFunction(c)?a.unique&&j.has(c)||f.push(c):c&&c.length&&\"string\"!==r.type(c)&&d(c)})}(arguments),c&&!b&&i()),this},remove:function(){return r.each(arguments,function(a,b){var c;while((c=r.inArray(b,f,c))>-1)f.splice(c,1),c<=h&&h--}),this},has:function(a){return a?r.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c=\"\",this},disabled:function(){return!f},lock:function(){return e=g=[],c||b||(f=c=\"\"),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j};function M(a){return a}function N(a){throw a}function O(a,b,c){var d;try{a&&r.isFunction(d=a.promise)?d.call(a).done(b).fail(c):a&&r.isFunction(d=a.then)?d.call(a,b,c):b.call(void 0,a)}catch(a){c.call(void 0,a)}}r.extend({Deferred:function(b){var c=[[\"notify\",\"progress\",r.Callbacks(\"memory\"),r.Callbacks(\"memory\"),2],[\"resolve\",\"done\",r.Callbacks(\"once memory\"),r.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",r.Callbacks(\"once memory\"),r.Callbacks(\"once memory\"),1,\"rejected\"]],d=\"pending\",e={state:function(){return d},always:function(){return f.done(arguments).fail(arguments),this},\"catch\":function(a){return e.then(null,a)},pipe:function(){var a=arguments;return r.Deferred(function(b){r.each(c,function(c,d){var e=r.isFunction(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);a&&r.isFunction(a.promise)?a.promise().progress(b.notify).done(b.resolve).fail(b.reject):b[d[0]+\"With\"](this,e?[a]:arguments)})}),a=null}).promise()},then:function(b,d,e){var f=0;function g(b,c,d,e){return function(){var h=this,i=arguments,j=function(){var a,j;if(!(b<f)){if(a=d.apply(h,i),a===c.promise())throw new TypeError(\"Thenable self-resolution\");j=a&&(\"object\"==typeof a||\"function\"==typeof a)&&a.then,r.isFunction(j)?e?j.call(a,g(f,c,M,e),g(f,c,N,e)):(f++,j.call(a,g(f,c,M,e),g(f,c,N,e),g(f,c,M,c.notifyWith))):(d!==M&&(h=void 0,i=[a]),(e||c.resolveWith)(h,i))}},k=e?j:function(){try{j()}catch(a){r.Deferred.exceptionHook&&r.Deferred.exceptionHook(a,k.stackTrace),b+1>=f&&(d!==N&&(h=void 0,i=[a]),c.rejectWith(h,i))}};b?k():(r.Deferred.getStackHook&&(k.stackTrace=r.Deferred.getStackHook()),a.setTimeout(k))}}return r.Deferred(function(a){c[0][3].add(g(0,a,r.isFunction(e)?e:M,a.notifyWith)),c[1][3].add(g(0,a,r.isFunction(b)?b:M)),c[2][3].add(g(0,a,r.isFunction(d)?d:N))}).promise()},promise:function(a){return null!=a?r.extend(a,e):e}},f={};return r.each(c,function(a,b){var g=b[2],h=b[5];e[b[1]]=g.add,h&&g.add(function(){d=h},c[3-a][2].disable,c[0][2].lock),g.add(b[3].fire),f[b[0]]=function(){return f[b[0]+\"With\"](this===f?void 0:this,arguments),this},f[b[0]+\"With\"]=g.fireWith}),e.promise(f),b&&b.call(f,f),f},when:function(a){var b=arguments.length,c=b,d=Array(c),e=f.call(arguments),g=r.Deferred(),h=function(a){return function(c){d[a]=this,e[a]=arguments.length>1?f.call(arguments):c,--b||g.resolveWith(d,e)}};if(b<=1&&(O(a,g.done(h(c)).resolve,g.reject),\"pending\"===g.state()||r.isFunction(e[c]&&e[c].then)))return g.then();while(c--)O(e[c],h(c),g.reject);return g.promise()}});var P=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;r.Deferred.exceptionHook=function(b,c){a.console&&a.console.warn&&b&&P.test(b.name)&&a.console.warn(\"jQuery.Deferred exception: \"+b.message,b.stack,c)},r.readyException=function(b){a.setTimeout(function(){throw b})};var Q=r.Deferred();r.fn.ready=function(a){return Q.then(a)[\"catch\"](function(a){r.readyException(a)}),this},r.extend({isReady:!1,readyWait:1,holdReady:function(a){a?r.readyWait++:r.ready(!0)},ready:function(a){(a===!0?--r.readyWait:r.isReady)||(r.isReady=!0,a!==!0&&--r.readyWait>0||Q.resolveWith(d,[r]))}}),r.ready.then=Q.then;function R(){d.removeEventListener(\"DOMContentLoaded\",R),\na.removeEventListener(\"load\",R),r.ready()}\"complete\"===d.readyState||\"loading\"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(r.ready):(d.addEventListener(\"DOMContentLoaded\",R),a.addEventListener(\"load\",R));var S=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===r.type(c)){e=!0;for(h in c)S(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(r(a),c)})),b))for(;h<i;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},T=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function U(){this.expando=r.expando+U.uid++}U.uid=1,U.prototype={cache:function(a){var b=a[this.expando];return b||(b={},T(a)&&(a.nodeType?a[this.expando]=b:Object.defineProperty(a,this.expando,{value:b,configurable:!0}))),b},set:function(a,b,c){var d,e=this.cache(a);if(\"string\"==typeof b)e[r.camelCase(b)]=c;else for(d in b)e[r.camelCase(d)]=b[d];return e},get:function(a,b){return void 0===b?this.cache(a):a[this.expando]&&a[this.expando][r.camelCase(b)]},access:function(a,b,c){return void 0===b||b&&\"string\"==typeof b&&void 0===c?this.get(a,b):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d=a[this.expando];if(void 0!==d){if(void 0!==b){r.isArray(b)?b=b.map(r.camelCase):(b=r.camelCase(b),b=b in d?[b]:b.match(K)||[]),c=b.length;while(c--)delete d[b[c]]}(void 0===b||r.isEmptyObject(d))&&(a.nodeType?a[this.expando]=void 0:delete a[this.expando])}},hasData:function(a){var b=a[this.expando];return void 0!==b&&!r.isEmptyObject(b)}};var V=new U,W=new U,X=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,Y=/[A-Z]/g;function Z(a){return\"true\"===a||\"false\"!==a&&(\"null\"===a?null:a===+a+\"\"?+a:X.test(a)?JSON.parse(a):a)}function $(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(Y,\"-$&\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=Z(c)}catch(e){}W.set(a,b,c)}else c=void 0;return c}r.extend({hasData:function(a){return W.hasData(a)||V.hasData(a)},data:function(a,b,c){return W.access(a,b,c)},removeData:function(a,b){W.remove(a,b)},_data:function(a,b,c){return V.access(a,b,c)},_removeData:function(a,b){V.remove(a,b)}}),r.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=W.get(f),1===f.nodeType&&!V.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=r.camelCase(d.slice(5)),$(f,d,e[d])));V.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){W.set(this,a)}):S(this,function(b){var c;if(f&&void 0===b){if(c=W.get(f,a),void 0!==c)return c;if(c=$(f,a),void 0!==c)return c}else this.each(function(){W.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){W.remove(this,a)})}}),r.extend({queue:function(a,b,c){var d;if(a)return b=(b||\"fx\")+\"queue\",d=V.get(a,b),c&&(!d||r.isArray(c)?d=V.access(a,b,r.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||\"fx\";var c=r.queue(a,b),d=c.length,e=c.shift(),f=r._queueHooks(a,b),g=function(){r.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return V.get(a,c)||V.access(a,c,{empty:r.Callbacks(\"once memory\").add(function(){V.remove(a,[b+\"queue\",c])})})}}),r.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?r.queue(this[0],a):void 0===b?this:this.each(function(){var c=r.queue(this,a,b);r._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&r.dequeue(this,a)})},dequeue:function(a){return this.each(function(){r.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=r.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=V.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var _=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,aa=new RegExp(\"^(?:([+-])=|)(\"+_+\")([a-z%]*)$\",\"i\"),ba=[\"Top\",\"Right\",\"Bottom\",\"Left\"],ca=function(a,b){return a=b||a,\"none\"===a.style.display||\"\"===a.style.display&&r.contains(a.ownerDocument,a)&&\"none\"===r.css(a,\"display\")},da=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};function ea(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return r.css(a,b,\"\")},i=h(),j=c&&c[3]||(r.cssNumber[b]?\"\":\"px\"),k=(r.cssNumber[b]||\"px\"!==j&&+i)&&aa.exec(r.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,r.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}var fa={};function ga(a){var b,c=a.ownerDocument,d=a.nodeName,e=fa[d];return e?e:(b=c.body.appendChild(c.createElement(d)),e=r.css(b,\"display\"),b.parentNode.removeChild(b),\"none\"===e&&(e=\"block\"),fa[d]=e,e)}function ha(a,b){for(var c,d,e=[],f=0,g=a.length;f<g;f++)d=a[f],d.style&&(c=d.style.display,b?(\"none\"===c&&(e[f]=V.get(d,\"display\")||null,e[f]||(d.style.display=\"\")),\"\"===d.style.display&&ca(d)&&(e[f]=ga(d))):\"none\"!==c&&(e[f]=\"none\",V.set(d,\"display\",c)));for(f=0;f<g;f++)null!=e[f]&&(a[f].style.display=e[f]);return a}r.fn.extend({show:function(){return ha(this,!0)},hide:function(){return ha(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){ca(this)?r(this).show():r(this).hide()})}});var ia=/^(?:checkbox|radio)$/i,ja=/<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i,ka=/^$|\\/(?:java|ecma)script/i,la={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};la.optgroup=la.option,la.tbody=la.tfoot=la.colgroup=la.caption=la.thead,la.th=la.td;function ma(a,b){var c;return c=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):[],void 0===b||b&&r.nodeName(a,b)?r.merge([a],c):c}function na(a,b){for(var c=0,d=a.length;c<d;c++)V.set(a[c],\"globalEval\",!b||V.get(b[c],\"globalEval\"))}var oa=/<|&#?\\w+;/;function pa(a,b,c,d,e){for(var f,g,h,i,j,k,l=b.createDocumentFragment(),m=[],n=0,o=a.length;n<o;n++)if(f=a[n],f||0===f)if(\"object\"===r.type(f))r.merge(m,f.nodeType?[f]:f);else if(oa.test(f)){g=g||l.appendChild(b.createElement(\"div\")),h=(ja.exec(f)||[\"\",\"\"])[1].toLowerCase(),i=la[h]||la._default,g.innerHTML=i[1]+r.htmlPrefilter(f)+i[2],k=i[0];while(k--)g=g.lastChild;r.merge(m,g.childNodes),g=l.firstChild,g.textContent=\"\"}else m.push(b.createTextNode(f));l.textContent=\"\",n=0;while(f=m[n++])if(d&&r.inArray(f,d)>-1)e&&e.push(f);else if(j=r.contains(f.ownerDocument,f),g=ma(l.appendChild(f),\"script\"),j&&na(g),c){k=0;while(f=g[k++])ka.test(f.type||\"\")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement(\"div\")),c=d.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),o.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",o.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var qa=d.documentElement,ra=/^key/,sa=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,ta=/^([^.]*)(?:\\.(.+)|)/;function ua(){return!0}function va(){return!1}function wa(){try{return d.activeElement}catch(a){}}function xa(a,b,c,d,e,f){var g,h;if(\"object\"==typeof b){\"string\"!=typeof c&&(d=d||c,c=void 0);for(h in b)xa(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&(\"string\"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=va;else if(!e)return a;return 1===f&&(g=e,e=function(a){return r().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=r.guid++)),a.each(function(){r.event.add(this,b,e,d,c)})}r.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.get(a);if(q){c.handler&&(f=c,c=f.handler,e=f.selector),e&&r.find.matchesSelector(qa,e),c.guid||(c.guid=r.guid++),(i=q.events)||(i=q.events={}),(g=q.handle)||(g=q.handle=function(b){return\"undefined\"!=typeof r&&r.event.triggered!==b.type?r.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(K)||[\"\"],j=b.length;while(j--)h=ta.exec(b[j])||[],n=p=h[1],o=(h[2]||\"\").split(\".\").sort(),n&&(l=r.event.special[n]||{},n=(e?l.delegateType:l.bindType)||n,l=r.event.special[n]||{},k=r.extend({type:n,origType:p,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&r.expr.match.needsContext.test(e),namespace:o.join(\".\")},f),(m=i[n])||(m=i[n]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,o,g)!==!1||a.addEventListener&&a.addEventListener(n,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),r.event.global[n]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.hasData(a)&&V.get(a);if(q&&(i=q.events)){b=(b||\"\").match(K)||[\"\"],j=b.length;while(j--)if(h=ta.exec(b[j])||[],n=p=h[1],o=(h[2]||\"\").split(\".\").sort(),n){l=r.event.special[n]||{},n=(d?l.delegateType:l.bindType)||n,m=i[n]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+o.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&p!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,o,q.handle)!==!1||r.removeEvent(a,n,q.handle),delete i[n])}else for(n in i)r.event.remove(a,n+b[j],c,d,!0);r.isEmptyObject(i)&&V.remove(a,\"handle events\")}},dispatch:function(a){var b=r.event.fix(a),c,d,e,f,g,h,i=new Array(arguments.length),j=(V.get(this,\"events\")||{})[b.type]||[],k=r.event.special[b.type]||{};for(i[0]=b,c=1;c<arguments.length;c++)i[c]=arguments[c];if(b.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,b)!==!1){h=r.event.handlers.call(this,b,j),c=0;while((f=h[c++])&&!b.isPropagationStopped()){b.currentTarget=f.elem,d=0;while((g=f.handlers[d++])&&!b.isImmediatePropagationStopped())b.rnamespace&&!b.rnamespace.test(g.namespace)||(b.handleObj=g,b.data=g.data,e=((r.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(b.result=e)===!1&&(b.preventDefault(),b.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,b),b.result}},handlers:function(a,b){var c,d,e,f,g,h=[],i=b.delegateCount,j=a.target;if(i&&j.nodeType&&!(\"click\"===a.type&&a.button>=1))for(;j!==this;j=j.parentNode||this)if(1===j.nodeType&&(\"click\"!==a.type||j.disabled!==!0)){for(f=[],g={},c=0;c<i;c++)d=b[c],e=d.selector+\" \",void 0===g[e]&&(g[e]=d.needsContext?r(e,this).index(j)>-1:r.find(e,this,null,[j]).length),g[e]&&f.push(d);f.length&&h.push({elem:j,handlers:f})}return j=this,i<b.length&&h.push({elem:j,handlers:b.slice(i)}),h},addProp:function(a,b){Object.defineProperty(r.Event.prototype,a,{enumerable:!0,configurable:!0,get:r.isFunction(b)?function(){if(this.originalEvent)return b(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[a]},set:function(b){Object.defineProperty(this,a,{enumerable:!0,configurable:!0,writable:!0,value:b})}})},fix:function(a){return a[r.expando]?a:new r.Event(a)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==wa()&&this.focus)return this.focus(),!1},delegateType:\"focusin\"},blur:{trigger:function(){if(this===wa()&&this.blur)return this.blur(),!1},delegateType:\"focusout\"},click:{trigger:function(){if(\"checkbox\"===this.type&&this.click&&r.nodeName(this,\"input\"))return this.click(),!1},_default:function(a){return r.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}}},r.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)},r.Event=function(a,b){return this instanceof r.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?ua:va,this.target=a.target&&3===a.target.nodeType?a.target.parentNode:a.target,this.currentTarget=a.currentTarget,this.relatedTarget=a.relatedTarget):this.type=a,b&&r.extend(this,b),this.timeStamp=a&&a.timeStamp||r.now(),void(this[r.expando]=!0)):new r.Event(a,b)},r.Event.prototype={constructor:r.Event,isDefaultPrevented:va,isPropagationStopped:va,isImmediatePropagationStopped:va,isSimulated:!1,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=ua,a&&!this.isSimulated&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=ua,a&&!this.isSimulated&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=ua,a&&!this.isSimulated&&a.stopImmediatePropagation(),this.stopPropagation()}},r.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,\"char\":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(a){var b=a.button;return null==a.which&&ra.test(a.type)?null!=a.charCode?a.charCode:a.keyCode:!a.which&&void 0!==b&&sa.test(a.type)?1&b?1:2&b?3:4&b?2:0:a.which}},r.event.addProp),r.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){r.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||r.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),r.fn.extend({on:function(a,b,c,d){return xa(this,a,b,c,d)},one:function(a,b,c,d){return xa(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,r(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return b!==!1&&\"function\"!=typeof b||(c=b,b=void 0),c===!1&&(c=va),this.each(function(){r.event.remove(this,a,c,b)})}});var ya=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,za=/<script|<style|<link/i,Aa=/checked\\s*(?:[^=]|=\\s*.checked.)/i,Ba=/^true\\/(.*)/,Ca=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;function Da(a,b){return r.nodeName(a,\"table\")&&r.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a:a}function Ea(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function Fa(a){var b=Ba.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function Ga(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(V.hasData(a)&&(f=V.access(a),g=V.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;c<d;c++)r.event.add(b,e,j[e][c])}W.hasData(a)&&(h=W.access(a),i=r.extend({},h),W.set(b,i))}}function Ha(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&ia.test(a.type)?b.checked=a.checked:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}function Ia(a,b,c,d){b=g.apply([],b);var e,f,h,i,j,k,l=0,m=a.length,n=m-1,q=b[0],s=r.isFunction(q);if(s||m>1&&\"string\"==typeof q&&!o.checkClone&&Aa.test(q))return a.each(function(e){var f=a.eq(e);s&&(b[0]=q.call(this,e,f.html())),Ia(f,b,c,d)});if(m&&(e=pa(b,a[0].ownerDocument,!1,a,d),f=e.firstChild,1===e.childNodes.length&&(e=f),f||d)){for(h=r.map(ma(e,\"script\"),Ea),i=h.length;l<m;l++)j=e,l!==n&&(j=r.clone(j,!0,!0),i&&r.merge(h,ma(j,\"script\"))),c.call(a[l],j,l);if(i)for(k=h[h.length-1].ownerDocument,r.map(h,Fa),l=0;l<i;l++)j=h[l],ka.test(j.type||\"\")&&!V.access(j,\"globalEval\")&&r.contains(k,j)&&(j.src?r._evalUrl&&r._evalUrl(j.src):p(j.textContent.replace(Ca,\"\"),k))}return a}function Ja(a,b,c){for(var d,e=b?r.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||r.cleanData(ma(d)),d.parentNode&&(c&&r.contains(d.ownerDocument,d)&&na(ma(d,\"script\")),d.parentNode.removeChild(d));return a}r.extend({htmlPrefilter:function(a){return a.replace(ya,\"<$1></$2>\")},clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=r.contains(a.ownerDocument,a);if(!(o.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||r.isXMLDoc(a)))for(g=ma(h),f=ma(a),d=0,e=f.length;d<e;d++)Ha(f[d],g[d]);if(b)if(c)for(f=f||ma(a),g=g||ma(h),d=0,e=f.length;d<e;d++)Ga(f[d],g[d]);else Ga(a,h);return g=ma(h,\"script\"),g.length>0&&na(g,!i&&ma(a,\"script\")),h},cleanData:function(a){for(var b,c,d,e=r.event.special,f=0;void 0!==(c=a[f]);f++)if(T(c)){if(b=c[V.expando]){if(b.events)for(d in b.events)e[d]?r.event.remove(c,d):r.removeEvent(c,d,b.handle);c[V.expando]=void 0}c[W.expando]&&(c[W.expando]=void 0)}}}),r.fn.extend({detach:function(a){return Ja(this,a,!0)},remove:function(a){return Ja(this,a)},text:function(a){return S(this,function(a){return void 0===a?r.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=a)})},null,a,arguments.length)},append:function(){return Ia(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Da(this,a);b.appendChild(a)}})},prepend:function(){return Ia(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Da(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return Ia(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return Ia(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(r.cleanData(ma(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null!=a&&a,b=null==b?a:b,this.map(function(){return r.clone(this,a,b)})},html:function(a){return S(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!za.test(a)&&!la[(ja.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=r.htmlPrefilter(a);try{for(;c<d;c++)b=this[c]||{},1===b.nodeType&&(r.cleanData(ma(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return Ia(this,arguments,function(b){var c=this.parentNode;r.inArray(this,a)<0&&(r.cleanData(ma(this)),c&&c.replaceChild(b,this))},a)}}),r.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){r.fn[a]=function(a){for(var c,d=[],e=r(a),f=e.length-1,g=0;g<=f;g++)c=g===f?this:this.clone(!0),r(e[g])[b](c),h.apply(d,c.get());return this.pushStack(d)}});var Ka=/^margin/,La=new RegExp(\"^(\"+_+\")(?!px)[a-z%]+$\",\"i\"),Ma=function(b){var c=b.ownerDocument.defaultView;return c&&c.opener||(c=a),c.getComputedStyle(b)};!function(){function b(){if(i){i.style.cssText=\"box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",i.innerHTML=\"\",qa.appendChild(h);var b=a.getComputedStyle(i);c=\"1%\"!==b.top,g=\"2px\"===b.marginLeft,e=\"4px\"===b.width,i.style.marginRight=\"50%\",f=\"4px\"===b.marginRight,qa.removeChild(h),i=null}}var c,e,f,g,h=d.createElement(\"div\"),i=d.createElement(\"div\");i.style&&(i.style.backgroundClip=\"content-box\",i.cloneNode(!0).style.backgroundClip=\"\",o.clearCloneStyle=\"content-box\"===i.style.backgroundClip,h.style.cssText=\"border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute\",h.appendChild(i),r.extend(o,{pixelPosition:function(){return b(),c},boxSizingReliable:function(){return b(),e},pixelMarginRight:function(){return b(),f},reliableMarginLeft:function(){return b(),g}}))}();function Na(a,b,c){var d,e,f,g,h=a.style;return c=c||Ma(a),c&&(g=c.getPropertyValue(b)||c[b],\"\"!==g||r.contains(a.ownerDocument,a)||(g=r.style(a,b)),!o.pixelMarginRight()&&La.test(g)&&Ka.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\"\":g}function Oa(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}var Pa=/^(none|table(?!-c[ea]).+)/,Qa={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Ra={letterSpacing:\"0\",fontWeight:\"400\"},Sa=[\"Webkit\",\"Moz\",\"ms\"],Ta=d.createElement(\"div\").style;function Ua(a){if(a in Ta)return a;var b=a[0].toUpperCase()+a.slice(1),c=Sa.length;while(c--)if(a=Sa[c]+b,a in Ta)return a}function Va(a,b,c){var d=aa.exec(b);return d?Math.max(0,d[2]-(c||0))+(d[3]||\"px\"):b}function Wa(a,b,c,d,e){var f,g=0;for(f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0;f<4;f+=2)\"margin\"===c&&(g+=r.css(a,c+ba[f],!0,e)),d?(\"content\"===c&&(g-=r.css(a,\"padding\"+ba[f],!0,e)),\"margin\"!==c&&(g-=r.css(a,\"border\"+ba[f]+\"Width\",!0,e))):(g+=r.css(a,\"padding\"+ba[f],!0,e),\"padding\"!==c&&(g+=r.css(a,\"border\"+ba[f]+\"Width\",!0,e)));return g}function Xa(a,b,c){var d,e=!0,f=Ma(a),g=\"border-box\"===r.css(a,\"boxSizing\",!1,f);if(a.getClientRects().length&&(d=a.getBoundingClientRect()[b]),d<=0||null==d){if(d=Na(a,b,f),(d<0||null==d)&&(d=a.style[b]),La.test(d))return d;e=g&&(o.boxSizingReliable()||d===a.style[b]),d=parseFloat(d)||0}return d+Wa(a,b,c||(g?\"border\":\"content\"),e,f)+\"px\"}r.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Na(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=r.camelCase(b),i=a.style;return b=r.cssProps[h]||(r.cssProps[h]=Ua(h)||h),g=r.cssHooks[b]||r.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\"string\"===f&&(e=aa.exec(c))&&e[1]&&(c=ea(a,b,e),f=\"number\"),null!=c&&c===c&&(\"number\"===f&&(c+=e&&e[3]||(r.cssNumber[h]?\"\":\"px\")),o.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=r.camelCase(b);return b=r.cssProps[h]||(r.cssProps[h]=Ua(h)||h),g=r.cssHooks[b]||r.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=Na(a,b,d)),\"normal\"===e&&b in Ra&&(e=Ra[b]),\"\"===c||c?(f=parseFloat(e),c===!0||isFinite(f)?f||0:e):e}}),r.each([\"height\",\"width\"],function(a,b){r.cssHooks[b]={get:function(a,c,d){if(c)return!Pa.test(r.css(a,\"display\"))||a.getClientRects().length&&a.getBoundingClientRect().width?Xa(a,b,d):da(a,Qa,function(){return Xa(a,b,d)})},set:function(a,c,d){var e,f=d&&Ma(a),g=d&&Wa(a,b,d,\"border-box\"===r.css(a,\"boxSizing\",!1,f),f);return g&&(e=aa.exec(c))&&\"px\"!==(e[3]||\"px\")&&(a.style[b]=c,c=r.css(a,b)),Va(a,c,g)}}}),r.cssHooks.marginLeft=Oa(o.reliableMarginLeft,function(a,b){if(b)return(parseFloat(Na(a,\"marginLeft\"))||a.getBoundingClientRect().left-da(a,{marginLeft:0},function(){return a.getBoundingClientRect().left}))+\"px\"}),r.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){r.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];d<4;d++)e[a+ba[d]+b]=f[d]||f[d-2]||f[0];return e}},Ka.test(a)||(r.cssHooks[a+b].set=Va)}),r.fn.extend({css:function(a,b){return S(this,function(a,b,c){var d,e,f={},g=0;if(r.isArray(b)){for(d=Ma(a),e=b.length;g<e;g++)f[b[g]]=r.css(a,b[g],!1,d);return f}return void 0!==c?r.style(a,b,c):r.css(a,b)},a,b,arguments.length>1)}});function Ya(a,b,c,d,e){return new Ya.prototype.init(a,b,c,d,e)}r.Tween=Ya,Ya.prototype={constructor:Ya,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||r.easing._default,this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(r.cssNumber[c]?\"\":\"px\")},cur:function(){var a=Ya.propHooks[this.prop];return a&&a.get?a.get(this):Ya.propHooks._default.get(this)},run:function(a){var b,c=Ya.propHooks[this.prop];return this.options.duration?this.pos=b=r.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Ya.propHooks._default.set(this),this}},Ya.prototype.init.prototype=Ya.prototype,Ya.propHooks={_default:{get:function(a){var b;return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(b=r.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0)},set:function(a){r.fx.step[a.prop]?r.fx.step[a.prop](a):1!==a.elem.nodeType||null==a.elem.style[r.cssProps[a.prop]]&&!r.cssHooks[a.prop]?a.elem[a.prop]=a.now:r.style(a.elem,a.prop,a.now+a.unit)}}},Ya.propHooks.scrollTop=Ya.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},r.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:\"swing\"},r.fx=Ya.prototype.init,r.fx.step={};var Za,$a,_a=/^(?:toggle|show|hide)$/,ab=/queueHooks$/;function bb(){$a&&(a.requestAnimationFrame(bb),r.fx.tick())}function cb(){return a.setTimeout(function(){Za=void 0}),Za=r.now()}function db(a,b){var c,d=0,e={height:a};for(b=b?1:0;d<4;d+=2-b)c=ba[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function eb(a,b,c){for(var d,e=(hb.tweeners[b]||[]).concat(hb.tweeners[\"*\"]),f=0,g=e.length;f<g;f++)if(d=e[f].call(c,b,a))return d}function fb(a,b,c){var d,e,f,g,h,i,j,k,l=\"width\"in b||\"height\"in b,m=this,n={},o=a.style,p=a.nodeType&&ca(a),q=V.get(a,\"fxshow\");c.queue||(g=r._queueHooks(a,\"fx\"),null==g.unqueued&&(g.unqueued=0,h=g.empty.fire,g.empty.fire=function(){g.unqueued||h()}),g.unqueued++,m.always(function(){m.always(function(){g.unqueued--,r.queue(a,\"fx\").length||g.empty.fire()})}));for(d in b)if(e=b[d],_a.test(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}n[d]=q&&q[d]||r.style(a,d)}if(i=!r.isEmptyObject(b),i||!r.isEmptyObject(n)){l&&1===a.nodeType&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=q&&q.display,null==j&&(j=V.get(a,\"display\")),k=r.css(a,\"display\"),\"none\"===k&&(j?k=j:(ha([a],!0),j=a.style.display||j,k=r.css(a,\"display\"),ha([a]))),(\"inline\"===k||\"inline-block\"===k&&null!=j)&&\"none\"===r.css(a,\"float\")&&(i||(m.done(function(){o.display=j}),null==j&&(k=o.display,j=\"none\"===k?\"\":k)),o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",m.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]})),i=!1;for(d in n)i||(q?\"hidden\"in q&&(p=q.hidden):q=V.access(a,\"fxshow\",{display:j}),f&&(q.hidden=!p),p&&ha([a],!0),m.done(function(){p||ha([a]),V.remove(a,\"fxshow\");for(d in n)r.style(a,d,n[d])})),i=eb(p?q[d]:0,d,m),d in q||(q[d]=i.start,p&&(i.end=i.start,i.start=0))}}function gb(a,b){var c,d,e,f,g;for(c in a)if(d=r.camelCase(c),e=b[d],f=a[c],r.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=r.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function hb(a,b,c){var d,e,f=0,g=hb.prefilters.length,h=r.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Za||cb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;g<i;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),f<1&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:r.extend({},b),opts:r.extend(!0,{specialEasing:{},easing:r.easing._default},c),originalProperties:b,originalOptions:c,startTime:Za||cb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=r.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;c<d;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(gb(k,j.opts.specialEasing);f<g;f++)if(d=hb.prefilters[f].call(j,a,k,j.opts))return r.isFunction(d.stop)&&(r._queueHooks(j.elem,j.opts.queue).stop=r.proxy(d.stop,d)),d;return r.map(k,eb,j),r.isFunction(j.opts.start)&&j.opts.start.call(a,j),r.fx.timer(r.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}r.Animation=r.extend(hb,{tweeners:{\"*\":[function(a,b){var c=this.createTween(a,b);return ea(c.elem,a,aa.exec(b),c),c}]},tweener:function(a,b){r.isFunction(a)?(b=a,a=[\"*\"]):a=a.match(K);for(var c,d=0,e=a.length;d<e;d++)c=a[d],hb.tweeners[c]=hb.tweeners[c]||[],hb.tweeners[c].unshift(b)},prefilters:[fb],prefilter:function(a,b){b?hb.prefilters.unshift(a):hb.prefilters.push(a)}}),r.speed=function(a,b,c){var e=a&&\"object\"==typeof a?r.extend({},a):{complete:c||!c&&b||r.isFunction(a)&&a,duration:a,easing:c&&b||b&&!r.isFunction(b)&&b};return r.fx.off||d.hidden?e.duration=0:\"number\"!=typeof e.duration&&(e.duration in r.fx.speeds?e.duration=r.fx.speeds[e.duration]:e.duration=r.fx.speeds._default),null!=e.queue&&e.queue!==!0||(e.queue=\"fx\"),e.old=e.complete,e.complete=function(){r.isFunction(e.old)&&e.old.call(this),e.queue&&r.dequeue(this,e.queue)},e},r.fn.extend({fadeTo:function(a,b,c,d){return this.filter(ca).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=r.isEmptyObject(a),f=r.speed(b,c,d),g=function(){var b=hb(this,r.extend({},a),f);(e||V.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=r.timers,g=V.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&ab.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));!b&&c||r.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=V.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=r.timers,g=d?d.length:0;for(c.finish=!0,r.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;b<g;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),r.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=r.fn[b];r.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(db(b,!0),a,d,e)}}),r.each({slideDown:db(\"show\"),slideUp:db(\"hide\"),slideToggle:db(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){r.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),r.timers=[],r.fx.tick=function(){var a,b=0,c=r.timers;for(Za=r.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||r.fx.stop(),Za=void 0},r.fx.timer=function(a){r.timers.push(a),a()?r.fx.start():r.timers.pop()},r.fx.interval=13,r.fx.start=function(){$a||($a=a.requestAnimationFrame?a.requestAnimationFrame(bb):a.setInterval(r.fx.tick,r.fx.interval))},r.fx.stop=function(){a.cancelAnimationFrame?a.cancelAnimationFrame($a):a.clearInterval($a),$a=null},r.fx.speeds={slow:600,fast:200,_default:400},r.fn.delay=function(b,c){return b=r.fx?r.fx.speeds[b]||b:b,c=c||\"fx\",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a=d.createElement(\"input\"),b=d.createElement(\"select\"),c=b.appendChild(d.createElement(\"option\"));a.type=\"checkbox\",o.checkOn=\"\"!==a.value,o.optSelected=c.selected,a=d.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",o.radioValue=\"t\"===a.value}();var ib,jb=r.expr.attrHandle;r.fn.extend({attr:function(a,b){return S(this,r.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){r.removeAttr(this,a)})}}),r.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return\"undefined\"==typeof a.getAttribute?r.prop(a,b,c):(1===f&&r.isXMLDoc(a)||(e=r.attrHooks[b.toLowerCase()]||(r.expr.match.bool.test(b)?ib:void 0)),\nvoid 0!==c?null===c?void r.removeAttr(a,b):e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+\"\"),c):e&&\"get\"in e&&null!==(d=e.get(a,b))?d:(d=r.find.attr(a,b),null==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!o.radioValue&&\"radio\"===b&&r.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d=0,e=b&&b.match(K);if(e&&1===a.nodeType)while(c=e[d++])a.removeAttribute(c)}}),ib={set:function(a,b,c){return b===!1?r.removeAttr(a,c):a.setAttribute(c,c),c}},r.each(r.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=jb[b]||r.find.attr;jb[b]=function(a,b,d){var e,f,g=b.toLowerCase();return d||(f=jb[g],jb[g]=e,e=null!=c(a,b,d)?g:null,jb[g]=f),e}});var kb=/^(?:input|select|textarea|button)$/i,lb=/^(?:a|area)$/i;r.fn.extend({prop:function(a,b){return S(this,r.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[r.propFix[a]||a]})}}),r.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&r.isXMLDoc(a)||(b=r.propFix[b]||b,e=r.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=r.find.attr(a,\"tabindex\");return b?parseInt(b,10):kb.test(a.nodeName)||lb.test(a.nodeName)&&a.href?0:-1}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}}),o.optSelected||(r.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),r.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){r.propFix[this.toLowerCase()]=this});function mb(a){var b=a.match(K)||[];return b.join(\" \")}function nb(a){return a.getAttribute&&a.getAttribute(\"class\")||\"\"}r.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).addClass(a.call(this,b,nb(this)))});if(\"string\"==typeof a&&a){b=a.match(K)||[];while(c=this[i++])if(e=nb(c),d=1===c.nodeType&&\" \"+mb(e)+\" \"){g=0;while(f=b[g++])d.indexOf(\" \"+f+\" \")<0&&(d+=f+\" \");h=mb(d),e!==h&&c.setAttribute(\"class\",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).removeClass(a.call(this,b,nb(this)))});if(!arguments.length)return this.attr(\"class\",\"\");if(\"string\"==typeof a&&a){b=a.match(K)||[];while(c=this[i++])if(e=nb(c),d=1===c.nodeType&&\" \"+mb(e)+\" \"){g=0;while(f=b[g++])while(d.indexOf(\" \"+f+\" \")>-1)d=d.replace(\" \"+f+\" \",\" \");h=mb(d),e!==h&&c.setAttribute(\"class\",h)}}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):r.isFunction(a)?this.each(function(c){r(this).toggleClass(a.call(this,c,nb(this),b),b)}):this.each(function(){var b,d,e,f;if(\"string\"===c){d=0,e=r(this),f=a.match(K)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&\"boolean\"!==c||(b=nb(this),b&&V.set(this,\"__className__\",b),this.setAttribute&&this.setAttribute(\"class\",b||a===!1?\"\":V.get(this,\"__className__\")||\"\"))})},hasClass:function(a){var b,c,d=0;b=\" \"+a+\" \";while(c=this[d++])if(1===c.nodeType&&(\" \"+mb(nb(c))+\" \").indexOf(b)>-1)return!0;return!1}});var ob=/\\r/g;r.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=r.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,r(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":r.isArray(e)&&(e=r.map(e,function(a){return null==a?\"\":a+\"\"})),b=r.valHooks[this.type]||r.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=r.valHooks[e.type]||r.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(ob,\"\"):null==c?\"\":c)}}}),r.extend({valHooks:{option:{get:function(a){var b=r.find.attr(a,\"value\");return null!=b?b:mb(r.text(a))}},select:{get:function(a){var b,c,d,e=a.options,f=a.selectedIndex,g=\"select-one\"===a.type,h=g?null:[],i=g?f+1:e.length;for(d=f<0?i:g?f:0;d<i;d++)if(c=e[d],(c.selected||d===f)&&!c.disabled&&(!c.parentNode.disabled||!r.nodeName(c.parentNode,\"optgroup\"))){if(b=r(c).val(),g)return b;h.push(b)}return h},set:function(a,b){var c,d,e=a.options,f=r.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=r.inArray(r.valHooks.option.get(d),f)>-1)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),r.each([\"radio\",\"checkbox\"],function(){r.valHooks[this]={set:function(a,b){if(r.isArray(b))return a.checked=r.inArray(r(a).val(),b)>-1}},o.checkOn||(r.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})});var pb=/^(?:focusinfocus|focusoutblur)$/;r.extend(r.event,{trigger:function(b,c,e,f){var g,h,i,j,k,m,n,o=[e||d],p=l.call(b,\"type\")?b.type:b,q=l.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(h=i=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!pb.test(p+r.event.triggered)&&(p.indexOf(\".\")>-1&&(q=p.split(\".\"),p=q.shift(),q.sort()),k=p.indexOf(\":\")<0&&\"on\"+p,b=b[r.expando]?b:new r.Event(p,\"object\"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=q.join(\".\"),b.rnamespace=b.namespace?new RegExp(\"(^|\\\\.)\"+q.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:r.makeArray(c,[b]),n=r.event.special[p]||{},f||!n.trigger||n.trigger.apply(e,c)!==!1)){if(!f&&!n.noBubble&&!r.isWindow(e)){for(j=n.delegateType||p,pb.test(j+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),i=h;i===(e.ownerDocument||d)&&o.push(i.defaultView||i.parentWindow||a)}g=0;while((h=o[g++])&&!b.isPropagationStopped())b.type=g>1?j:n.bindType||p,m=(V.get(h,\"events\")||{})[b.type]&&V.get(h,\"handle\"),m&&m.apply(h,c),m=k&&h[k],m&&m.apply&&T(h)&&(b.result=m.apply(h,c),b.result===!1&&b.preventDefault());return b.type=p,f||b.isDefaultPrevented()||n._default&&n._default.apply(o.pop(),c)!==!1||!T(e)||k&&r.isFunction(e[p])&&!r.isWindow(e)&&(i=e[k],i&&(e[k]=null),r.event.triggered=p,e[p](),r.event.triggered=void 0,i&&(e[k]=i)),b.result}},simulate:function(a,b,c){var d=r.extend(new r.Event,c,{type:a,isSimulated:!0});r.event.trigger(d,null,b)}}),r.fn.extend({trigger:function(a,b){return this.each(function(){r.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];if(c)return r.event.trigger(a,b,c,!0)}}),r.each(\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\".split(\" \"),function(a,b){r.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),r.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),o.focusin=\"onfocusin\"in a,o.focusin||r.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){r.event.simulate(b,a.target,r.event.fix(a))};r.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=V.access(d,b);e||d.addEventListener(a,c,!0),V.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=V.access(d,b)-1;e?V.access(d,b,e):(d.removeEventListener(a,c,!0),V.remove(d,b))}}});var qb=a.location,rb=r.now(),sb=/\\?/;r.parseXML=function(b){var c;if(!b||\"string\"!=typeof b)return null;try{c=(new a.DOMParser).parseFromString(b,\"text/xml\")}catch(d){c=void 0}return c&&!c.getElementsByTagName(\"parsererror\").length||r.error(\"Invalid XML: \"+b),c};var tb=/\\[\\]$/,ub=/\\r?\\n/g,vb=/^(?:submit|button|image|reset|file)$/i,wb=/^(?:input|select|textarea|keygen)/i;function xb(a,b,c,d){var e;if(r.isArray(b))r.each(b,function(b,e){c||tb.test(a)?d(a,e):xb(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==r.type(b))d(a,b);else for(e in b)xb(a+\"[\"+e+\"]\",b[e],c,d)}r.param=function(a,b){var c,d=[],e=function(a,b){var c=r.isFunction(b)?b():b;d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(null==c?\"\":c)};if(r.isArray(a)||a.jquery&&!r.isPlainObject(a))r.each(a,function(){e(this.name,this.value)});else for(c in a)xb(c,a[c],b,e);return d.join(\"&\")},r.fn.extend({serialize:function(){return r.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=r.prop(this,\"elements\");return a?r.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!r(this).is(\":disabled\")&&wb.test(this.nodeName)&&!vb.test(a)&&(this.checked||!ia.test(a))}).map(function(a,b){var c=r(this).val();return null==c?null:r.isArray(c)?r.map(c,function(a){return{name:b.name,value:a.replace(ub,\"\\r\\n\")}}):{name:b.name,value:c.replace(ub,\"\\r\\n\")}}).get()}});var yb=/%20/g,zb=/#.*$/,Ab=/([?&])_=[^&]*/,Bb=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,Cb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Db=/^(?:GET|HEAD)$/,Eb=/^\\/\\//,Fb={},Gb={},Hb=\"*/\".concat(\"*\"),Ib=d.createElement(\"a\");Ib.href=qb.href;function Jb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(K)||[];if(r.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Kb(a,b,c,d){var e={},f=a===Gb;function g(h){var i;return e[h]=!0,r.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function Lb(a,b){var c,d,e=r.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&r.extend(!0,a,d),a}function Mb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}if(f)return f!==i[0]&&i.unshift(f),c[f]}function Nb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}r.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:qb.href,type:\"GET\",isLocal:Cb.test(qb.protocol),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":Hb,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/\\bxml\\b/,html:/\\bhtml/,json:/\\bjson\\b/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":JSON.parse,\"text xml\":r.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Lb(Lb(a,r.ajaxSettings),b):Lb(r.ajaxSettings,a)},ajaxPrefilter:Jb(Fb),ajaxTransport:Jb(Gb),ajax:function(b,c){\"object\"==typeof b&&(c=b,b=void 0),c=c||{};var e,f,g,h,i,j,k,l,m,n,o=r.ajaxSetup({},c),p=o.context||o,q=o.context&&(p.nodeType||p.jquery)?r(p):r.event,s=r.Deferred(),t=r.Callbacks(\"once memory\"),u=o.statusCode||{},v={},w={},x=\"canceled\",y={readyState:0,getResponseHeader:function(a){var b;if(k){if(!h){h={};while(b=Bb.exec(g))h[b[1].toLowerCase()]=b[2]}b=h[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return k?g:null},setRequestHeader:function(a,b){return null==k&&(a=w[a.toLowerCase()]=w[a.toLowerCase()]||a,v[a]=b),this},overrideMimeType:function(a){return null==k&&(o.mimeType=a),this},statusCode:function(a){var b;if(a)if(k)y.always(a[y.status]);else for(b in a)u[b]=[u[b],a[b]];return this},abort:function(a){var b=a||x;return e&&e.abort(b),A(0,b),this}};if(s.promise(y),o.url=((b||o.url||qb.href)+\"\").replace(Eb,qb.protocol+\"//\"),o.type=c.method||c.type||o.method||o.type,o.dataTypes=(o.dataType||\"*\").toLowerCase().match(K)||[\"\"],null==o.crossDomain){j=d.createElement(\"a\");try{j.href=o.url,j.href=j.href,o.crossDomain=Ib.protocol+\"//\"+Ib.host!=j.protocol+\"//\"+j.host}catch(z){o.crossDomain=!0}}if(o.data&&o.processData&&\"string\"!=typeof o.data&&(o.data=r.param(o.data,o.traditional)),Kb(Fb,o,c,y),k)return y;l=r.event&&o.global,l&&0===r.active++&&r.event.trigger(\"ajaxStart\"),o.type=o.type.toUpperCase(),o.hasContent=!Db.test(o.type),f=o.url.replace(zb,\"\"),o.hasContent?o.data&&o.processData&&0===(o.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&(o.data=o.data.replace(yb,\"+\")):(n=o.url.slice(f.length),o.data&&(f+=(sb.test(f)?\"&\":\"?\")+o.data,delete o.data),o.cache===!1&&(f=f.replace(Ab,\"$1\"),n=(sb.test(f)?\"&\":\"?\")+\"_=\"+rb++ +n),o.url=f+n),o.ifModified&&(r.lastModified[f]&&y.setRequestHeader(\"If-Modified-Since\",r.lastModified[f]),r.etag[f]&&y.setRequestHeader(\"If-None-Match\",r.etag[f])),(o.data&&o.hasContent&&o.contentType!==!1||c.contentType)&&y.setRequestHeader(\"Content-Type\",o.contentType),y.setRequestHeader(\"Accept\",o.dataTypes[0]&&o.accepts[o.dataTypes[0]]?o.accepts[o.dataTypes[0]]+(\"*\"!==o.dataTypes[0]?\", \"+Hb+\"; q=0.01\":\"\"):o.accepts[\"*\"]);for(m in o.headers)y.setRequestHeader(m,o.headers[m]);if(o.beforeSend&&(o.beforeSend.call(p,y,o)===!1||k))return y.abort();if(x=\"abort\",t.add(o.complete),y.done(o.success),y.fail(o.error),e=Kb(Gb,o,c,y)){if(y.readyState=1,l&&q.trigger(\"ajaxSend\",[y,o]),k)return y;o.async&&o.timeout>0&&(i=a.setTimeout(function(){y.abort(\"timeout\")},o.timeout));try{k=!1,e.send(v,A)}catch(z){if(k)throw z;A(-1,z)}}else A(-1,\"No Transport\");function A(b,c,d,h){var j,m,n,v,w,x=c;k||(k=!0,i&&a.clearTimeout(i),e=void 0,g=h||\"\",y.readyState=b>0?4:0,j=b>=200&&b<300||304===b,d&&(v=Mb(o,y,d)),v=Nb(o,v,y,j),j?(o.ifModified&&(w=y.getResponseHeader(\"Last-Modified\"),w&&(r.lastModified[f]=w),w=y.getResponseHeader(\"etag\"),w&&(r.etag[f]=w)),204===b||\"HEAD\"===o.type?x=\"nocontent\":304===b?x=\"notmodified\":(x=v.state,m=v.data,n=v.error,j=!n)):(n=x,!b&&x||(x=\"error\",b<0&&(b=0))),y.status=b,y.statusText=(c||x)+\"\",j?s.resolveWith(p,[m,x,y]):s.rejectWith(p,[y,x,n]),y.statusCode(u),u=void 0,l&&q.trigger(j?\"ajaxSuccess\":\"ajaxError\",[y,o,j?m:n]),t.fireWith(p,[y,x]),l&&(q.trigger(\"ajaxComplete\",[y,o]),--r.active||r.event.trigger(\"ajaxStop\")))}return y},getJSON:function(a,b,c){return r.get(a,b,c,\"json\")},getScript:function(a,b){return r.get(a,void 0,b,\"script\")}}),r.each([\"get\",\"post\"],function(a,b){r[b]=function(a,c,d,e){return r.isFunction(c)&&(e=e||d,d=c,c=void 0),r.ajax(r.extend({url:a,type:b,dataType:e,data:c,success:d},r.isPlainObject(a)&&a))}}),r._evalUrl=function(a){return r.ajax({url:a,type:\"GET\",dataType:\"script\",cache:!0,async:!1,global:!1,\"throws\":!0})},r.fn.extend({wrapAll:function(a){var b;return this[0]&&(r.isFunction(a)&&(a=a.call(this[0])),b=r(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this},wrapInner:function(a){return r.isFunction(a)?this.each(function(b){r(this).wrapInner(a.call(this,b))}):this.each(function(){var b=r(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=r.isFunction(a);return this.each(function(c){r(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(a){return this.parent(a).not(\"body\").each(function(){r(this).replaceWith(this.childNodes)}),this}}),r.expr.pseudos.hidden=function(a){return!r.expr.pseudos.visible(a)},r.expr.pseudos.visible=function(a){return!!(a.offsetWidth||a.offsetHeight||a.getClientRects().length)},r.ajaxSettings.xhr=function(){try{return new a.XMLHttpRequest}catch(b){}};var Ob={0:200,1223:204},Pb=r.ajaxSettings.xhr();o.cors=!!Pb&&\"withCredentials\"in Pb,o.ajax=Pb=!!Pb,r.ajaxTransport(function(b){var c,d;if(o.cors||Pb&&!b.crossDomain)return{send:function(e,f){var g,h=b.xhr();if(h.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(g in b.xhrFields)h[g]=b.xhrFields[g];b.mimeType&&h.overrideMimeType&&h.overrideMimeType(b.mimeType),b.crossDomain||e[\"X-Requested-With\"]||(e[\"X-Requested-With\"]=\"XMLHttpRequest\");for(g in e)h.setRequestHeader(g,e[g]);c=function(a){return function(){c&&(c=d=h.onload=h.onerror=h.onabort=h.onreadystatechange=null,\"abort\"===a?h.abort():\"error\"===a?\"number\"!=typeof h.status?f(0,\"error\"):f(h.status,h.statusText):f(Ob[h.status]||h.status,h.statusText,\"text\"!==(h.responseType||\"text\")||\"string\"!=typeof h.responseText?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}},h.onload=c(),d=h.onerror=c(\"error\"),void 0!==h.onabort?h.onabort=d:h.onreadystatechange=function(){4===h.readyState&&a.setTimeout(function(){c&&d()})},c=c(\"abort\");try{h.send(b.hasContent&&b.data||null)}catch(i){if(c)throw i}},abort:function(){c&&c()}}}),r.ajaxPrefilter(function(a){a.crossDomain&&(a.contents.script=!1)}),r.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/\\b(?:java|ecma)script\\b/},converters:{\"text script\":function(a){return r.globalEval(a),a}}}),r.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),r.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(e,f){b=r(\"<script>\").prop({charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&f(\"error\"===a.type?404:200,a.type)}),d.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Qb=[],Rb=/(=)\\?(?=&|$)|\\?\\?/;r.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Qb.pop()||r.expando+\"_\"+rb++;return this[a]=!0,a}}),r.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Rb.test(b.url)?\"url\":\"string\"==typeof b.data&&0===(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Rb.test(b.data)&&\"data\");if(h||\"jsonp\"===b.dataTypes[0])return e=b.jsonpCallback=r.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Rb,\"$1\"+e):b.jsonp!==!1&&(b.url+=(sb.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||r.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?r(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Qb.push(e)),g&&r.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"}),o.createHTMLDocument=function(){var a=d.implementation.createHTMLDocument(\"\").body;return a.innerHTML=\"<form></form><form></form>\",2===a.childNodes.length}(),r.parseHTML=function(a,b,c){if(\"string\"!=typeof a)return[];\"boolean\"==typeof b&&(c=b,b=!1);var e,f,g;return b||(o.createHTMLDocument?(b=d.implementation.createHTMLDocument(\"\"),e=b.createElement(\"base\"),e.href=d.location.href,b.head.appendChild(e)):b=d),f=B.exec(a),g=!c&&[],f?[b.createElement(f[1])]:(f=pa([a],b,g),g&&g.length&&r(g).remove(),r.merge([],f.childNodes))},r.fn.load=function(a,b,c){var d,e,f,g=this,h=a.indexOf(\" \");return h>-1&&(d=mb(a.slice(h)),a=a.slice(0,h)),r.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&r.ajax({url:a,type:e||\"GET\",dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?r(\"<div>\").append(r.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},r.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){r.fn[b]=function(a){return this.on(b,a)}}),r.expr.pseudos.animated=function(a){return r.grep(r.timers,function(b){return a===b.elem}).length};function Sb(a){return r.isWindow(a)?a:9===a.nodeType&&a.defaultView}r.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=r.css(a,\"position\"),l=r(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=r.css(a,\"top\"),i=r.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),r.isFunction(b)&&(b=b.call(a,c,r.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},r.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){r.offset.setOffset(this,a,b)});var b,c,d,e,f=this[0];if(f)return f.getClientRects().length?(d=f.getBoundingClientRect(),d.width||d.height?(e=f.ownerDocument,c=Sb(e),b=e.documentElement,{top:d.top+c.pageYOffset-b.clientTop,left:d.left+c.pageXOffset-b.clientLeft}):d):{top:0,left:0}},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===r.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),r.nodeName(a[0],\"html\")||(d=a.offset()),d={top:d.top+r.css(a[0],\"borderTopWidth\",!0),left:d.left+r.css(a[0],\"borderLeftWidth\",!0)}),{top:b.top-d.top-r.css(c,\"marginTop\",!0),left:b.left-d.left-r.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&\"static\"===r.css(a,\"position\"))a=a.offsetParent;return a||qa})}}),r.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(a,b){var c=\"pageYOffset\"===b;r.fn[a]=function(d){return S(this,function(a,d,e){var f=Sb(a);return void 0===e?f?f[b]:a[d]:void(f?f.scrollTo(c?f.pageXOffset:e,c?e:f.pageYOffset):a[d]=e)},a,d,arguments.length)}}),r.each([\"top\",\"left\"],function(a,b){r.cssHooks[b]=Oa(o.pixelPosition,function(a,c){if(c)return c=Na(a,b),La.test(c)?r(a).position()[b]+\"px\":c})}),r.each({Height:\"height\",Width:\"width\"},function(a,b){r.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){r.fn[d]=function(e,f){var g=arguments.length&&(c||\"boolean\"!=typeof e),h=c||(e===!0||f===!0?\"margin\":\"border\");return S(this,function(b,c,e){var f;return r.isWindow(b)?0===d.indexOf(\"outer\")?b[\"inner\"+a]:b.document.documentElement[\"client\"+a]:9===b.nodeType?(f=b.documentElement,Math.max(b.body[\"scroll\"+a],f[\"scroll\"+a],b.body[\"offset\"+a],f[\"offset\"+a],f[\"client\"+a])):void 0===e?r.css(b,c,h):r.style(b,c,e,h)},b,g?e:void 0,g)}})}),r.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}}),r.parseJSON=JSON.parse,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return r});var Tb=a.jQuery,Ub=a.$;return r.noConflict=function(b){return a.$===r&&(a.$=Ub),b&&a.jQuery===r&&(a.jQuery=Tb),r},b||(a.jQuery=a.$=r),r});\n"};

const char style_css[] PROGMEM={"\nheader {\n    /* background-color: #27ace5; */\n\tbackground-color: #7f7f7f;\n}\n\n*, *:before, *:after {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 10px;\n  /* font-family: 'Open Sans', 'sans-serif'; */\n  font-family: Tahoma, Arial, Helvetica, Sans-Serif;\n  /* background-color: #7f7f7f; */\n  background-color: #282828;\n  color: #444;\n}\n\nh1, p {\n  margin: 0 0 1em 0;\n}\n\n.wrapper {\n  max-width: 600px;\n  margin: 0 20px;\n  display: grid;\n  grid-gap: 10px;\n}\n\n@media screen and (min-width: 500px) {\n\n  /* no grid support? */\n  .sidebar {\n    float: left;\n    width: 19.1489%;\n  }\n\n  .content {\n    float: right;\n    width: 79.7872%;\n  }\n\n  .wrapper {\n    margin: 0 auto;\n    grid-template-columns: 1fr 3fr;\n  }\n  \n  .header, .footer {\n    grid-column: 1 / -1;\n    /* needed for the floated layout */\n    clear: both;\n  }\n\n}\n\n.wrapper > * {\n  /* background-color: #282828; */\n  background-color: #7f7f7f;\n  color: #fff;\n  border-radius: 5px;\n\n  padding: 10px;\n  font-size: 100%;\n  /* needed for the floated layout*/\n  margin-bottom: 10px;\n}\n\n/* We need to set the widths used on floated items back to auto, and remove the bottom margin as when we have grid we have gaps. */\n@supports (display: grid) {\n  .wrapper > * {\n    width: auto;\n    margin: 0;\n  }\n}\n\n/*\nimg:hover {\n    cursor: pointer;\n}\n*/\n\n.mousechange:hover {\n  cursor: pointer;\n}\n\ndiv {\n  border: 0px solid black;\n  padding: 20px;\n}\n\nh1 {\n  text-align: left;\n  text-transform: uppercase;\n  color: #ffffff;\n  display: block;\n  font-size: 2em;\n  margin-top: 0.12em;\n  margin-bottom: 0.12em;\n  margin-left: 0;\n  margin-right: 0;\n  font-weight: bold;\n}\n\nh2 {\n  text-align: left;\n  text-transform: lowercase;\n  color: #282828;\n  display: block;\n  font-size: 1em;\n  margin-top: 0.67em;\n  margin-bottom: 0.67em;\n  margin-left: 0;\n  margin-right: 0;\n  font-weight: bold;\n}\n\nh3 {\n  text-align: left;\n  text-transform: lowercase;\n  color: #282828;\n  display: block;\n  font-size: 0.67em;\n  margin-top: 0.67em;\n  margin-bottom: 0.67em;\n  margin-left: 0;\n  margin-right: 0;\n  font-weight: normal;\n}\n\np {\n  text-indent: 50px;\n  text-align: justify;\n  letter-spacing: 3px;\n}\n\na {\n  text-decoration: none;\n  color: #ffff83;\n}\n\nheader h1 {\n\ttext-indent: 10px;\n    text-align: left;\n    font-size: 2em;\n    color: #282828;\n    padding-bottom: 1px;\n\tpadding-top: 0px;\n}\n\nfooter h1 {\n    text-align: left;\n    font-size: 0.8em;\n    color: #282828;\n    padding-bottom: 1px;\n\tpadding-top: 4px;\n}\n\nheader img {\n    width: 47px;\n    margin-top: -3px;\n    float: left;\n}\nul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n    background-color: #333;\n}\nli {\n    float: left;\n}\nli a {\n    display: block;\n    color: white;\n    text-align: center;\n    padding: 14px 16px;\n    text-decoration: none;\n}\nli a:hover:not(.active) {\n    background-color: #111;\n}\n.active {\n    background-color: #4CAF50;\n}\ntable {\n    border-collapse: collapse;\n    width: 100%;\n}\ntable#inputsTable {\n    border-collapse: collapse;\n    width: 70%;\n}\nth,\ntd {\n    text-align: left;\n    padding: 8px;\n}\ntr:nth-child(even) {\n    background-color: #f2f2f2\n}\nth {\n    background-color: #4CAF50;\n    color: white;\n}\nsection {\n    width: 60%;\n    margin: 10px;\n}\n.button {\n    display: inline-block;\n    padding: 10px 15px;\n    font-size: 15px;\n    cursor: pointer;\n    text-align: center;\n    text-decoration: none;\n    outline: none;\n    color: #fff;\n    background-color: #282828;\n    border: none;\n    border-radius: 8px;\n    box-shadow: 0 2px #999;\n}\n.button:hover {\n    background-color: #282828;\n}\n.button:active {\n    background-color: #686868;\n    box-shadow: 0 3px #666;\n    transform: translateY(4px);\n}\ninput[type=text],\nselect {\n    width: 25%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    box-sizing: border-box;\n}\n.container {\n    width: 300px;\n    margin: 0;\n    text-align: center;\n}\n.gauge {\n    width:  250px;\n    height: 250px;\n}" };

const char* mqtt_server = "xxx.xxx.xxx.xxx"; // IPAddress mqtt_server;
const int mqttPort = 1883;
const char* mqttUser = "BLS01";
const char* mqttPassword = "xxxxxxxx";
const char* mqtt_device = "BLS01";
const char* wifi_appName = "BLS01-AP";

WiFiClient espClient;
PubSubClient client(espClient);
long lastMsg = 0;
char msg[50];
int value = 0;

const char* outTopic = "home/BLS01/Bls1out";
const char* inTopic = "home/BLS01/Bls1in";
const char* ipTopic = "home/BLS01/Bls1ip";
const char* recTopic = "home/BLS01/Bls1rec";

int led_pin = 0;
int button_pin = 3;
bool ledState = LOW;

// Instantiate a Bounce object :
Bounce debouncer = Bounce();

#define EEPROM_SIZE 1

ESP8266WebServer server(80);

// ----------------------------------------------------------------------------------------

void handleRoot() {
  server.send_P(200, "text/html", index_html);
}

// ----------------------------------------------------------------------------------------

void handleBulbOn(){
  server.send_P(200,"image/png",bulb_on_png,sizeof(bulb_on_png));
}

// ----------------------------------------------------------------------------------------

void handleBulbOff(){
  server.send_P(200,"image/png",bulb_off_png,sizeof(bulb_off_png));
}

// ----------------------------------------------------------------------------------------

void handleFavicon(){
  server.send_P(200,"image/ico",favicon_ico,sizeof(favicon_ico));
}

// ----------------------------------------------------------------------------------------

void handleFavi144(){
  server.send_P(200,"image/png",favicon_144x144_png,sizeof(favicon_144x144_png));
}

// ----------------------------------------------------------------------------------------
void handlejQuery(){
	server.send_P(200,"application/x-javascript",jquery_js);
}

// ----------------------------------------------------------------------------------------

void handleCss(){
  server.send_P(200,"text/css",style_css);
}

// ----------------------------------------------------------------------------------------

void writeToEeprom()
{ 
  EEPROM.write(0, ledState);    // Write state to EEPROM
   EEPROM.commit();
     if (ledState == 1){
      client.publish(outTopic, "1");
     }
     else if (ledState == 0){
      client.publish(outTopic, "0");
     }

  String ipaddress = WiFi.localIP().toString();
  char ipchar[ipaddress.length()+1];
  ipaddress.toCharArray(ipchar,ipaddress.length()+1);
  client.publish(ipTopic, ipchar);
}

// ----------------------------------------------------------------------------------------

void handleDigitalOutput(){	
	String response="";		
	digitalWrite(led_pin, !digitalRead(led_pin));     
	response+=!digitalRead(led_pin);
	server.send(200,"text",response);
  writeToEeprom();
}

// ----------------------------------------------------------------------------------------

void handleNotFound(){
  String message = "File Not Found\n\n";
  server.send(404, "text/plain", message);
}

// ----------------------------------------------------------------------------------------

void setup_wifi() {
  // connecting to a WiFi network
  delay(10);
  Serial.println();
  Serial.print("Connecting");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
  
  WiFiManager wifiManager;
  wifiManager.autoConnect(wifi_appName);
}

// ----------------------------------------------------------------------------------------

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
  Serial.println();

  // Switch off the LED if an 1 was received as first character
  if ((char)payload[0] == '0') {
    digitalWrite(led_pin, LOW);   // Turn the LED on (Note that LOW is the voltage level
    Serial.println("led_pin -> LOW");
    ledState = LOW;
    EEPROM.write(0, ledState);    // Write state to EEPROM
    EEPROM.commit();
  } else if ((char)payload[0] == '1') {
    digitalWrite(led_pin, HIGH);  // Turn the LED off by making the voltage HIGH
    Serial.println("led_pin -> HIGH");
    ledState = HIGH;
    EEPROM.write(0, ledState);    // Write state to EEPROM
    EEPROM.commit();
  } else if ((char)payload[0] == '2') {
    ledState = !ledState;
    digitalWrite(led_pin, ledState);  // Turn the LED off or on by making the voltage HIGH or LOW
    Serial.print("led_pin -> switched to ");
    Serial.println(ledState);
    EEPROM.write(0, ledState);    // Write state to EEPROM
    EEPROM.commit();
  }
  writeToEeprom();
}

// ----------------------------------------------------------------------------------------

void extButton() {
  debouncer.update();
   
   // Call code if Bounce fell (transition from HIGH to LOW) :
   if ( debouncer.fell() ) {
     Serial.println("Debouncer fell");
     // Toggle led state :
     ledState = !ledState;
     digitalWrite(led_pin,ledState);
    writeToEeprom();
   }
}

// ----------------------------------------------------------------------------------------

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Attempt to connect
    if (client.connect(mqtt_device, mqttUser, mqttPassword)) {
      Serial.println("connected");
      // Once connected, publish an announcement...
      client.publish(recTopic, "reconnect");
      if (ledState == 1){
      client.publish(outTopic, "1");
     }
     else if (ledState == 0){
      client.publish(outTopic, "0");
     }
      // ... and resubscribe
      client.subscribe(inTopic);
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      for(int i = 0; i<5000; i++){
        extButton();
        delay(1);
      }
    }
  }
}


// ----------------------------------------------------------------------------------------

void setup() {
  Serial.begin(115200,SERIAL_8N1,SERIAL_TX_ONLY);
  EEPROM.begin(512);              // Begin eeprom to store on/off state
  pinMode(led_pin, OUTPUT);     // Initialize the led pin as an output
  pinMode(button_pin, INPUT_PULLUP);     // Initialize the button pin as an input
  ledState = EEPROM.read(0);
  digitalWrite(led_pin,ledState);
 
  debouncer.attach(button_pin);   // Use the bounce2 library to debounce the button
  debouncer.interval(50);         // Input must be low for 50 ms

  setup_wifi();                   // Connect to wifi
  client.setServer(mqtt_server, mqttPort);
  client.setCallback(callback);
  
  server.on("/", handleRoot);

  server.on("/bulb_off.png",handleBulbOff);
  server.on("/bulb_on.png",handleBulbOn);
  server.on("/favicon.ico",handleFavicon);
  server.on("/favicon_144x144.png",handleFavi144);

  server.on("/jquery.min.js",handlejQuery);
  server.on("/digital_output/toggle",handleDigitalOutput);
  server.on("/style.css",handleCss);

  server.onNotFound(handleNotFound);

  server.begin();
}

// ----------------------------------------------------------------------------------------

void loop() {

  if (!client.connected()) {
    reconnect();
  }
  client.loop();
  server.handleClient();
  extButton();
  
}
